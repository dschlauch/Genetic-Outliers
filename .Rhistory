simMat <- as.matrix(x)[subset,subset]
diag(simMat)<-0
rownames(simMat) <- group[subset]
colnames(simMat) <- pop[subset]
hc <- hclust(as.dist(1-simMat),method="average")
d <- dendrapply(as.dendrogram(hc, hang=max(simMat)*.1), labelCol)
plot(d, main="Hierarchical Clustering across superpopulations", ylim=c(1-max(simMat)*1.25,1))
simMat[simMat>.005]<-.005
dev.off()
heatmap.2(simMat, Rowv=d, Colv=d, dendrogram="none", trace="none", main=title,
labRow="",labCol="",key=FALSE, RowSideColors=colorCodes[rownames(simMat)], ColSideColors=colorCodesPop[colnames(simMat)],
#           lwid = c(1,10),lhei = c(.01,5), margins = c(5,10))
)
legend(.1,.5, names(colorCodes), inset=c(-0.01,0),  lty=1, lwd=10, col=colorCodes, cex = 0.75)
legend("topright", names(colorCodesPop[1:13]),  lty=1, lwd=10, col=colorCodesPop[1:13], cex = 0.5, horiz = T,  inset=c(0,.05))
legend("topright", names(colorCodesPop[14:26]),  lty=1, lwd=10, col=colorCodesPop[14:26], cex = 0.5, horiz = T,  inset=c(0,.10))
}
plotHeatmap(jaccardMatrix)
plotHeatmap <-  function(x, subset=NA, title="GSM"){
if(is.na(subset)){
subset <- rep(T,2504)
}
simMat <- as.matrix(x)[subset,subset]
diag(simMat)<-0
rownames(simMat) <- group[subset]
colnames(simMat) <- pop[subset]
hc <- hclust(as.dist(1-simMat),method="average")
d <- dendrapply(as.dendrogram(hc, hang=max(simMat)*.1), labelCol)
plot(d, main="Hierarchical Clustering across superpopulations", ylim=c(1-max(simMat)*1.25,1))
simMat[simMat>.005]<-.005
dev.off()
heatmap.2(simMat, Rowv=d, Colv=d, dendrogram="none", trace="none", main=title,
labRow="",labCol="",key=FALSE, RowSideColors=colorCodes[rownames(simMat)], ColSideColors=colorCodesPop[colnames(simMat)],
#           lwid = c(1,10),lhei = c(.01,5), margins = c(5,10))
)
legend(.1,.5, names(colorCodes), inset=c(-0.01,0),  lty=1, lwd=10, col=colorCodes, cex = 0.75)
legend("topright", names(colorCodesPop[1:13]),  lty=1, lwd=10, col=colorCodesPop[1:13], cex = 0.5, horiz = T,  inset=c(0,.05))
legend("topright", names(colorCodesPop[14:26]),  lty=1, lwd=10, col=colorCodesPop[14:26], cex = 0.5, horiz = T,  inset=c(0,.10))
}
plotHeatmap(varcovMatrix,"Varcov GSM")
dim(varcovMatrix)
subset
plotHeatmap <-  function(x, subset=NA, title="GSM"){
if(is.na(subset)){
subset <- rep(T,nrow(x))
}
simMat <- as.matrix(x)[subset,subset]
diag(simMat)<-0
rownames(simMat) <- group[subset]
colnames(simMat) <- pop[subset]
hc <- hclust(as.dist(1-simMat),method="average")
d <- dendrapply(as.dendrogram(hc, hang=max(simMat)*.1), labelCol)
plot(d, main="Hierarchical Clustering across superpopulations", ylim=c(1-max(simMat)*1.25,1))
simMat[simMat>.005]<-.005
dev.off()
heatmap.2(simMat, Rowv=d, Colv=d, dendrogram="none", trace="none", main=title,
labRow="",labCol="",key=FALSE, RowSideColors=colorCodes[rownames(simMat)], ColSideColors=colorCodesPop[colnames(simMat)],
#           lwid = c(1,10),lhei = c(.01,5), margins = c(5,10))
)
legend(.1,.5, names(colorCodes), inset=c(-0.01,0),  lty=1, lwd=10, col=colorCodes, cex = 0.75)
legend("topright", names(colorCodesPop[1:13]),  lty=1, lwd=10, col=colorCodesPop[1:13], cex = 0.5, horiz = T,  inset=c(0,.05))
legend("topright", names(colorCodesPop[14:26]),  lty=1, lwd=10, col=colorCodesPop[14:26], cex = 0.5, horiz = T,  inset=c(0,.10))
}
dim(varcovMatrix)
plotHeatmap(varcovMatrix,"Varcov GSM")
plotHeatmap <-  function(x, subset=NA, title="GSM"){
if(is.na(subset)){
subset <- rep(T,nrow(x))
}
print(dim(x))
simMat <- as.matrix(x)[subset,subset]
diag(simMat)<-0
rownames(simMat) <- group[subset]
colnames(simMat) <- pop[subset]
hc <- hclust(as.dist(1-simMat),method="average")
d <- dendrapply(as.dendrogram(hc, hang=max(simMat)*.1), labelCol)
plot(d, main="Hierarchical Clustering across superpopulations", ylim=c(1-max(simMat)*1.25,1))
simMat[simMat>.005]<-.005
dev.off()
heatmap.2(simMat, Rowv=d, Colv=d, dendrogram="none", trace="none", main=title,
labRow="",labCol="",key=FALSE, RowSideColors=colorCodes[rownames(simMat)], ColSideColors=colorCodesPop[colnames(simMat)],
#           lwid = c(1,10),lhei = c(.01,5), margins = c(5,10))
)
legend(.1,.5, names(colorCodes), inset=c(-0.01,0),  lty=1, lwd=10, col=colorCodes, cex = 0.75)
legend("topright", names(colorCodesPop[1:13]),  lty=1, lwd=10, col=colorCodesPop[1:13], cex = 0.5, horiz = T,  inset=c(0,.05))
legend("topright", names(colorCodesPop[14:26]),  lty=1, lwd=10, col=colorCodesPop[14:26], cex = 0.5, horiz = T,  inset=c(0,.10))
}
plotHeatmap(varcovMatrix,"Varcov GSM")
subset
length(subset)
plotHeatmap(jaccardMatrix,"Rare jaccard GSM")
subset<-NA
plotHeatmap(jaccardMatrix,"Rare jaccard GSM")
if(is.na(subset)){
subset <- rep(T,nrow(x))
}
x<-varcovMatrix
if(is.na(subset)){
subset <- rep(T,nrow(x))
}
print(dim(x))
simMat <- as.matrix(x)[subset,subset]
plotHeatmap(varcovMatrix,title="Varcov GSM")
quantile(varcovMatrix)
quantile(1:100)
quantile(varcovMatrix,.5)
median(c(varcovMatrix))
median(varcovMatrix)
class(varcovMatrix)
median(c(simMat))
varcovMatrix[1:5,1:5]
median(simMat)
plotHeatmap <-  function(x, subset=NA, title="GSM"){
if(is.na(subset)){
subset <- rep(T,nrow(x))
}
simMat <- as.matrix(x)[subset,subset]
diag(simMat)<-0
rownames(simMat) <- group[subset]
colnames(simMat) <- pop[subset]
hc <- hclust(as.dist(1-simMat),method="average")
d <- dendrapply(as.dendrogram(hc, hang=max(simMat)*.1), labelCol)
plot(d, main="Hierarchical Clustering across superpopulations", ylim=c(1-max(simMat)*1.25,1))
#     simMat[simMat>.005]<-.005
simMat[simMat>median(simMat)]<-median(simMat)
dev.off()
heatmap.2(simMat, Rowv=d, Colv=d, dendrogram="none", trace="none", main=title,
labRow="",labCol="",key=FALSE, RowSideColors=colorCodes[rownames(simMat)], ColSideColors=colorCodesPop[colnames(simMat)],
#           lwid = c(1,10),lhei = c(.01,5), margins = c(5,10))
)
legend(.1,.5, names(colorCodes), inset=c(-0.01,0),  lty=1, lwd=10, col=colorCodes, cex = 0.75)
legend("topright", names(colorCodesPop[1:13]),  lty=1, lwd=10, col=colorCodesPop[1:13], cex = 0.5, horiz = T,  inset=c(0,.05))
legend("topright", names(colorCodesPop[14:26]),  lty=1, lwd=10, col=colorCodesPop[14:26], cex = 0.5, horiz = T,  inset=c(0,.10))
}
plotHeatmap(jaccardMatrix,title="Rare jaccard GSM")
plotHeatmap <-  function(x, subset=NA, title="GSM"){
if(is.na(subset)){
subset <- rep(T,nrow(x))
}
simMat <- as.matrix(x)[subset,subset]
diag(simMat)<-0
rownames(simMat) <- group[subset]
colnames(simMat) <- pop[subset]
hc <- hclust(as.dist(1-simMat),method="average")
d <- dendrapply(as.dendrogram(hc, hang=max(simMat)*.1), labelCol)
plot(d, main="Hierarchical Clustering across superpopulations", ylim=c(1-max(simMat)*1.25,1))
#     simMat[simMat>.005]<-.005
simMat[simMat>median(simMat)]<-median(simMat)
dev.off()
heatmap.2(simMat, Rowv=d, Colv=d, dendrogram="none", trace="none", main=title, col="bluered",
labRow="",labCol="",key=FALSE, RowSideColors=colorCodes[rownames(simMat)], ColSideColors=colorCodesPop[colnames(simMat)],
#           lwid = c(1,10),lhei = c(.01,5), margins = c(5,10))
)
legend(.1,.5, names(colorCodes), inset=c(-0.01,0),  lty=1, lwd=10, col=colorCodes, cex = 0.75)
legend("topright", names(colorCodesPop[1:13]),  lty=1, lwd=10, col=colorCodesPop[1:13], cex = 0.5, horiz = T,  inset=c(0,.05))
legend("topright", names(colorCodesPop[14:26]),  lty=1, lwd=10, col=colorCodesPop[14:26], cex = 0.5, horiz = T,  inset=c(0,.10))
}
plotHeatmap(jaccardMatrix,title="Rare jaccard GSM")
quantile(simMat,.25)
quantile(simMat,.5)
plotHeatmap <-  function(x, subset=NA, title="GSM"){
if(is.na(subset)){
subset <- rep(T,nrow(x))
}
simMat <- as.matrix(x)[subset,subset]
diag(simMat)<-0
rownames(simMat) <- group[subset]
colnames(simMat) <- pop[subset]
hc <- hclust(as.dist(1-simMat),method="average")
d <- dendrapply(as.dendrogram(hc, hang=max(simMat)*.1), labelCol)
plot(d, main="Hierarchical Clustering across superpopulations", ylim=c(1-max(simMat)*1.25,1))
#     simMat[simMat>.005]<-.005
simMat[simMat>quantile(simMat,.25)]<-median(simMat)
dev.off()
heatmap.2(simMat, Rowv=d, Colv=d, dendrogram="none", trace="none", main=title, col="bluered",
labRow="",labCol="",key=FALSE, RowSideColors=colorCodes[rownames(simMat)], ColSideColors=colorCodesPop[colnames(simMat)],
#           lwid = c(1,10),lhei = c(.01,5), margins = c(5,10))
)
legend(.1,.5, names(colorCodes), inset=c(-0.01,0),  lty=1, lwd=10, col=colorCodes, cex = 0.75)
legend("topright", names(colorCodesPop[1:13]),  lty=1, lwd=10, col=colorCodesPop[1:13], cex = 0.5, horiz = T,  inset=c(0,.05))
legend("topright", names(colorCodesPop[14:26]),  lty=1, lwd=10, col=colorCodesPop[14:26], cex = 0.5, horiz = T,  inset=c(0,.10))
}
plotHeatmap(jaccardMatrix,title="Rare jaccard GSM")
plotHeatmap <-  function(x, subset=NA, title="GSM"){
if(is.na(subset)){
subset <- rep(T,nrow(x))
}
simMat <- as.matrix(x)[subset,subset]
diag(simMat)<-0
rownames(simMat) <- group[subset]
colnames(simMat) <- pop[subset]
hc <- hclust(as.dist(1-simMat),method="average")
d <- dendrapply(as.dendrogram(hc, hang=max(simMat)*.1), labelCol)
plot(d, main="Hierarchical Clustering across superpopulations", ylim=c(1-max(simMat)*1.25,1))
#     simMat[simMat>.005]<-.005
simMat[simMat>quantile(simMat,.75)]<-median(simMat)
dev.off()
heatmap.2(simMat, Rowv=d, Colv=d, dendrogram="none", trace="none", main=title, col="bluered",
labRow="",labCol="",key=FALSE, RowSideColors=colorCodes[rownames(simMat)], ColSideColors=colorCodesPop[colnames(simMat)],
#           lwid = c(1,10),lhei = c(.01,5), margins = c(5,10))
)
legend(.1,.5, names(colorCodes), inset=c(-0.01,0),  lty=1, lwd=10, col=colorCodes, cex = 0.75)
legend("topright", names(colorCodesPop[1:13]),  lty=1, lwd=10, col=colorCodesPop[1:13], cex = 0.5, horiz = T,  inset=c(0,.05))
legend("topright", names(colorCodesPop[14:26]),  lty=1, lwd=10, col=colorCodesPop[14:26], cex = 0.5, horiz = T,  inset=c(0,.10))
}
plotHeatmap(jaccardMatrix,title="Rare jaccard GSM")
x<-jaccardMatrix
if(is.na(subset)){
subset <- rep(T,nrow(x))
}
simMat <- as.matrix(x)[subset,subset]
diag(simMat)<-0
median(simMat)
sum(simMat>.005)
sum(simMat<.005)
quantile(simMat,.1)
quantile(simMat,.15)
quantile(simMat,.5)
quantile(simMat,.9)
quantile(simMat,.99)
plotHeatmap <-  function(x, subset=NA, title="GSM"){
if(is.na(subset)){
subset <- rep(T,nrow(x))
}
simMat <- as.matrix(x)[subset,subset]
diag(simMat)<-0
rownames(simMat) <- group[subset]
colnames(simMat) <- pop[subset]
hc <- hclust(as.dist(1-simMat),method="average")
d <- dendrapply(as.dendrogram(hc, hang=max(simMat)*.1), labelCol)
plot(d, main="Hierarchical Clustering across superpopulations", ylim=c(1-max(simMat)*1.25,1))
#     simMat[simMat>.005]<-.005
simMat[simMat>quantile(simMat,.99)]<-median(simMat)
dev.off()
heatmap.2(simMat, Rowv=d, Colv=d, dendrogram="none", trace="none", main=title, col="bluered",
labRow="",labCol="",key=FALSE, RowSideColors=colorCodes[rownames(simMat)], ColSideColors=colorCodesPop[colnames(simMat)],
#           lwid = c(1,10),lhei = c(.01,5), margins = c(5,10))
)
legend(.1,.5, names(colorCodes), inset=c(-0.01,0),  lty=1, lwd=10, col=colorCodes, cex = 0.75)
legend("topright", names(colorCodesPop[1:13]),  lty=1, lwd=10, col=colorCodesPop[1:13], cex = 0.5, horiz = T,  inset=c(0,.05))
legend("topright", names(colorCodesPop[14:26]),  lty=1, lwd=10, col=colorCodesPop[14:26], cex = 0.5, horiz = T,  inset=c(0,.10))
}
plotHeatmap(jaccardMatrix,title="Rare jaccard GSM")
plotHeatmap <-  function(x, subset=NA, title="GSM"){
if(is.na(subset)){
subset <- rep(T,nrow(x))
}
simMat <- as.matrix(x)[subset,subset]
diag(simMat)<-0
rownames(simMat) <- group[subset]
colnames(simMat) <- pop[subset]
hc <- hclust(as.dist(1-simMat),method="average")
d <- dendrapply(as.dendrogram(hc, hang=max(simMat)*.1), labelCol)
plot(d, main="Hierarchical Clustering across superpopulations", ylim=c(1-max(simMat)*1.25,1))
#     simMat[simMat>.005]<-.005
simMat[simMat>quantile(simMat,.99)]<-quantile(simMat,.99)
dev.off()
heatmap.2(simMat, Rowv=d, Colv=d, dendrogram="none", trace="none", main=title, col="bluered",
labRow="",labCol="",key=FALSE, RowSideColors=colorCodes[rownames(simMat)], ColSideColors=colorCodesPop[colnames(simMat)],
#           lwid = c(1,10),lhei = c(.01,5), margins = c(5,10))
)
legend(.1,.5, names(colorCodes), inset=c(-0.01,0),  lty=1, lwd=10, col=colorCodes, cex = 0.75)
legend("topright", names(colorCodesPop[1:13]),  lty=1, lwd=10, col=colorCodesPop[1:13], cex = 0.5, horiz = T,  inset=c(0,.05))
legend("topright", names(colorCodesPop[14:26]),  lty=1, lwd=10, col=colorCodesPop[14:26], cex = 0.5, horiz = T,  inset=c(0,.10))
}
plotHeatmap(jaccardMatrix,title="Rare jaccard GSM")
plotHeatmap(varcovMatrix,title="Varcov GSM")
plotHeatmap <-  function(x, subset=NA, title="GSM"){
if(is.na(subset)){
subset <- rep(T,nrow(x))
}
simMat <- as.matrix(x)[subset,subset]
diag(simMat)<-0
rownames(simMat) <- group[subset]
colnames(simMat) <- pop[subset]
hc <- hclust(as.dist(1-simMat),method="average")
d <- dendrapply(as.dendrogram(hc, hang=max(simMat)*.1), labelCol)
plot(d, main="Hierarchical Clustering across superpopulations", ylim=c(1-max(simMat)*1.25,1))
#     simMat[simMat>.005]<-.005
simMat[simMat>quantile(simMat,.99)]<-quantile(simMat,.99)
heatmap.2(simMat, Rowv=d, Colv=d, dendrogram="none", trace="none", main=title, col="bluered",
labRow="",labCol="",key=FALSE, RowSideColors=colorCodes[rownames(simMat)], ColSideColors=colorCodesPop[colnames(simMat)],
#           lwid = c(1,10),lhei = c(.01,5), margins = c(5,10))
)
legend(.1,.5, names(colorCodes), inset=c(-0.01,0),  lty=1, lwd=10, col=colorCodes, cex = 0.75)
legend("topright", names(colorCodesPop[1:13]),  lty=1, lwd=10, col=colorCodesPop[1:13], cex = 0.5, horiz = T,  inset=c(0,.05))
legend("topright", names(colorCodesPop[14:26]),  lty=1, lwd=10, col=colorCodesPop[14:26], cex = 0.5, horiz = T,  inset=c(0,.10))
}
plotHeatmap(jaccardMatrix,title="Rare jaccard GSM")
plotHeatmap(varcovMatrix,title="Varcov GSM")
plotHeatmap(varcovMatrix,title="Varcov GSM")
legend(.1,.5, names(colorCodes), inset=c(-0.01,0),  lty=1, lwd=10, col=colorCodes, cex = 0.75)
dev.off()
plotHeatmap(varcovMatrix,title="Varcov GSM")
legend(.1,.5, names(colorCodes), inset=c(-0.01,0),  lty=1, lwd=10, col=colorCodes, cex = 0.75)
legend("center", names(colorCodes), inset=c(-0.01,0),  lty=1, lwd=10, col=colorCodes, cex = 0.75)
legend(.2,.5, names(colorCodes), inset=c(-0.01,0),  lty=1, lwd=10, col=colorCodes, cex = 0.75)
table(pop,group)
legend("left", names(colorCodes), inset=c(-0.01,0),  lty=1, lwd=10, col=colorCodes, cex = 0.75)
legend("left", names(colorCodes),  lty=1, lwd=10, col=colorCodes, cex = 0.75)
legend("left", names(colorCodes), inset=c(0.1,0),  lty=1, lwd=10, col=colorCodes, cex = 0.75)
plotHeatmap <-  function(x, subset=NA, title="GSM"){
if(is.na(subset)){
subset <- rep(T,nrow(x))
}
simMat <- as.matrix(x)[subset,subset]
diag(simMat)<-0
rownames(simMat) <- group[subset]
colnames(simMat) <- pop[subset]
hc <- hclust(as.dist(1-simMat),method="average")
d <- dendrapply(as.dendrogram(hc, hang=max(simMat)*.1), labelCol)
plot(d, main="Hierarchical Clustering across superpopulations", ylim=c(1-max(simMat)*1.25,1))
#     simMat[simMat>.005]<-.005
simMat[simMat>quantile(simMat,.99)]<-quantile(simMat,.99)
heatmap.2(simMat, Rowv=d, Colv=d, dendrogram="none", trace="none", main=title, col="bluered",
labRow="",labCol="",key=FALSE, RowSideColors=colorCodes[rownames(simMat)], ColSideColors=colorCodesPop[colnames(simMat)],
#           lwid = c(1,10),lhei = c(.01,5), margins = c(5,10))
)
legend("left", names(colorCodes), inset=c(0.1,0),  lty=1, lwd=10, col=colorCodes, cex = 0.75)
legend("topright", names(colorCodesPop[1:13]),  lty=1, lwd=10, col=colorCodesPop[1:13], cex = 0.5, horiz = T,  inset=c(0,.05))
legend("topright", names(colorCodesPop[14:26]),  lty=1, lwd=10, col=colorCodesPop[14:26], cex = 0.5, horiz = T,  inset=c(0,.10))
}
plotHeatmap(jaccardMatrix,title="Rare jaccard GSM")
plotHeatmap(varcovMatrix,title="Varcov GSM")
phenotypeVariable=="binary"
chr <- "filtered100"
numRows <- 10000
varianceEstimate <- "ATT"
subpops <- c("all","all")
#subpops <- c("TSI","IBS")
args<-commandArgs(TRUE)
correctionMethods <- c("subpop","varcov","jaccard", "uncorrected")
phenotypeVariable <- "continuous" #"binary"
phenotypeVariable=="binary"
phenotypeVariable=="continuous"
source('~/1000GP/calculatePCA.R')
source('~/1000GP/associations-copy.R')
numRows <- 10000
varianceEstimate <- "ATT"
subpops <- c("all","all")
#subpops <- c("TSI","IBS")
args<-commandArgs(TRUE)
correctionMethods <- c("subpop","varcov","jaccard", "uncorrected")
phenotypeVariable <- "continuous" #"binary"
sapply(correctionMethods, function(method){
print(args)
runAndPlot(chr=chr,correctMethod=method, ATT=varianceEstimate, subpops=subpops, numEigenVectors=1, numRows=numRows)
gc()
})
numRows <- 20000
sapply(correctionMethods, function(method){
print(args)
runAndPlot(chr=chr,correctMethod=method, ATT=varianceEstimate, subpops=subpops, numEigenVectors=20, numRows=numRows)
gc()
})
chr
chr <- "filtered100"
numRows <- 30000
varianceEstimate <- "ATT"
subpops <- c("all","all")
correctionMethods <- c("subpop","varcov","jaccard", "uncorrected")
phenotypeVariable <- "continuous" #"binary"
source('~/1000GP/associations-copy.R')
sapply(correctionMethods, function(method){
print(args)
runAndPlot(chr=chr,correctMethod=method, ATT=varianceEstimate, subpops=subpops, numEigenVectors=20, numRows=numRows)
gc()
})
numRows
numRows <- 30000
sapply(correctionMethods, function(method){
print(args)
runAndPlot(chr=chr,correctMethod=method, ATT=varianceEstimate, subpops=subpops, numEigenVectors=20, numRows=numRows)
gc()
})
chr <- "filtered100"
sapply(correctionMethods, function(method){
print(args)
runAndPlot(chr=chr,correctMethod=method, ATT=varianceEstimate, subpops=subpops, numEigenVectors=20, numRows=numRows)
gc()
})
?glm
source("https://bioconductor.org/biocLite.R")
biocLite("GWASTools")
install.packages('ncdf')
install.packages('ncdf')
install.packages('libnetcdf-dev')
install.packages('libnetcdf-dev')
install.packages('ncdf')
source("https://bioconductor.org/biocLite.R")
biocLite("GWASTools")
y
covariates <- matrix(rnorm(1000*100),nrow=1000)
response <- rnorm(100)
exposure <- rnorm(100)
covariates <- rnorm(100)
exposure <- matrix(rnorm(1000*100),nrow=1000)
response <- rnorm(100)
covariates <- rnorm(100)
covariates <- cbind(1,rnorm(100))
covariates
covariates <- cbind(1,rnorm(100),rnorm(100))
glm(response~exposure+covariates)$coef
apply(exposure,1,function(x){
glm(response~x+covariates)$coef
})
res <- apply(exposure,1,function(x){
glm(response~x+covariates)$coef
})
dim(res)
res[,1:10]
res <- apply(exposure,1,function(x){
glm(response~x+covariates,family="binomial")$coef
})
response <- rbinom(100,1,.5)
res <- apply(exposure,1,function(x){
glm(response~x+covariates,family="binomial")$coef
})
res[,1:10]
covariates <- cbind(rnorm(100),rnorm(100))
res <- apply(exposure,1,function(x){
glm(response~x+covariates,family="binomial")$coef
})
res[,1:10]
?glm
names(res)
res <- glm(response~exposure[1,]+covariates,family="binomial")
res
summary(res)
summary(res)$Coef
coef(res)
coef(summary(res))
coef(summary(res))[2,4]
res <- apply(exposure,1,function(x){
coef(summary(glm(response~x+covariates,family="binomial")))[2,4]
})
res
exposure <- matrix(rnorm(1000*1000),nrow=1000)
response <- matrix(rnorm(300*1000),nrow=300)
covariates <- cbind(rnorm(100),rnorm(100))
res <- apply(exposure,1,function(x){
apply(exposure,2,function(y){
coef(summary(glm(y~x+covariates,family="binomial")))[2,4]
}
})
res <- apply(exposure,1,function(x){
apply(exposure,2,function(y){
coef(summary(glm(y~x+covariates,family="binomial")))[2,4]
})
})
res <- apply(exposure,1,function(x){
apply(exposure,1,function(y){
coef(summary(glm(y~x+covariates,family="binomial")))[2,4]
})
})
exposure <- matrix(rnorm(1000*1000),nrow=1000)
response <- matrix(rnorm(300*1000),nrow=300)
covariates <- cbind(rnorm(1000),rnorm(1000))
res <- apply(exposure,1,function(x){
apply(exposure,1,function(y){
coef(summary(glm(y~x+covariates,family="binomial")))[2,4]
})
})
response <- matrix(rbinom(300*1000,1,.5),nrow=300)
covariates <- cbind(rnorm(1000),rnorm(1000))
res <- apply(exposure,1,function(x){
apply(exposure,1,function(y){
coef(summary(glm(y~x+covariates,family="binomial")))[2,4]
})
})
response
res <- apply(exposure,1,function(x){
apply(exposure,1,function(y){
coef(summary(glm(y~x+covariates,family="binomial")))[2,4]
})
})
response[1:5,1:5]
apply(exposure,1,function(y){
sum(y)
})
res <- apply(exposure,1,function(x){
apply(response,1,function(y){
coef(summary(glm(y~x+covariates,family="binomial")))[2,4]
})
})
exposure <- matrix(rnorm(1000*1000),nrow=1000)
response <- matrix(rbinom(1000,1,.5),nrow=1)
covariates <- cbind(rnorm(1000),rnorm(1000))
res <- apply(exposure,1,function(x){
apply(response,1,function(y){
coef(summary(glm(y~x+covariates,family="binomial")))[2,4]
})
})
response <- matrix(rbinom(10*1000,1,.5),nrow=10)
covariates <- cbind(rnorm(1000),rnorm(1000))
res <- apply(exposure,1,function(x){
apply(response,1,function(y){
coef(summary(glm(y~x+covariates,family="binomial")))[2,4]
})
})
response <- matrix(rbinom(1*1000,1,.5),nrow=1)
response
exposure <- matrix(rnorm(1000*1000),nrow=1000)
response <- matrix(rbinom(1*1000,1,.5),nrow=1)
covariates <- cbind(rnorm(1000),rnorm(1000))
res <- apply(exposure,1,function(x){
apply(response,1,function(y){
coef(summary(glm(y~x+covariates,family="binomial")))[2,4]
})
})
res
hist(res)
