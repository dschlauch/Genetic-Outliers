theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust=.5, size=14),
axis.title = element_text(size=30), plot.title=element_text(size=30))
gt <- ggplot_gtable(ggplot_build(ggPVals))
gt$layout$clip[gt$layout$name == "panel"] <- "off"
pdf(paste0("./plots/s_distributions/",outputDir,"/pValueForPop.pdf"), width=8, height=8)
grid.draw(gt)
dev.off()
cor(subset(popResults,!pop%in%c("PEL","MXL","ASW","PUR"))$sampleVariance,subset(popResults,!pop%in%c("PEL","MXL","ASW","PUR"))$var_s)
apply(popResults,2,class)
popResults <- getPopResults(results, "var_s_dip", "s_matrix_dip")
apply(popResults,2,class)
apply(popResults[,2:6,with=F], 2, function(x){class(x) <- "numeric"})
apply(popResults,2,class)
class(popResults$structurePValue) <- "numeric"
apply(popResults,2,class)
set(popResults, NULL, ind[i], as.numeric(dt[[ind[i]]]))
?set
source('~/1000GP/s_matrix_functions.R')
popResults <- getPopResults(results, "var_s_dip", "s_matrix_dip")
popResults
popResults <- popResults[order(rn)[rank(popGroup$pop)]]
popResults$super <- popGroup$group
write.table(popResults[,c("rn","super", "structureSig", "crypticSig"), with=F],
paste0("./plots/s_distributions/",outputDir,"/popTable.txt"),quote =F, row.names=F, sep="\t",
col.names=c("Population","Super Population","Structure","Cryptic Relatedness"))
names(popResults)[1] <- "pop"
popResults$group <- popGroup[popResults$pop,"group"]
popResults <- popResults[order(group,pop)]
popResults$pop <- factor(popResults$pop, levels=popResults$pop)
maxYvalue <- 200
ggPVals <- ggplot(popResults, aes(y=-log(as.numeric(structureKSTest)), x=pop)) +
#     geom_hline(yintercept=-log(.05)) + #geom_text(aes(13,-log(.05),label = "alpha = .05", vjust = -1),parse = T) +
geom_hline(yintercept=0) +
geom_hline(yintercept=-log(.01), linetype='dashed', color="red") + #geom_text(aes(20,-log(.01),size=5,label = "alpha == .01", vjust = -1),parse = T) +
annotation_custom(
grob = textGrob(label = expression(alpha==.01), hjust = 0, gp = gpar(col="red",fontsize=10, cex = 1.5)),
ymin = -log(.01),      # Vertical position of the textGrob
ymax = -log(.01),
xmin = 27,         # Note: The grobs are positioned outside the plot area
xmax = 27) +
theme_bw() +
ylab("-log(p-value)") + xlab("Population") + ggtitle("Population Substructure") +
guides(color = guide_legend(title = "Super population")) +
ylim(0,maxYvalue) +
geom_point(aes(color=group),size=3) +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust=.5, size=14),
axis.title = element_text(size=30), plot.title=element_text(size=30))
gt <- ggplot_gtable(ggplot_build(ggPVals))
gt$layout$clip[gt$layout$name == "panel"] <- "off"
pdf(paste0("./plots/s_distributions/",outputDir,"/pValueForPop.pdf"), width=8, height=8)
grid.draw(gt)
dev.off()
cor(as.numeric(subset(popResults,!pop%in%c("PEL","MXL","ASW","PUR"))$sampleVariance),as.numeric(subset(popResults,!pop%in%c("PEL","MXL","ASW","PUR"))$var_s))
as.numeric(subset(popResults,!pop%in%c("PEL","MXL","ASW","PUR"))$sampleVariance)
varianceRatio <- popResults$sampleVariance/popResults$var_s
varianceRatio <- as.numeric(popResults$sampleVariance)/as.numeric(popResults$var_s)
varianceRatio
names(varianceRatio)<-popResults$pop
cbind(sort(varianceRatio, decreasing = TRUE))
sum(popResults$structurePValue<.01)
popResults$structurePValue[popResults$structurePValue<.01]
popResults <- popResults[order(popResults$structurePValue),]
structuredPops <- popResults$pop[popResults$structurePValue<.01]
# generate summary table --------------------------------------------------
structuredPops
sum(popResults$structurePValue<.01)
popResults
structuredPops <- popResults$pop[popResults$structurePValue<.01]
resTableAll <- data.table(do.call(rbind, lapply(unique(pop),function(pop_i){
result <- readRDS(paste0("./plots/s_distributions/",outputDir,"/plotdata/",pop_i, "_data.rds"))
result$s_matrix_dip[upper.tri(result$s_matrix_dip)] <- NA
diag(result$s_matrix_dip) <- NA
resTable <- melt(result$s_matrix_dip, na.rm=T)
resTable$estimatedCoK <- (resTable$value-1)/(result$pkweightsMean-1)
resTable$pop <- pop_i
colnames(resTable) <- c("SampleID_1","SampleID_2","s","CoK","pop")
resTable
})))
resTableAll
gazal_related_rev <- copy(gazal_related_orig)
setcolorder(gazal_related_rev, c(2,1,3,4,5))
names(gazal_related_rev)[1:2] <- names(gazal_related_rev)[2:1]
gazal_related <- rbind(gazal_related_orig,gazal_related_rev)
names(gazal_related)[1:2] <- names(resTableAll)[1:2]
resTableAll <- merge(resTableAll,gazal_related, by=names(gazal_related)[1:2],all.x=T)
resTableAll$group <- popGroup[resTableAll$pop,"group"]
sum(!is.na(resTableAll[,INFERED.RELATIONSHIP]))
resTableAll[SampleID_1=="HG00100"]
resTableAll[is.na(resTableAll[["INFERED.RELATIONSHIP"]]),"INFERED.RELATIONSHIP"]<- "Unrelated"
resTableAll$CombinedInfered <- "Unrelated"
resTableAll$CombinedInfered[resTableAll$INFERED.RELATIONSHIP=="CO"] <- "CO"
resTableAll$CombinedInfered[resTableAll$INFERED.RELATIONSHIP=="AV"|resTableAll$INFERED.RELATIONSHIP=="HS"] <- "AV or HS"
resTableAll$CombinedInfered[resTableAll$INFERED.RELATIONSHIP=="FS"|resTableAll$INFERED.RELATIONSHIP=="PO"] <- "FS or PO"
resTableAll[order(-CoK)]
# ggplot(resTableAll, aes(CombinedInfered, CoK)) +
#     geom_jitter(aes(alpha=(INFERED.RELATIONSHIP!="Unrelated")*.02)) + scale_x_discrete(limits=levels(resTableAll$INFERED.RELATIONSHIP)[c(6,2,1,4,3,5)])
# ggplot(resTableAll, aes(INFERED.RELATIONSHIP, CoK)) +
#     geom_boxplot() + scale_x_discrete(limits=levels(resTableAll$INFERED.RELATIONSHIP)[c(6,2,1,4,3,5)]) +xlab("Inferred Relationship (Gazal 2015)") + ylab("Estimated kinship")
ggCoKGazal <- ggplot(resTableAll, aes(CombinedInfered, CoK)) + theme_bw() +
geom_jitter(aes(color=group), alpha=.5) + scale_x_discrete(limits=c("Unrelated","CO","AV or HS", "FS or PO")) + geom_violin(alpha=.4) +
xlab("Inferred Relationship (Gazal 2015)") + ylab("Estimated kinship") + ggtitle("Estimated Kinship vs Inferred Relationship (Gazal 2015)") +
guides(color = guide_legend(title = "Super population")) +
theme(plot.title = element_text(size=20))
tiff(paste0("./plots/s_distributions/",outputDir,"/EstimatedCoKvsGazal.tiff"), width=900, height=900)
print(ggCoKGazal)
dev.off()
print(ggCoKGazal)
#     geom_boxplot() + scale_x_discrete(limits=levels(resTableAll$INFERED.RELATIONSHIP)[c(6,2,1,4,3,5)]) +xlab("Inferred Relationship (Gazal 2015)") + ylab("Estimated kinship")
ggCoKGazal <- ggplot(resTableAll, aes(CombinedInfered, CoK)) + theme_bw() +
geom_jitter(aes(color=group), alpha=.5) + scale_x_discrete(limits=c("Unrelated","CO","AV or HS", "FS or PO")) + geom_violin(alpha=.4) +
xlab("Inferred Relationship (Gazal 2015)") + ylab("Estimated kinship") + ggtitle("Estimated Kinship vs Inferred Relationship (Gazal 2015)") +
guides(color = guide_legend(title = "Super population")) +
theme(plot.title = element_text(size=20),
axis.title = element_text(size=30), plot.title=element_text(size=30))
print(ggCoKGazal)
#     geom_boxplot() + scale_x_discrete(limits=levels(resTableAll$INFERED.RELATIONSHIP)[c(6,2,1,4,3,5)]) +xlab("Inferred Relationship (Gazal 2015)") + ylab("Estimated kinship")
ggCoKGazal <- ggplot(resTableAll, aes(CombinedInfered, CoK)) + theme_bw() +
geom_jitter(aes(color=group), alpha=.5) + scale_x_discrete(limits=c("Unrelated","CO","AV or HS", "FS or PO")) + geom_violin(alpha=.4) +
xlab("Inferred Relationship (Gazal 2015)") + ylab("Estimated kinship") + ggtitle("Estimated Kinship vs Inferred Relationship (Gazal 2015)") +
guides(color = guide_legend(title = "Super population")) +
theme(plot.title = element_text(size=20),
axis.title = element_text(size=20))
print(ggCoKGazal)
ggCoKGazal <- ggplot(resTableAll, aes(CombinedInfered, CoK)) + theme_bw() +
geom_jitter(aes(color=group), alpha=.5) + scale_x_discrete(limits=c("Unrelated","CO","AV or HS", "FS or PO")) + geom_violin(alpha=.4) +
xlab("Inferred Relationship (Gazal 2015)") + ylab("Estimated kinship") + ggtitle("Estimated Kinship vs Inferred Relationship (Gazal 2015)") +
guides(color = guide_legend(title = "Super population")) +
theme(plot.title = element_text(size=20),
axis.text = element_text(size=14),
axis.title = element_text(size=20))
print(ggCoKGazal)
ggCoKGazal <- ggplot(resTableAll, aes(CombinedInfered, CoK)) + theme_bw() +
geom_jitter(aes(color=group), alpha=.5) + scale_x_discrete(limits=c("Unrelated","CO","AV or HS", "FS or PO")) + geom_violin(alpha=.4) +
xlab("Inferred Relationship (Gazal 2015)") + ylab("Estimated kinship") + ggtitle("Estimated Kinship vs Inferred Relationship (Gazal 2015)") +
guides(color = guide_legend(title = "Super population")) +
theme(plot.title = element_text(size=20),
axis.text = element_text(size=14),
axis.title = element_text(size=20),
legend.text = element_text(size=20))
ggCoKGazal
ggplot(resTableAll, aes(CombinedInfered, CoK)) + theme_bw() +
geom_jitter(aes(color=group), alpha=.5) + scale_x_discrete(limits=c("Unrelated","CO","AV or HS", "FS or PO")) + geom_violin(alpha=.4) +
xlab("Inferred Relationship (Gazal 2015)") + ylab("Estimated kinship") + ggtitle("Estimated Kinship vs Inferred Relationship (Gazal 2015)") +
guides(color = guide_legend(title = "Super population")) +
theme(plot.title = element_text(size=20),
axis.text = element_text(size=14),
axis.title = element_text(size=20),
legend.text = element_text(size=12))
ggCoKGazal <- ggplot(resTableAll, aes(CombinedInfered, CoK)) + theme_bw() +
geom_jitter(aes(color=group), alpha=.5) + scale_x_discrete(limits=c("Unrelated","CO","AV or HS", "FS or PO")) + geom_violin(alpha=.4) +
xlab("Inferred Relationship (Gazal 2015)") + ylab("Estimated kinship") + ggtitle("Estimated Kinship vs Inferred Relationship (Gazal 2015)") +
guides(color = guide_legend(title = "Super population")) +
theme(plot.title = element_text(size=20),
axis.text = element_text(size=14),
axis.title = element_text(size=20),
legend.text = element_text(size=12))
tiff(paste0("./plots/s_distributions/",outputDir,"/EstimatedCoKvsGazal.tiff"), width=900, height=900)
print(ggCoKGazal)
dev.off()
pdf(paste0("./plots/s_distributions/",outputDir,"/EstimatedCoKvsGazal.pdf"), width=8, height=8)
print(ggCoKGazal)
dev.off()
ggCoKGazalUnstructured <- ggplot(subset(resTableAll, !pop%in%structuredPops), aes(CombinedInfered, CoK)) + theme_bw() +
geom_jitter(aes(color=group), alpha=.5) + scale_x_discrete(limits=c("Unrelated","CO","AV or HS", "FS or PO")) + geom_violin(alpha=.4) +
xlab("Inferred Relationship (Gazal 2015)") + ylab("Estimated kinship") + ggtitle("Estimated Kinship vs Inferred Relationship (Gazal 2015)") +
theme(plot.title = element_text(size=20)) +
guides(color = guide_legend(title = "Super population"))
print(ggCoKGazalUnstructured)
!pop%in%structuredPops
structuredPops
popResults
structuredPops <- popResults$pop[popResults$structureKSTest<.01]
structuredPops
ggCoKGazalUnstructured <- ggplot(subset(resTableAll, !pop%in%structuredPops), aes(CombinedInfered, CoK)) + theme_bw() +
geom_jitter(aes(color=group), alpha=.5) + scale_x_discrete(limits=c("Unrelated","CO","AV or HS", "FS or PO")) + geom_violin(alpha=.4) +
xlab("Inferred Relationship (Gazal 2015)") + ylab("Estimated kinship") + ggtitle("Estimated Kinship vs Inferred Relationship (Gazal 2015)") +
theme(plot.title = element_text(size=20)) +
guides(color = guide_legend(title = "Super population"))
print(ggCoKGazalUnstructured)
popResults
structuredPops
popResults$structureKSTest
"asfasf"<.1
"asfasf"<1000
popResults$structureKSTest<.01
structuredPops <- popResults$pop[as.numeric(popResults$structureKSTest)<.01]
popResults$structurePValue[as.numeric(popResults$structureKSTest)<.01]
structuredPops <- popResults$pop[as.numeric(popResults$structureKSTest)<.01]
structuredPops
ggCoKGazalUnstructured <- ggplot(subset(resTableAll, !pop%in%structuredPops), aes(CombinedInfered, CoK)) + theme_bw() +
geom_jitter(aes(color=group), alpha=.5) + scale_x_discrete(limits=c("Unrelated","CO","AV or HS", "FS or PO")) + geom_violin(alpha=.4) +
xlab("Inferred Relationship (Gazal 2015)") + ylab("Estimated kinship") + ggtitle("Estimated Kinship vs Inferred Relationship (Gazal 2015)") +
theme(plot.title = element_text(size=20)) +
guides(color = guide_legend(title = "Super population"))
ggCoKGazalUnstructured
!pop%in%structuredPops
structuredPops
subset(resTableAll, !pop%in%structuredPops)
subset(resTableAll, !pop%in%structuredPops)
ggCoKGazalUnstructured <- ggplot(subset(resTableAll, !pop%in%structuredPops), aes(CombinedInfered, CoK)) + theme_bw() +
geom_jitter(aes(color=group), alpha=.5) + scale_x_discrete(limits=c("Unrelated","CO","AV or HS", "FS or PO")) + geom_violin(alpha=.4) +
xlab("Inferred Relationship (Gazal 2015)") + ylab("Estimated kinship") + ggtitle("Estimated Kinship vs Inferred Relationship (Gazal 2015)") +
theme(plot.title = element_text(size=20)) +
guides(color = guide_legend(title = "Super population"))
tiff(paste0("./plots/s_distributions/",outputDir,"/EstimatedCoKvsGazalUnstruct.tiff"), width=900, height=900)
print(ggCoKGazalUnstructured)
dev.off()
structuredPops
ggCoKGazalUnstructured <- ggplot(resTableAll, aes(CombinedInfered, CoK)) + theme_bw() +
geom_jitter(aes(color=group), alpha=.5) + scale_x_discrete(limits=c("Unrelated","CO","AV or HS", "FS or PO")) + geom_violin(alpha=.4) +
xlab("Inferred Relationship (Gazal 2015)") + ylab("Estimated kinship") + ggtitle("Estimated Kinship vs Inferred Relationship (Gazal 2015)") +
theme(plot.title = element_text(size=20)) +
guides(color = guide_legend(title = "Super population"))
print(ggCoKGazalUnstructured)
outputDir <- 'filtered40_TGP2261_LD10'
results <- readRDS(paste0("./plots/s_distributions/",outputDir,"/plotdata/all_data.rds"))
# Calculate structure significance ----------------------------------------
popResults <- getPopResults(results, "var_s_dip", "s_matrix_dip")
popResults <- popResults[order(rn)[rank(popGroup$pop)]]
popResults$super <- popGroup$group
write.table(popResults[,c("rn","super", "structureSig", "crypticSig"), with=F],
paste0("./plots/s_distributions/",outputDir,"/popTable.txt"),quote =F, row.names=F, sep="\t",
col.names=c("Population","Super Population","Structure","Cryptic Relatedness"))
# tidy up and plot structure results --------------------------------------
names(popResults)[1] <- "pop"
popResults$group <- popGroup[popResults$pop,"group"]
popResults <- popResults[order(group,pop)]
popResults$pop <- factor(popResults$pop, levels=popResults$pop)
maxYvalue <- 200
ggPVals <- ggplot(popResults, aes(y=-log(as.numeric(structureKSTest)), x=pop)) +
#     geom_hline(yintercept=-log(.05)) + #geom_text(aes(13,-log(.05),label = "alpha = .05", vjust = -1),parse = T) +
geom_hline(yintercept=0) +
geom_hline(yintercept=-log(.01), linetype='dashed', color="red") + #geom_text(aes(20,-log(.01),size=5,label = "alpha == .01", vjust = -1),parse = T) +
annotation_custom(
grob = textGrob(label = expression(alpha==.01), hjust = 0, gp = gpar(col="red",fontsize=10, cex = 1.5)),
ymin = -log(.01),      # Vertical position of the textGrob
ymax = -log(.01),
xmin = 27,         # Note: The grobs are positioned outside the plot area
xmax = 27) +
theme_bw() +
ylab("-log(p-value)") + xlab("Population") + ggtitle("Population Substructure") +
guides(color = guide_legend(title = "Super population")) +
ylim(0,maxYvalue) +
geom_point(aes(color=group),size=3) +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust=.5, size=14),
axis.title = element_text(size=30), plot.title=element_text(size=30))
gt <- ggplot_gtable(ggplot_build(ggPVals))
gt$layout$clip[gt$layout$name == "panel"] <- "off"
pdf(paste0("./plots/s_distributions/",outputDir,"/pValueForPop.pdf"), width=8, height=8)
grid.draw(gt)
dev.off()
grid.draw(gt)
cor(as.numeric(subset(popResults,!pop%in%c("PEL","MXL","ASW","PUR"))$sampleVariance),as.numeric(subset(popResults,!pop%in%c("PEL","MXL","ASW","PUR"))$var_s))
varianceRatio <- as.numeric(popResults$sampleVariance)/as.numeric(popResults$var_s)
names(varianceRatio)<-popResults$pop
cbind(sort(varianceRatio, decreasing = TRUE))
sum(popResults$structurePValue<.01)
popResults$structurePValue[as.numeric(popResults$structureKSTest)<.01]
popResults <- popResults[order(popResults$structurePValue),]
structuredPops <- popResults$pop[as.numeric(popResults$structureKSTest)<.01]
# generate summary table --------------------------------------------------
resTableAll <- data.table(do.call(rbind, lapply(unique(pop),function(pop_i){
result <- readRDS(paste0("./plots/s_distributions/",outputDir,"/plotdata/",pop_i, "_data.rds"))
result$s_matrix_dip[upper.tri(result$s_matrix_dip)] <- NA
diag(result$s_matrix_dip) <- NA
resTable <- melt(result$s_matrix_dip, na.rm=T)
resTable$estimatedCoK <- (resTable$value-1)/(result$pkweightsMean-1)
resTable$pop <- pop_i
colnames(resTable) <- c("SampleID_1","SampleID_2","s","CoK","pop")
resTable
})))
gazal_related_rev <- copy(gazal_related_orig)
setcolorder(gazal_related_rev, c(2,1,3,4,5))
names(gazal_related_rev)[1:2] <- names(gazal_related_rev)[2:1]
gazal_related <- rbind(gazal_related_orig,gazal_related_rev)
names(gazal_related)[1:2] <- names(resTableAll)[1:2]
resTableAll <- merge(resTableAll,gazal_related, by=names(gazal_related)[1:2],all.x=T)
resTableAll$group <- popGroup[resTableAll$pop,"group"]
sum(!is.na(resTableAll[,INFERED.RELATIONSHIP]))
resTableAll[SampleID_1=="HG00100"]
resTableAll[is.na(resTableAll[["INFERED.RELATIONSHIP"]]),"INFERED.RELATIONSHIP"]<- "Unrelated"
resTableAll$CombinedInfered <- "Unrelated"
resTableAll$CombinedInfered[resTableAll$INFERED.RELATIONSHIP=="CO"] <- "CO"
resTableAll$CombinedInfered[resTableAll$INFERED.RELATIONSHIP=="AV"|resTableAll$INFERED.RELATIONSHIP=="HS"] <- "AV or HS"
resTableAll$CombinedInfered[resTableAll$INFERED.RELATIONSHIP=="FS"|resTableAll$INFERED.RELATIONSHIP=="PO"] <- "FS or PO"
resTableAll[order(-CoK)]
# ggplot(resTableAll, aes(CombinedInfered, CoK)) +
#     geom_jitter(aes(alpha=(INFERED.RELATIONSHIP!="Unrelated")*.02)) + scale_x_discrete(limits=levels(resTableAll$INFERED.RELATIONSHIP)[c(6,2,1,4,3,5)])
# ggplot(resTableAll, aes(INFERED.RELATIONSHIP, CoK)) +
#     geom_boxplot() + scale_x_discrete(limits=levels(resTableAll$INFERED.RELATIONSHIP)[c(6,2,1,4,3,5)]) +xlab("Inferred Relationship (Gazal 2015)") + ylab("Estimated kinship")
ggCoKGazal <- ggplot(resTableAll, aes(CombinedInfered, CoK)) + theme_bw() +
geom_jitter(aes(color=group), alpha=.5) + scale_x_discrete(limits=c("Unrelated","CO","AV or HS", "FS or PO")) + geom_violin(alpha=.4) +
xlab("Inferred Relationship (Gazal 2015)") + ylab("Estimated kinship") + ggtitle("Estimated Kinship vs Inferred Relationship (Gazal 2015)") +
guides(color = guide_legend(title = "Super population")) +
theme(plot.title = element_text(size=20),
axis.text = element_text(size=14),
axis.title = element_text(size=20),
legend.text = element_text(size=12))
tiff(paste0("./plots/s_distributions/",outputDir,"/EstimatedCoKvsGazal.tiff"), width=900, height=900)
print(ggCoKGazal)
dev.off()
pdf(paste0("./plots/s_distributions/",outputDir,"/EstimatedCoKvsGazal.pdf"), width=8, height=8)
print(ggCoKGazal)
dev.off()
# ggplot(subset(resTableAll, !pop%in%structuredPops), aes(CombinedInfered, CoK)) + theme_bw() +
#     geom_boxplot() + geom_jitter(aes(color=group), alpha=.5) + scale_x_discrete(limits=c("Unrelated","CO","AV or HS", "FS or PO")) +
#     xlab("Inferred Relationship (Gazal 2015)") + ylab("Estimated kinship") + ggtitle("Our estimated CoK vs Inferred Relationship (Gazal 2015)")
ggCoKGazalUnstructured <- ggplot(subset(resTableAll, !pop%in%structuredPops), aes(CombinedInfered, CoK)) + theme_bw() +
geom_jitter(aes(color=group), alpha=.5) + scale_x_discrete(limits=c("Unrelated","CO","AV or HS", "FS or PO")) + geom_violin(alpha=.4) +
xlab("Inferred Relationship (Gazal 2015)") + ylab("Estimated kinship") + ggtitle("Estimated Kinship vs Inferred Relationship (Gazal 2015)") +
theme(plot.title = element_text(size=20)) +
guides(color = guide_legend(title = "Super population"))
tiff(paste0("./plots/s_distributions/",outputDir,"/EstimatedCoKvsGazalUnstruct.tiff"), width=900, height=900)
print(ggCoKGazalUnstructured)
dev.off()
length()
length(results)
results$GBR$s_matrix_hap[1:5,1:5]
dim(results$GBR$s_matrix_hap)
seq(1,170,2)
seq(2,170,2)
results$GBR$s_matrix_hap[seq(1,170,2),seq(2,170,2)]
results$GBR$s_matrix_hap[cbind(seq(1,170,2),seq(2,170,2))]
hist(results$GBR$s_matrix_hap[cbind(seq(1,170,2),seq(2,170,2))])
results$GBR$s_matrix_hap[c(1,2)]
results$GBR$s_matrix_hap[cbind(1,2)]
results$GBR$s_matrix_hap[cbind(2,2)]
hist(results$CEU$s_matrix_hap[cbind(seq(1,170,2),seq(2,170,2))])
names(results)
read.csv("~/Desktop//allomap.csv")
data <- read.csv("~/Desktop//allomap.csv")
plot(data[,2],data[,3])
plot(data[,2],data[,3], pch='.')
library(ggplot2)
qplot(data[,2],data[,3])
qplot(data[,2],scale(data[,3]))
qplot(data[,2],data[,3])
scale(rnorm(100,mean=10,sd=10))
qplot(data[,2],data[,3])
qplot(data[,2],scale(data[,3]))
qplot(data[,2],data[,3])
mean(data[,3])
mean(data[,2])
table(data[,1])
allomap02 <- read.csv("~/Desktop/allomap02.csv")
allomap02 <- read.csv("~/Desktop/allomap02.csv")
allomap01 <- read.csv("~/Desktop/allomap01.csv")
allomap01 <- read.csv("~/Desktop/allomap01.csv", rownames=T)
?read.csv
allomap01 <- read.csv("~/Desktop/allomap01.csv", row.names=T)
allomap01 <- read.csv("~/Desktop/allomap01.csv", row.names=1)
allomapVar01 <- read.csv("~/Desktop/allomapVar01.csv")
allomapVar02 <- read.csv("~/Desktop/allomapVar02.csv")
cbind(allomap02,allomapVar02)
qplot(allomap02[,2],allomapVar02[,2]
)
mean(allomapVar02[,2])
mean(allomap02[,2])
allomapFinal02 <- read.csv("~/Desktop/allomapFinal02.csv")
allomapFinal <- read.csv("~/Desktop/allomapFinal.csv")
allomapVarFinal <- read.csv("~/Desktop/allomapVarFinal.csv")
head(allomapFinal)
head(allomap01)
allomap01 <- read.csv("~/Desktop/allomap01.csv")
head(allomap01)
allomapVar01
allomap01 <- read.csv("~/Desktop/allomap01.csv")
allomapVar01 <- read.csv("~/Desktop/allomapVar01.csv")
head(allomap01)
head(allomapFinal)
qplot(allomapFinal[,2],allomapVarFinal[,2]
)
qplot(allomapFinal[,2],allomapVarFinal[,2])
head(allomapFinal[,2])
head(allomapFinal)
head(allomapVarFinal)
dim(allomapVarFinal)
dim(allomapFinal)
dim(allomap01)
head(allomap01)
head(allomap02)
allomap02 <- allomap02[order(allomap02)[,1],]
allomap02 <- allomap02[order(allomap02[,1]),]
head(allomap02)
allomap01[1:20,]
allomap01[1:24,]
head(allomap02)
table(allomap02)
table(allomap02[,1])
allomap02[allomap02[,1]=="56-0010",]
table(allomap02[,1])[table(allomap02[,1])>1]
names(table(allomap02[,1])[table(allomap02[,1])>1])
allomap02[allomap02[,1]%in%names(table(allomap02[,1])[table(allomap02[,1])>1]),]
qplot(allomap01[,2],allomapVar01[,2])
library(ggplot2)
library(reshape2)
library(data.table)
library(gtools)
library(grid)
library(gganimate)
genotypeFile <- "./data/combinedFiltered1000.gz"
numberOfLines <- 30000
minVariants <- 10
numCores <- 4
args<-commandArgs(TRUE)
outputDir <- '.'
a <-matrix(rbinom(1000000,162,.5),ncol=5)
mean(apply(a,1,max))
a <-matrix(rbinom(1000000,162,.5),ncol=5)
mean(apply(a,1,max))
a <-matrix(rbinom(10000000,162,.5),ncol=5)
mean(apply(a,1,max))
1/16
1/8
source('~/1000GP/s_matrix_functions.R')
source('~/1000GP/read1000GPsupportFiles.R')
library(ggplot2)
library(reshape2)
library(data.table)
library(gtools)
library(grid)
results <- readRDS(paste0("./plots/s_distributions/",outputDir,"/plotdata/all_data.rds"))
outputDir <- '.'
results <- readRDS(paste0("./plots/s_distributions/",outputDir,"/plotdata/all_data.rds"))
popResults <- getPopResults(results, "var_s_dip", "s_matrix_dip")
popResults <- popResults[order(rn)[rank(popGroup$pop)]]
outputDir <- 'filtered40_TGP2261_LD10'
results <- readRDS(paste0("./plots/s_distributions/",outputDir,"/plotdata/all_data.rds"))
# Calculate structure significance ----------------------------------------
popResults <- getPopResults(results, "var_s_dip", "s_matrix_dip")
popResults <- popResults[order(rn)[rank(popGroup$pop)]]
popResults
popResults[order(rn)[rank(popResults$pop)]]
source('~/1000GP/read1000GPsupportFiles.R')
popResults <- popResults[order(rn)[rank(popGroup$pop)]]
popResults$super <- popGroup$group
names(popResults)[1] <- "pop"
popResults$group <- popGroup[popResults$pop,"group"]
popResults <- popResults[order(group,pop)]
popResults$pop <- factor(popResults$pop, levels=popResults$pop)
maxYvalue <- 200
popResults
dim(results)
length(results)
a <- matrix(1:100,10)
a
a <- matrix(1:100,8)
a <- matrix(1:100,5)
a
a <- matrix(1:100,10)
a[c(1,2)]
a[c(3,2)]
a
a[seq(1,10,2),]
a[seq(1,10,2),seq(2,10,2)]
diag(a[seq(1,10,2),seq(2,10,2)])
b<- lapply(results, function(x){
a <- x$s_matrix_hap
diag(a[seq(1,10,2),seq(2,10,2)])
})
dim(b)
b
b<- lapply(results, function(x){
a <- x$s_matrix_hap
diag(a[seq(1,nrow(a),2),seq(2,nrow(a),2)])
})
b
unlist(b)
hist(unlist(b))
max(unlist(b))
which.max(unlist(b))
which.max(unlist(b$CEU))
which.max(b$CEU)
hist(b$CEU)
which.max(b$CEU,4)
?which.max
sort(b$CEU)
scale(b$CEU)
pnorm(scale(b$CEU))
1-pnorm(scale(b$CEU))
1-pnorm(scale(b$FIN))
1-pnorm(scale(b$FIN))<.01
sum(1-pnorm(scale(b$FIN))<.01)
inbredStats <- lapply(results, function(x){
a <- x$s_matrix_hap
diag(a[seq(1,nrow(a),2),seq(2,nrow(a),2)])
})
numInbred <- lapply(inbredStats, function(x){
sum(1-pnorm(scale(x))<.01)
})
numInbred
results$CHS$s_matrix_hap[1:10,1:10]
inbredStats
results$CHS$s_matrix_hap[1:10,1:10]
inbredStats <- lapply(results, function(x){
a <- x$s_matrix_hap
b <- diag(a[seq(1,nrow(a),2),seq(2,nrow(a),2)])
names(b) <- colnames(a)[c(T,F)]
})
inbredStats
inbredStats <- lapply(results, function(x){
a <- x$s_matrix_hap
b <- diag(a[seq(1,nrow(a),2),seq(2,nrow(a),2)])
names(b) <- colnames(a)[c(T,F)]
b
})
inbredStats
unlist(inbredStats)
?unlist
unlist(inbredStats,use.names =F)
unlist(inbredStats)
sort(unlist(inbredStats))
