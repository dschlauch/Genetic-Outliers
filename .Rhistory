structuredPops
!pop%in%structuredPops
pop%in%structuredPops
unique(pop)%in%structuredPops
unique(pop)[!unique(pop)%in%structuredPops]
ggCoKGazalUnstructured <- ggplot(subset(resTableAll, !pop%in%structuredPops), aes(CombinedInfered, CoK)) + theme_bw() +
geom_jitter(aes(color=group), alpha=.5) + scale_x_discrete(limits=c("Unrelated","CO","AV or HS", "FS or PO")) + geom_violin(alpha=.3) +
xlab("Inferred Relationship (Gazal 2015)") + ylab("Estimated kinship") + ggtitle("Estimated Kinship vs Inferred Relationship (Gazal 2015)")
ggCoKGazalUnstructured
print(ggCoKGazal)
print(ggCoKGazalUnstructured)
subset(resTableAll, !pop%in%structuredPops)
subset(resTableAll, !pop%in%structuredPops)[INFERED.RELATIONSHIP=="FS"]
subset(resTableAll, !pop%in%structuredPops)[INFERED.RELATIONSHIP=="PO"]
subset(resTableAll, !pop%in%structuredPops)[INFERED.RELATIONSHIP=="FS"]
resTableAll[INFERED.RELATIONSHIP=="FS"]
resTableAll <- data.table(do.call(rbind, lapply(unique(pop),function(pop_i){
result <- readRDS(paste0("./plots/s_distributions/",outputDir,"/plotdata/",pop_i, "_data.rds"))
result$s_matrix_dip[upper.tri(result$s_matrix_dip)] <- NA
diag(result$s_matrix_dip) <- NA
resTable <- melt(result$s_matrix_dip, na.rm=T)
resTable$estimatedCoK <- (resTable$value-1)/(result$pkweightsMean-1)
resTable$pop <- pop_i
colnames(resTable) <- c("SampleID_1","SampleID_2","s","CoK","pop")
resTable
})))
resTableAll
resTableAll[SampleID_1=="HG02479"&SampleID_2=="HG02429"]
gazal_related_rev <- copy(gazal_related)
setcolorder(gazal_related_rev, c(2,1,3,4,5))
names(gazal_related_rev)[1:2] <- names(gazal_related_rev)[2:1]
gazal_related <- rbind(gazal_related,gazal_related_rev)
names(gazal_related)[1:2] <- names(resTableAll)[1:2]
resTableAll <- merge(resTableAll,gazal_related, by=names(gazal_related)[1:2],all.x=T)
resTableAll$group <- popGroup[resTableAll$pop,"group"]
sum(!is.na(resTableAll[,INFERED.RELATIONSHIP]))
resTableAll[SampleID_1=="HG00100"]
resTableAll[is.na(resTableAll[["INFERED.RELATIONSHIP"]]),"INFERED.RELATIONSHIP"]<- "Unrelated"
resTableAll$CombinedInfered <- "Unrelated"
resTableAll$CombinedInfered[resTableAll$INFERED.RELATIONSHIP=="CO"] <- "CO"
resTableAll$CombinedInfered[resTableAll$INFERED.RELATIONSHIP=="AV"|resTableAll$INFERED.RELATIONSHIP=="HS"] <- "AV or HS"
resTableAll$CombinedInfered[resTableAll$INFERED.RELATIONSHIP=="FS"|resTableAll$INFERED.RELATIONSHIP=="PO"] <- "FS or PO"
resTableAll[order(-CoK)]
resTableAll[SampleID_1=="HG02479"&SampleID_2=="HG02429"]
resTableAll <- data.table(do.call(rbind, lapply(unique(pop),function(pop_i){
result <- readRDS(paste0("./plots/s_distributions/",outputDir,"/plotdata/",pop_i, "_data.rds"))
result$s_matrix_dip[upper.tri(result$s_matrix_dip)] <- NA
diag(result$s_matrix_dip) <- NA
resTable <- melt(result$s_matrix_dip, na.rm=T)
resTable$estimatedCoK <- (resTable$value-1)/(result$pkweightsMean-1)
resTable$pop <- pop_i
colnames(resTable) <- c("SampleID_1","SampleID_2","s","CoK","pop")
resTable
})))
resTableAll[SampleID_1=="HG02479"&SampleID_2=="HG02429"]
gazal_related_rev <- copy(gazal_related)
setcolorder(gazal_related_rev, c(2,1,3,4,5))
names(gazal_related_rev)[1:2] <- names(gazal_related_rev)[2:1]
gazal_related <- rbind(gazal_related,gazal_related_rev)
names(gazal_related)[1:2] <- names(resTableAll)[1:2]
resTableAll[SampleID_1=="HG02479"&SampleID_2=="HG02429"]
resTableAll <- merge(resTableAll,gazal_related, by=names(gazal_related)[1:2],all.x=T)
resTableAll[SampleID_1=="HG02479"&SampleID_2=="HG02429"]
resTableAll <- data.table(do.call(rbind, lapply(unique(pop),function(pop_i){
result <- readRDS(paste0("./plots/s_distributions/",outputDir,"/plotdata/",pop_i, "_data.rds"))
result$s_matrix_dip[upper.tri(result$s_matrix_dip)] <- NA
diag(result$s_matrix_dip) <- NA
resTable <- melt(result$s_matrix_dip, na.rm=T)
resTable$estimatedCoK <- (resTable$value-1)/(result$pkweightsMean-1)
resTable$pop <- pop_i
colnames(resTable) <- c("SampleID_1","SampleID_2","s","CoK","pop")
resTable
})))
gazal_related_rev <- copy(gazal_related)
setcolorder(gazal_related_rev, c(2,1,3,4,5))
names(gazal_related_rev)[1:2] <- names(gazal_related_rev)[2:1]
gazal_related <- rbind(gazal_related,gazal_related_rev)
names(gazal_related)[1:2] <- names(resTableAll)[1:2]
gazal_related
resTableAll
gazal_related[SampleID_1=="HG02479"&SampleID_2=="HG02429"]
dim(gazal_related)
gazal_related_rev <- copy(gazal_related)
dim(gazal_related)
dim(gazal_related_rev)
setcolorder(gazal_related_rev, c(2,1,3,4,5))
names(gazal_related_rev)[1:2] <- names(gazal_related_rev)[2:1]
gazal_related <- rbind(gazal_related,gazal_related_rev)
names(gazal_related)[1:2] <- names(resTableAll)[1:2]
dim(gazal_related)
gazal_related[SampleID_1=="HG02479"&SampleID_2=="HG02429"]
gazal_related[SampleID_1=="HG02479"&SampleID_2=="HG02429"]
gazal_related[SampleID_1=="HG02479"&SampleID_2=="HG02429"]
gazal_related
gazal_related[SampleID_1=="HG02479"]
gazal_related <- data.table(read.csv("./data/gazal_related.csv"))
gazal_related[SampleID_1=="HG02479"]
gazal_related_rev <- copy(gazal_related_orig)
gazal_related_orig <- data.table(read.csv("./data/gazal_related.csv"))
gazal_related_rev <- copy(gazal_related_orig)
setcolorder(gazal_related_rev, c(2,1,3,4,5))
names(gazal_related_rev)[1:2] <- names(gazal_related_rev)[2:1]
gazal_related <- rbind(gazal_related_orig,gazal_related_rev)
names(gazal_related)[1:2] <- names(resTableAll)[1:2]
resTableAll <- merge(resTableAll,gazal_related, by=names(gazal_related)[1:2],all.x=T)
resTableAll$group <- popGroup[resTableAll$pop,"group"]
gazal_related[SampleID_1=="HG02479"]
sum(!is.na(resTableAll[,INFERED.RELATIONSHIP]))
resTableAll[SampleID_1=="HG00100"]
resTableAll[is.na(resTableAll[["INFERED.RELATIONSHIP"]]),"INFERED.RELATIONSHIP"]<- "Unrelated"
resTableAll$CombinedInfered <- "Unrelated"
resTableAll$CombinedInfered[resTableAll$INFERED.RELATIONSHIP=="CO"] <- "CO"
resTableAll$CombinedInfered[resTableAll$INFERED.RELATIONSHIP=="AV"|resTableAll$INFERED.RELATIONSHIP=="HS"] <- "AV or HS"
resTableAll$CombinedInfered[resTableAll$INFERED.RELATIONSHIP=="FS"|resTableAll$INFERED.RELATIONSHIP=="PO"] <- "FS or PO"
resTableAll[order(-CoK)]
ggCoKGazal <- ggplot(resTableAll, aes(CombinedInfered, CoK)) + theme_bw() +
geom_jitter(aes(color=group), alpha=.5) + scale_x_discrete(limits=c("Unrelated","CO","AV or HS", "FS or PO")) + geom_violin(alpha=.4) +
xlab("Inferred Relationship (Gazal 2015)") + ylab("Estimated kinship") + ggtitle("Estimated Kinship vs Inferred Relationship (Gazal 2015)")
print(ggCoKGazal)
outputDir
outputDir <- 'filtered40_TGP2261_LD10'
outputDir <- 'filtered40_TGP2261_LD10'
source('~/1000GP/process1000GPResults.R')
outputDir
outputDir <- 'filtered40_LD10'
source('~/1000GP/process1000GPResults.R')
print(ggCoKGazalUnstructured)
outputDir <- 'filtered40_TGP2261_LD10'
results <- readRDS(paste0("./plots/s_distributions/",outputDir,"/plotdata/all_data.rds"))
names(popResults)[1] <- "pop"
popResults$group <- popGroup[popResults$pop,"group"]
pdf(paste0("./plots/s_distributions/",outputDir,"/pValueForPop.pdf"), width=8, height=8)
ggPVals<-ggplot(popResults, aes(y=structurePValue, x=pop))+ geom_point(aes(color=group)) + geom_hline(yintercept=.05) + geom_hline(yintercept=.01) +
ggtitle("p-value for structure in each population") + theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
print(ggPVals)
dev.off()
# ggplot(subset(popResults,!pop%in%c("PEL","MXL","ASW","PUR")), aes(y=var_s, x=sampleVariance, label=pop))+ geom_point(col="red", size=5) + geom_text(aes(y=var_s, x=sampleVariance))+ geom_abline() +
#     xlim(0,.005)+ylim(0,.005)
cor(subset(popResults,!pop%in%c("PEL","MXL","ASW","PUR"))$sampleVariance,subset(popResults,!pop%in%c("PEL","MXL","ASW","PUR"))$var_s)
varianceRatio <- popResults$sampleVariance/popResults$var_s
names(varianceRatio)<-popResults$pop
cbind(sort(varianceRatio, decreasing = TRUE))
sum(popResults$structurePValue<.01)
popResults$structurePValue[popResults$structurePValue<.01]
popResults <- popResults[order(popResults$structurePValue),]
structuredPops <- popResults$pop[popResults$structurePValue<.05]
structuredPops
outputDir
gc()
outputDir <- 'filtered40_LD10'
source('~/1000GP/process1000GPResults.R')
print(ggCoKGazalUnstructured)
ggplot(resTableAll, aes(CombinedInfered, CoK)) + theme_bw() +
geom_jitter(aes(color=group), alpha=.5) + scale_x_discrete(limits=c("Unrelated","CO","AV or HS", "FS or PO")) + geom_violin(alpha=.4) +
xlab("Inferred Relationship (Gazal 2015)") + ylab("Estimated kinship") + ggtitle("Estimated Kinship vs Inferred Relationship (Gazal 2015)") +
guides(color = guide_legend(title = "LEFT", title.position = "left"))
ggCoKGazal <- ggplot(resTableAll, aes(CombinedInfered, CoK)) + theme_bw() +
geom_jitter(aes(color=group), alpha=.5) + scale_x_discrete(limits=c("Unrelated","CO","AV or HS", "FS or PO")) + geom_violin(alpha=.4) +
xlab("Inferred Relationship (Gazal 2015)") + ylab("Estimated kinship") + ggtitle("Estimated Kinship vs Inferred Relationship (Gazal 2015)") +
guides(color = guide_legend(title = "Super population")
tiff(paste0("./plots/s_distributions/",outputDir,"/EstimatedCoKvsGazal.tiff"), width=900, height=900)
print(ggCoKGazal)
dev.off()
ggCoKGazal <- ggplot(resTableAll, aes(CombinedInfered, CoK)) + theme_bw() +
geom_jitter(aes(color=group), alpha=.5) + scale_x_discrete(limits=c("Unrelated","CO","AV or HS", "FS or PO")) + geom_violin(alpha=.4) +
xlab("Inferred Relationship (Gazal 2015)") + ylab("Estimated kinship") + ggtitle("Estimated Kinship vs Inferred Relationship (Gazal 2015)") +
guides(color = guide_legend(title = "Super population"))
tiff(paste0("./plots/s_distributions/",outputDir,"/EstimatedCoKvsGazal.tiff"), width=900, height=900)
print(ggCoKGazal)
dev.off()
print(ggPVals)
outputDir
popResults$pop
popResults
ggplot(popResults, aes(y=structurePValue, x=pop))+ geom_point(aes(color=group)) + geom_hline(yintercept=.05) + geom_hline(yintercept=.01) +
ggtitle("p-value for structure in each population") + theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
popResults
names(popResults$pop)
popResults$pop
popResults[order(pop)]
popResults[order(group,pop)]
ggPVals<-ggplot(popResults, aes(y=structurePValue, x=pop))+ geom_point(aes(color=group)) + geom_hline(yintercept=.05) + geom_hline(yintercept=.01) +
ggtitle("p-value for structure in each population") + theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
popResults
popResults
popResults <- popResults[order(group,pop)]
ggPVals<-ggplot(popResults, aes(y=structurePValue, x=pop))+ geom_point(aes(color=group)) + geom_hline(yintercept=.05) + geom_hline(yintercept=.01) +
ggtitle("p-value for structure in each population") + theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
popResults$pop <- factor(popResults$pop)
popResults$pop
popResults
popResults$pop
popResults <- as.data.table(t(sapply(names(results), function(pop_i){
s_vector <- results[[pop_i]]$s_matrix_dip[row(results[[pop_i]]$s_matrix_dip)>col(results[[pop_i]]$s_matrix_dip)]
topValuesKinship <- (sort(s_vector, decreasing=T)-1)/(results[[pop_i]]$weightsMean-1)
btest <- binom.test(sum(s_vector>mean(s_vector)), length(s_vector), alternative="less")
c(structurePValue=btest$p.value, var_s=results[[pop_i]]$var_s_dip, sampleVariance=var(s_vector))
})), keep.rownames=T)
names(popResults)[1] <- "pop"
popResults$group <- popGroup[popResults$pop,"group"]
popResults <- popResults[order(group,pop)]
popResults$pop
popResults$pop <- factor(popResults$pop, levels=popResults$pop)
ggPVals<-ggplot(popResults, aes(y=structurePValue, x=pop))+ geom_point(aes(color=group)) + geom_hline(yintercept=.05) + geom_hline(yintercept=.01) +
ggtitle("p-value for structure in each population") + theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
print(ggPVals)
outputDir <- 'filtered40_TGP2261_LD10'
popResults <- as.data.table(t(sapply(names(results), function(pop_i){
s_vector <- results[[pop_i]]$s_matrix_dip[row(results[[pop_i]]$s_matrix_dip)>col(results[[pop_i]]$s_matrix_dip)]
topValuesKinship <- (sort(s_vector, decreasing=T)-1)/(results[[pop_i]]$weightsMean-1)
btest <- binom.test(sum(s_vector>mean(s_vector)), length(s_vector), alternative="less")
c(structurePValue=btest$p.value, var_s=results[[pop_i]]$var_s_dip, sampleVariance=var(s_vector))
})), keep.rownames=T)
names(popResults)[1] <- "pop"
popResults$group <- popGroup[popResults$pop,"group"]
popResults <- popResults[order(group,pop)]
popResults$pop <- factor(popResults$pop, levels=popResults$pop)
ggPVals<-ggplot(popResults, aes(y=structurePValue, x=pop))+ geom_point(aes(color=group)) + geom_hline(yintercept=.05) + geom_hline(yintercept=.01) +
ggtitle("p-value for structure in each population") + theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
print(ggPVals)
results <- readRDS(paste0("./plots/s_distributions/",outputDir,"/plotdata/all_data.rds"))
popResults <- as.data.table(t(sapply(names(results), function(pop_i){
s_vector <- results[[pop_i]]$s_matrix_dip[row(results[[pop_i]]$s_matrix_dip)>col(results[[pop_i]]$s_matrix_dip)]
topValuesKinship <- (sort(s_vector, decreasing=T)-1)/(results[[pop_i]]$weightsMean-1)
btest <- binom.test(sum(s_vector>mean(s_vector)), length(s_vector), alternative="less")
c(structurePValue=btest$p.value, var_s=results[[pop_i]]$var_s_dip, sampleVariance=var(s_vector))
})), keep.rownames=T)
# tidy up and plot structure results --------------------------------------
names(popResults)[1] <- "pop"
popResults$group <- popGroup[popResults$pop,"group"]
popResults <- popResults[order(group,pop)]
popResults$pop <- factor(popResults$pop, levels=popResults$pop)
pdf(paste0("./plots/s_distributions/",outputDir,"/pValueForPop.pdf"), width=8, height=8)
ggPVals<-ggplot(popResults, aes(y=structurePValue, x=pop))+ geom_point(aes(color=group)) + geom_hline(yintercept=.05) + geom_hline(yintercept=.01) +
ggtitle("p-value for structure in each population") + theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
print(ggPVals)
dev.off()
print(ggPVals)
pdf(paste0("./plots/s_distributions/",outputDir,"/pValueForPop.pdf"), width=8, height=8)
ggPVals<-ggplot(popResults, aes(y=structurePValue, x=pop))+ geom_point(aes(color=group)) + geom_hline(yintercept=.05) + geom_hline(yintercept=.01) +
ggtitle("p-value for structure in each population") + theme_bw() +
ylab("P-value") + xlab("Population") + ggtitle("Structure Detected in 1000 Genomes Populations")
theme(axis.text.x = element_text(angle = 90, hjust = 1))
print(ggPVals)
dev.off()
pdf(paste0("./plots/s_distributions/",outputDir,"/pValueForPop.pdf"), width=8, height=8)
ggPVals<-ggplot(popResults, aes(y=structurePValue, x=pop))+ geom_point(aes(color=group)) + geom_hline(yintercept=.05) + geom_hline(yintercept=.01) +
ggtitle("p-value for structure in each population") + theme_bw() +
ylab("P-value") + xlab("Population") + ggtitle("Structure Detected in 1000 Genomes Populations")+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
print(ggPVals)
dev.off()
print(ggPVals)
pdf(paste0("./plots/s_distributions/",outputDir,"/pValueForPop.pdf"), width=8, height=8)
ggPVals<-ggplot(popResults, aes(y=structurePValue, x=pop))+ geom_point(aes(color=group)) + geom_hline(yintercept=.05) + geom_hline(yintercept=.01) +
ggtitle("p-value for structure in each population") + theme_bw() +
ylab("P-value") + xlab("Population") + ggtitle("Structure Detected in 1000 Genomes Populations") +
guides(color = guide_legend(title = "Super population")) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
print(ggPVals)
dev.off()
print(ggPVals)
ggPVals<-ggplot(popResults, aes(y=structurePValue, x=pop))+ geom_point(aes(color=group),size=10) + geom_hline(yintercept=.05) + geom_hline(yintercept=.01) +
ggtitle("p-value for structure in each population") + theme_bw() +
ylab("P-value") + xlab("Population") + ggtitle("Structure Detected in 1000 Genomes Populations") +
guides(color = guide_legend(title = "Super population")) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
print(ggPVals)
pdf(paste0("./plots/s_distributions/",outputDir,"/pValueForPop.pdf"), width=8, height=8)
ggPVals<-ggplot(popResults, aes(y=structurePValue, x=pop))+ geom_point(aes(color=group),size=10) + geom_hline(yintercept=.05) + geom_hline(yintercept=.01) +
ggtitle("p-value for structure in each population") + theme_bw() +
ylab("P-value") + xlab("Population") + ggtitle("Structure Detected in 1000 Genomes Populations") +
guides(color = guide_legend(title = "Super population")) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
print(ggPVals)
dev.off()
pdf(paste0("./plots/s_distributions/",outputDir,"/pValueForPop.pdf"), width=8, height=8)
ggPVals<-ggplot(popResults, aes(y=structurePValue, x=pop))+ geom_point(aes(color=group),size=3) + geom_hline(yintercept=.05) + geom_hline(yintercept=.01) +
ggtitle("p-value for structure in each population") + theme_bw() +
ylab("P-value") + xlab("Population") + ggtitle("Structure Detected in 1000 Genomes Populations") +
guides(color = guide_legend(title = "Super population")) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
print(ggPVals)
dev.off()
print(ggPVals)
outputDir <- 'filtered40_LD10'
source('~/1000GP/process1000GPResults.R')
outputDir <- 'filtered40_TGP2261_LD10'
source('~/1000GP/process1000GPResults.R')
ggplot(popResults, aes(y=structurePValue, x=pop))+ geom_point(aes(color=group),size=3) + geom_hline(yintercept=.05) + geom_hline(yintercept=.01) +
ggtitle("p-value for structure in each population") + theme_bw() +
ylab("P-value") + xlab("Population") + ggtitle("Structure Detected in 1000 Genomes Populations") +
guides(color = guide_legend(title = "Super population")) +
ylim(0,.8) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(popResults, aes(y=structurePValue, x=pop))+ geom_point(aes(color=group),size=3) + geom_hline(yintercept=.05) + geom_hline(yintercept=.01) +
ggtitle("p-value for structure in each population") + theme_bw() +
ylab("P-value") + xlab("Population") + ggtitle("Structure Detected in 1000 Genomes Populations") +
guides(color = guide_legend(title = "Super population")) +
ylim(0,1.8) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
outputDir <- 'filtered40_LD10'
source('~/1000GP/process1000GPResults.R')
outputDir <- 'filtered40_TGP2261_LD10'
source('~/1000GP/process1000GPResults.R')
ggplot(popResults, aes(y=-log(structurePValue), x=pop))+ geom_point(aes(color=group),size=3) + geom_hline(yintercept=.05) + geom_hline(yintercept=.01) +
ggtitle("p-value for structure in each population") + theme_bw() +
ylab("P-value") + xlab("Population") + ggtitle("Structure Detected in 1000 Genomes Populations") +
guides(color = guide_legend(title = "Super population")) +
ylim(0,.8) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(popResults, aes(y=-log(structurePValue), x=pop))+ geom_point(aes(color=group),size=3) + geom_hline(yintercept=.05) + geom_hline(yintercept=.01) +
ggtitle("p-value for structure in each population") + theme_bw() +
ylab("P-value") + xlab("Population") + ggtitle("Structure Detected in 1000 Genomes Populations") +
guides(color = guide_legend(title = "Super population")) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
outputDir
ggplot(popResults, aes(y=structurePValue, x=pop))+ geom_point(aes(color=group),size=3) +
geom_hline(yintercept=-log(.05)) + geom_hline(yintercept=-log(.01)) +
ggtitle("p-value for structure in each population") + theme_bw() +
ylab("-log(p-value)") + xlab("Population") + ggtitle("Structure Detected in 1000 Genomes Populations") +
guides(color = guide_legend(title = "Super population")) +
ylim(0,100) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(popResults, aes(y=-log(structurePValue), x=pop))+ geom_point(aes(color=group),size=3) +
geom_hline(yintercept=-log(.05)) + geom_hline(yintercept=-log(.01)) +
ggtitle("p-value for structure in each population") + theme_bw() +
ylab("-log(p-value)") + xlab("Population") + ggtitle("Structure Detected in 1000 Genomes Populations") +
guides(color = guide_legend(title = "Super population")) +
ylim(0,100) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(popResults, aes(y=-log(structurePValue), x=pop))+ geom_point(aes(color=group),size=3) +
geom_hline(yintercept=-log(.05)) + geom_hline(yintercept=-log(.01)) +
ggtitle("p-value for structure in each population") + theme_bw() +
ylab("-log(p-value)") + xlab("Population") + ggtitle("Structure Detected in 1000 Genomes Populations") +
guides(color = guide_legend(title = "Super population")) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(popResults, aes(y=-log(structurePValue), x=pop))+ geom_point(aes(color=group),size=3) +
geom_hline(yintercept=-log(.05)) + geom_hline(yintercept=-log(.01)) +
ggtitle("p-value for structure in each population") + theme_bw() +
ylab("-log(p-value)") + xlab("Population") + ggtitle("Structure Detected in 1000 Genomes Populations") +
guides(color = guide_legend(title = "Super population")) +
ylim(0,105) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(popResults, aes(y=-log(structurePValue), x=pop))+ geom_point(aes(color=group),size=3) +
geom_hline(yintercept=-log(.05)) + geom_text(aes(0,h,label = "alpha", vjust = -1),parse = T) +
geom_hline(yintercept=-log(.01)) + geom_text(aes(0,h,label = 12, vjust = -1),parse = T) +
ggtitle("p-value for structure in each population") + theme_bw() +
ylab("-log(p-value)") + xlab("Population") + ggtitle("Structure Detected in 1000 Genomes Populations") +
guides(color = guide_legend(title = "Super population")) +
ylim(0,105) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(popResults, aes(y=-log(structurePValue), x=pop))+ geom_point(aes(color=group),size=3) +
geom_hline(yintercept=-log(.05)) + geom_text(aes(0,-log(.05),label = "alpha", vjust = -1),parse = T) +
geom_hline(yintercept=-log(.01)) + geom_text(aes(0,-log(.01),label = 12, vjust = -1),parse = T) +
ggtitle("p-value for structure in each population") + theme_bw() +
ylab("-log(p-value)") + xlab("Population") + ggtitle("Structure Detected in 1000 Genomes Populations") +
guides(color = guide_legend(title = "Super population")) +
ylim(0,105) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(popResults, aes(y=-log(structurePValue), x=pop))+ geom_point(aes(color=group),size=3) +
geom_hline(yintercept=-log(.05)) + geom_text(aes(.5,-log(.05),label = "alpha", vjust = -1),parse = T) +
geom_hline(yintercept=-log(.01)) + geom_text(aes(1,-log(.01),label = 12, vjust = -1),parse = T) +
ggtitle("p-value for structure in each population") + theme_bw() +
ylab("-log(p-value)") + xlab("Population") + ggtitle("Structure Detected in 1000 Genomes Populations") +
guides(color = guide_legend(title = "Super population")) +
ylim(0,105) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggPVals<-ggplot(popResults, aes(y=-log(structurePValue), x=pop))+ geom_point(aes(color=group),size=3) +
geom_hline(yintercept=-log(.05)) + geom_text(aes(13,-log(.05),label = "alpha", vjust = -1),parse = T) +
geom_hline(yintercept=-log(.01)) + geom_text(aes(10,-log(.01),label = 12, vjust = -1),parse = T) +
ggtitle("p-value for structure in each population") + theme_bw() +
ylab("-log(p-value)") + xlab("Population") + ggtitle("Structure Detected in 1000 Genomes Populations") +
guides(color = guide_legend(title = "Super population")) +
ylim(0,105) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
print(ggPVals)
ggplot(popResults, aes(y=-log(structurePValue), x=pop))+ geom_point(aes(color=group),size=3) +
geom_hline(yintercept=-log(.05)) + geom_text(aes(13,-log(.05),label = "alpha=.05", vjust = -1),parse = T) +
geom_hline(yintercept=-log(.01)) + geom_text(aes(10,-log(.01),label = "alpha=.01", vjust = 1),parse = T) +
ggtitle("p-value for structure in each population") + theme_bw() +
ylab("-log(p-value)") + xlab("Population") + ggtitle("Structure Detected in 1000 Genomes Populations") +
guides(color = guide_legend(title = "Super population")) +
ylim(0,105) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(popResults, aes(y=-log(structurePValue), x=pop))+ geom_point(aes(color=group),size=3) +
geom_hline(yintercept=-log(.05)) + geom_text(aes(13,-log(.05),label = "alpha=.05", vjust = -1),parse = T) +
geom_hline(yintercept=-log(.01)) + geom_text(aes(13,-log(.01),label = "alpha=.01", vjust = 1),parse = T) +
ggtitle("p-value for structure in each population") + theme_bw() +
ylab("-log(p-value)") + xlab("Population") + ggtitle("Structure Detected in 1000 Genomes Populations") +
guides(color = guide_legend(title = "Super population")) +
ylim(0,105) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(popResults, aes(y=-log(structurePValue), x=pop))+ geom_point(aes(color=group),size=3) +
geom_hline(yintercept=-log(.05)) + geom_text(aes(13,-log(.05),label = "alpha=.05", vjust = -1),parse = T) +
geom_hline(yintercept=-log(.01)) + geom_text(aes(13,-log(.01),label = "alpha=.01", vjust = -1),parse = T) +
ggtitle("p-value for structure in each population") + theme_bw() +
ylab("-log(p-value)") + xlab("Population") + ggtitle("Structure Detected in 1000 Genomes Populations") +
guides(color = guide_legend(title = "Super population")) +
ylim(0,105) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(popResults, aes(y=-log(structurePValue), x=pop))+ geom_point(aes(color=group),size=3) +
geom_hline(yintercept=-log(.05)) + geom_text(aes(13,-log(.05),label = "alpha=.05", vjust = -1),parse = T) +
geom_hline(yintercept=-log(.01)) + geom_text(aes(13,-log(.01),label = "alpha=.01", vjust = 1),parse = T) +
ggtitle("p-value for structure in each population") + theme_bw() +
ylab("-log(p-value)") + xlab("Population") + ggtitle("Structure Detected in 1000 Genomes Populations") +
guides(color = guide_legend(title = "Super population")) +
ylim(0,105) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(popResults, aes(y=-log(structurePValue), x=pop))+ geom_point(aes(color=group),size=3) +
geom_hline(yintercept=-log(.05)) + geom_text(aes(13,-log(.05),label = "alpha = .05", vjust = -1),parse = T) +
geom_hline(yintercept=-log(.01)) + geom_text(aes(13,-log(.01),label = "alpha = .01", vjust = 1),parse = T) +
ggtitle("p-value for structure in each population") + theme_bw() +
ylab("-log(p-value)") + xlab("Population") + ggtitle("Structure Detected in 1000 Genomes Populations") +
guides(color = guide_legend(title = "Super population")) +
ylim(0,105) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
outputDir <- 'filtered40_LD10'
source('~/1000GP/process1000GPResults.R')
outputDir <- 'filtered40_TGP2261_LD10'
source('~/1000GP/process1000GPResults.R')
maxYvalue <- 105
outputDir <- 'filtered40_LD10'
source('~/1000GP/process1000GPResults.R')
popResults <- as.data.table(t(sapply(names(results), function(pop_i){
s_vector <- results[[pop_i]]$s_matrix_dip[row(results[[pop_i]]$s_matrix_dip)>col(results[[pop_i]]$s_matrix_dip)]
topValuesKinship <- (sort(s_vector, decreasing=T)-1)/(results[[pop_i]]$weightsMean-1)
btest <- binom.test(sum(s_vector>mean(s_vector)), length(s_vector), alternative="less")
c(structurePValue=btest$p.value, var_s=results[[pop_i]]$var_s_dip, sampleVariance=var(s_vector))
})), keep.rownames=T)
# tidy up and plot structure results --------------------------------------
names(popResults)[1] <- "pop"
popResults$group <- popGroup[popResults$pop,"group"]
popResults <- popResults[order(group,pop)]
popResults$pop <- factor(popResults$pop, levels=popResults$pop)
maxYvalue <- 105
max(-log(popResults$structurePValue))
-log(popResults$structurePValue)
maxYvalue <- 150
ggPVals <- ggplot(popResults, aes(y=min(maxYvalue,-log(structurePValue)), x=pop))+ geom_point(aes(color=group),size=3) +
geom_hline(yintercept=-log(.05)) + #geom_text(aes(13,-log(.05),label = "alpha = .05", vjust = -1),parse = T) +
geom_hline(yintercept=-log(.01)) + #geom_text(aes(13,-log(.01),label = "alpha = .01", vjust = 1),parse = T) +
ggtitle("p-value for structure in each population") + theme_bw() +
ylab("-log(p-value)") + xlab("Population") + ggtitle("Structure Detected in 1000 Genomes Populations") +
guides(color = guide_legend(title = "Super population")) +
ylim(0,maxYvalue) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
print(ggPVals)
min(maxYvalue,-log(popResults$structurePValue)
)
maxYvalue <- 165
ggPVals <- ggplot(popResults, aes(y=min(maxYvalue,-log(structurePValue)), x=pop))+ geom_point(aes(color=group),size=3) +
geom_hline(yintercept=-log(.05)) + #geom_text(aes(13,-log(.05),label = "alpha = .05", vjust = -1),parse = T) +
geom_hline(yintercept=-log(.01)) + #geom_text(aes(13,-log(.01),label = "alpha = .01", vjust = 1),parse = T) +
ggtitle("p-value for structure in each population") + theme_bw() +
ylab("-log(p-value)") + xlab("Population") + ggtitle("Structure Detected in 1000 Genomes Populations") +
guides(color = guide_legend(title = "Super population")) +
ylim(0,maxYvalue) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
print(ggPVals)
ggPVals <- ggplot(popResults, aes(y=-log(structurePValue), x=pop))+ geom_point(aes(color=group),size=3) +
geom_hline(yintercept=-log(.05)) + #geom_text(aes(13,-log(.05),label = "alpha = .05", vjust = -1),parse = T) +
geom_hline(yintercept=-log(.01)) + #geom_text(aes(13,-log(.01),label = "alpha = .01", vjust = 1),parse = T) +
ggtitle("p-value for structure in each population") + theme_bw() +
ylab("-log(p-value)") + xlab("Population") + ggtitle("Structure Detected in 1000 Genomes Populations") +
guides(color = guide_legend(title = "Super population")) +
ylim(0,maxYvalue) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
print(ggPVals)
outputDir <- 'filtered40_LD10'
source('~/1000GP/process1000GPResults.R')
outputDir <- 'filtered40_TGP2261_LD10'
source('~/1000GP/process1000GPResults.R')
sum(popResults$structurePValue<.01)
outputDir
library(ggplot2)
library(reshape2)
library(data.table)
library(gtools)
outputDir <- 'filtered40_LD10'
source('~/1000GP/read1000GPsupportFiles.R')
gazalFilter <- "NA"
ldPrune <- 10
source('~/1000GP/read1000GPsupportFiles.R')
source('~/1000GP/s_matrix_functions.R')
source('~/1000GP/process1000GPResults.R')
popResults
popResults$structurePValue[popResults$structurePValue<.01]
structuredPops <- popResults$pop[popResults$structurePValue<.01]
source('~/1000GP/process1000GPResults.R', echo=TRUE)
structuredPops
cbind(sort(varianceRatio, decreasing = TRUE))
length(structuredPops)
outputDir <- 'filtered40_TGP2261_LD10'
source('~/1000GP/process1000GPResults.R')
loadNamespace()
loadNamespace('RevoUtilsMath')
remove.packages(RevoUtilsMath)
remove.packages("RevoUtilsMath")
library(ggplot2)
library(reshape2)
library(data.table)
library(gtools)
cor
rnorm(10000)
