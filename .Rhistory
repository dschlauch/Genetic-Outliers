geom_vline(data=subset(plotData, (values == maxDip & values>bonferroni_cutoff_dip)),aes(xintercept = values), color="blue", linetype="dotted") +
geom_vline(xintercept = median(gsm[row(gsm)!=col(gsm)]), color="black", linetype=1) +
geom_text(data=subset(plotData, values > label_cutoff), aes(values,label=pairs), y=0, angle = 80, hjust=0, size=5) +
geom_text(data=subset(plotData, (values == maxDip & values>bonferroni_cutoff_dip)), x=maxDip, y=Inf, label=paste0("hat(phi)==", round(topValuesKinship[1],3),"  "),parse = TRUE, color="blue", angle = 0, size = 6, vjust = 2, hjust = 0) +
#         annotate("text", x=bonferroni_cutoff_dip, y=Inf, label=paste0("alpha==",format(alphaCutoff/num_comparisons_dip, digits=1)),parse = TRUE, color="red", angle = 0, size = 6, vjust = 2, hjust = 1) +
annotate("text", x=bonferroni_cutoff_dip, y=Inf, label=paste0("alpha "),parse = TRUE, color="red", angle = 0, size = 6, vjust = 2, hjust = 1.5) +
annotate("text", x=median(gsm[row(gsm)!=col(gsm)]), y=Inf, label=paste0("m=",round(median(gsm[row(gsm)!=col(gsm)]),3)," "), color="black", angle = 0, size = 6, vjust = 2, hjust = 1)
print(dipPlot)
dipPlot <- ggplot(plotData, aes(values)) +
geom_histogram(color="blue",binwidth=.01,fill=I("blue")) +
ggtitle(paste0(subpop,collapse="_"))  + xlab("Similarity score") +
#         scale_x_continuous(expand=c(.4,0))+#
xlim(minDip, maxDip + (maxDip-minDip)*.1) +
theme_bw() +
theme(plot.title = element_text(size=40), axis.title.x = element_text(size = 10), axis.title.y = element_blank(), axis.text.y=element_blank()) +
geom_vline(xintercept = bonferroni_cutoff_dip, color="red", linetype="dotted") +
geom_vline(data=subset(plotData, (values == maxDip & values>bonferroni_cutoff_dip)),aes(xintercept = values), color="blue", linetype="dotted") +
geom_vline(xintercept = median(gsm[row(gsm)!=col(gsm)]), color="black", linetype=1) +
geom_text(data=subset(plotData, values > label_cutoff), aes(values,label=pairs), y=0, angle = 80, hjust=0, size=5) +
geom_text(data=subset(plotData, (values == maxDip & values>bonferroni_cutoff_dip)), x=maxDip, y=Inf, label=paste0("hat(phi)==", round(topValuesKinship[1],3),"  "),parse = TRUE, color="blue", angle = 0, size = 6, vjust = 2, hjust = 0) +
#         annotate("text", x=bonferroni_cutoff_dip, y=Inf, label=paste0("alpha==",format(alphaCutoff/num_comparisons_dip, digits=1)),parse = TRUE, color="red", angle = 0, size = 6, vjust = 2, hjust = 1) +
annotate("text", x=bonferroni_cutoff_dip, y=Inf, label=paste0("alpha "),parse = TRUE, color="red", angle = 0, size = 6, vjust = 2, hjust = 1.5) +
annotate("text", x=median(gsm[row(gsm)!=col(gsm)]), y=Inf, label=paste0("m=",round(median(gsm[row(gsm)!=col(gsm)]),3)," "), color="black", angle = 0, size = 6, vjust = 2, hjust = 1)
print(dipPlot)
dipPlot <- ggplot(plotData, aes(values)) +
geom_histogram(color="blue",binwidth=.01,fill=I("blue")) +
ggtitle(paste0(subpop,collapse="_"))  + xlab("Similarity score") +
#         scale_x_continuous(expand=c(.4,0))+#
xlim(minDip, maxDip + (maxDip-minDip)*.1) +
theme_bw() +
theme(plot.title = element_text(size=40), axis.title.x = element_text(size = 10), axis.title.y = element_blank(), axis.text.y=element_blank()) +
geom_vline(xintercept = bonferroni_cutoff_dip, color="red", linetype="dotted") +
geom_vline(data=subset(plotData, (values == maxDip & values>bonferroni_cutoff_dip)),aes(xintercept = values), color="blue", linetype="dotted") +
geom_vline(xintercept = median(gsm[row(gsm)!=col(gsm)]), color="black", linetype=1) +
geom_text(data=subset(plotData, values > label_cutoff), aes(values,label=pairs), y=0, angle = 80, hjust=0, size=5) +
geom_text(data=subset(plotData, (values == maxDip & values>bonferroni_cutoff_dip)), x=maxDip, y=Inf, label=paste0("hat(phi)==", round(topValuesKinship[1],3),"  "),parse = TRUE, color="blue", angle = 0, size = 6, vjust = 2, hjust = 0) +
#         annotate("text", x=bonferroni_cutoff_dip, y=Inf, label=paste0("alpha==",format(alphaCutoff/num_comparisons_dip, digits=1)),parse = TRUE, color="red", angle = 0, size = 6, vjust = 2, hjust = 1) +
annotate("text", x=bonferroni_cutoff_dip, y=Inf, label=paste0("alpha "),parse = TRUE, color="red", angle = 0, size = 6, vjust = 2, hjust = 1.5) +
annotate("text", x=median(gsm[row(gsm)!=col(gsm)]), y=Inf, label=paste0("m=",round(median(gsm[row(gsm)!=col(gsm)]),3)," "), color="black", angle = 0, size=6, vjust=1.5, hjust = 1)
print(dipPlot)
source('~/1000GP/s_matrix_functions.R')
source('~/1000GP/process1000GPResults.R')
dipPlot <- ggplot(plotData, aes(values)) +
geom_histogram(color="blue",binwidth=.01,fill=I("blue")) +
ggtitle(paste0(subpop,collapse="_"))  + xlab("Similarity score") +
#         scale_x_continuous(expand=c(.4,0))+#
xlim(minDip, maxDip + (maxDip-minDip)*.2) +
theme_bw() +
theme(plot.title = element_text(size=40), axis.title.x = element_text(size = 10), axis.title.y = element_blank(), axis.text.y=element_blank()) +
geom_vline(xintercept = bonferroni_cutoff_dip, color="red", linetype="dotted") +
geom_vline(data=subset(plotData, (values == maxDip & values>bonferroni_cutoff_dip)),aes(xintercept = values), color="blue", linetype="dotted") +
geom_vline(xintercept = median(gsm[row(gsm)!=col(gsm)]), color="black", linetype=1) +
geom_text(data=subset(plotData, values > label_cutoff), aes(values,label=pairs), y=0, angle = 80, hjust=0, size=5) +
geom_text(data=subset(plotData, (values == maxDip & values>bonferroni_cutoff_dip)), x=maxDip, y=Inf, label=paste0("hat(phi)==", round(topValuesKinship[1],3),"  "),parse = TRUE, color="blue", angle = 0, size = 6, vjust = 2, hjust = 0) +
#         annotate("text", x=bonferroni_cutoff_dip, y=Inf, label=paste0("alpha==",format(alphaCutoff/num_comparisons_dip, digits=1)),parse = TRUE, color="red", angle = 0, size = 6, vjust = 2, hjust = 1) +
annotate("text", x=bonferroni_cutoff_dip, y=Inf, label=paste0("alpha "),parse = TRUE, color="red", angle = 0, size = 6, vjust = 2, hjust = 1.5) +
annotate("text", x=median(gsm[row(gsm)!=col(gsm)]), y=Inf, label=paste0("m=",round(median(gsm[row(gsm)!=col(gsm)]),3)," "), color="black", angle = 0, size=6, vjust=1.5, hjust = 1)
print(dipPlot)
dipPlot <- ggplot(plotData, aes(values)) +
geom_histogram(color="blue",binwidth=.01,fill=I("blue")) +
ggtitle(paste0(subpop,collapse="_"))  + xlab("Similarity score") +
#         scale_x_continuous(expand=c(.4,0))+#
xlim(minDip, maxDip + (maxDip-minDip)*.2) +
theme_bw() +
theme(plot.title = element_text(size=40), axis.title.x = element_text(size = 10), axis.title.y = element_blank(), axis.text.y=element_blank()) +
geom_vline(xintercept = bonferroni_cutoff_dip, color="red", linetype="dotted") +
geom_vline(data=subset(plotData, (values == maxDip & values>bonferroni_cutoff_dip)),aes(xintercept = values), color="blue", linetype="dotted") +
geom_vline(xintercept = median(gsm[row(gsm)!=col(gsm)]), color="black", linetype=1) +
geom_text(data=subset(plotData, values > label_cutoff), aes(values,label=pairs), y=0, angle = 80, hjust=0, size=5) +
geom_text(data=subset(plotData, (values == maxDip & values>bonferroni_cutoff_dip)), x=maxDip, y=Inf, label=paste0("hat(phi)==", round(topValuesKinship[1],3),"  "),parse = TRUE, color="blue", angle = 0, size = 6, vjust = 2, hjust = 0) +
#         annotate("text", x=bonferroni_cutoff_dip, y=Inf, label=paste0("alpha==",format(alphaCutoff/num_comparisons_dip, digits=1)),parse = TRUE, color="red", angle = 0, size = 6, vjust = 2, hjust = 1) +
annotate("text", x=bonferroni_cutoff_dip, y=Inf, label=paste0("alpha "),parse = TRUE, color="red", angle = 0, size = 6, vjust = 2, hjust = 1.5) +
annotate("text", x=median(gsm[row(gsm)!=col(gsm)]), y=Inf, label=paste0("m=",round(median(gsm[row(gsm)!=col(gsm)]),3)," "), color="black", angle = 0, size=6, vjust=1.5, hjust = 1)
print(dipPlot)
dipPlot <- ggplot(plotData, aes(values)) +
geom_histogram(color="blue",binwidth=.01,fill=I("blue")) +
ggtitle(paste0(subpop,collapse="_"))  + xlab("Similarity score") +
#         scale_x_continuous(expand=c(.4,0))+#
xlim(minDip, maxDip + (maxDip-minDip)*.2) +
theme_blank() +
theme(plot.title = element_text(size=40), axis.title.x = element_text(size = 10), axis.title.y = element_blank(), axis.text.y=element_blank()) +
geom_vline(xintercept = bonferroni_cutoff_dip, color="red", linetype="dotted") +
geom_vline(data=subset(plotData, (values == maxDip & values>bonferroni_cutoff_dip)),aes(xintercept = values), color="blue", linetype="dotted") +
geom_vline(xintercept = median(gsm[row(gsm)!=col(gsm)]), color="black", linetype=1) +
geom_text(data=subset(plotData, values > label_cutoff), aes(values,label=pairs), y=0, angle = 80, hjust=0, size=5) +
geom_text(data=subset(plotData, (values == maxDip & values>bonferroni_cutoff_dip)), x=maxDip, y=Inf, label=paste0("hat(phi)==", round(topValuesKinship[1],3),"  "),parse = TRUE, color="blue", angle = 0, size = 6, vjust = 2, hjust = 0) +
#         annotate("text", x=bonferroni_cutoff_dip, y=Inf, label=paste0("alpha==",format(alphaCutoff/num_comparisons_dip, digits=1)),parse = TRUE, color="red", angle = 0, size = 6, vjust = 2, hjust = 1) +
annotate("text", x=bonferroni_cutoff_dip, y=Inf, label=paste0("alpha "),parse = TRUE, color="red", angle = 0, size = 6, vjust = 2, hjust = 1.5) +
annotate("text", x=median(gsm[row(gsm)!=col(gsm)]), y=Inf, label=paste0("m=",round(median(gsm[row(gsm)!=col(gsm)]),3)," "), color="black", angle = 0, size=6, vjust=1.5, hjust = 1)
dipPlot <- ggplot(plotData, aes(values)) +
geom_histogram(color="blue",binwidth=.01,fill=I("blue")) +
ggtitle(paste0(subpop,collapse="_"))  + xlab("Similarity score") +
#         scale_x_continuous(expand=c(.4,0))+#
xlim(minDip, maxDip + (maxDip-minDip)*.2) +
theme_classic() +
theme(plot.title = element_text(size=40), axis.title.x = element_text(size = 10), axis.title.y = element_blank(), axis.text.y=element_blank()) +
geom_vline(xintercept = bonferroni_cutoff_dip, color="red", linetype="dotted") +
geom_vline(data=subset(plotData, (values == maxDip & values>bonferroni_cutoff_dip)),aes(xintercept = values), color="blue", linetype="dotted") +
geom_vline(xintercept = median(gsm[row(gsm)!=col(gsm)]), color="black", linetype=1) +
geom_text(data=subset(plotData, values > label_cutoff), aes(values,label=pairs), y=0, angle = 80, hjust=0, size=5) +
geom_text(data=subset(plotData, (values == maxDip & values>bonferroni_cutoff_dip)), x=maxDip, y=Inf, label=paste0("hat(phi)==", round(topValuesKinship[1],3),"  "),parse = TRUE, color="blue", angle = 0, size = 6, vjust = 2, hjust = 0) +
#         annotate("text", x=bonferroni_cutoff_dip, y=Inf, label=paste0("alpha==",format(alphaCutoff/num_comparisons_dip, digits=1)),parse = TRUE, color="red", angle = 0, size = 6, vjust = 2, hjust = 1) +
annotate("text", x=bonferroni_cutoff_dip, y=Inf, label=paste0("alpha "),parse = TRUE, color="red", angle = 0, size = 6, vjust = 2, hjust = 1.5) +
annotate("text", x=median(gsm[row(gsm)!=col(gsm)]), y=Inf, label=paste0("m=",round(median(gsm[row(gsm)!=col(gsm)]),3)," "), color="black", angle = 0, size=6, vjust=1.5, hjust = 1)
print(dipPlot)
dipPlot <- ggplot(plotData, aes(values)) +
geom_histogram(color="blue",bins=30,fill=I("blue")) +
ggtitle(paste0(subpop,collapse="_"))  + xlab("Similarity score") +
#         scale_x_continuous(expand=c(.4,0))+#
xlim(minDip, maxDip + (maxDip-minDip)*.2) +
theme_classic() +
theme(plot.title = element_text(size=40), axis.title.x = element_text(size = 10), axis.title.y = element_blank(), axis.text.y=element_blank()) +
geom_vline(xintercept = bonferroni_cutoff_dip, color="red", linetype="dotted") +
geom_vline(data=subset(plotData, (values == maxDip & values>bonferroni_cutoff_dip)),aes(xintercept = values), color="blue", linetype="dotted") +
geom_vline(xintercept = median(gsm[row(gsm)!=col(gsm)]), color="black", linetype=1) +
geom_text(data=subset(plotData, values > label_cutoff), aes(values,label=pairs), y=0, angle = 80, hjust=0, size=5) +
geom_text(data=subset(plotData, (values == maxDip & values>bonferroni_cutoff_dip)), x=maxDip, y=Inf, label=paste0("hat(phi)==", round(topValuesKinship[1],3),"  "),parse = TRUE, color="blue", angle = 0, size = 6, vjust = 2, hjust = 0) +
#         annotate("text", x=bonferroni_cutoff_dip, y=Inf, label=paste0("alpha==",format(alphaCutoff/num_comparisons_dip, digits=1)),parse = TRUE, color="red", angle = 0, size = 6, vjust = 2, hjust = 1) +
annotate("text", x=bonferroni_cutoff_dip, y=Inf, label=paste0("alpha "),parse = TRUE, color="red", angle = 0, size = 6, vjust = 2, hjust = 1.5) +
annotate("text", x=median(gsm[row(gsm)!=col(gsm)]), y=Inf, label=paste0("m=",round(median(gsm[row(gsm)!=col(gsm)]),3)," "), color="black", angle = 0, size=6, vjust=1.5, hjust = 1)
print(dipPlot)
dipPlot <- ggplot(plotData, aes(values)) +
geom_histogram(color="blue",bins=40,fill=I("blue")) +
ggtitle(paste0(subpop,collapse="_"))  + xlab("Similarity score") +
#         scale_x_continuous(expand=c(.4,0))+#
xlim(minDip, maxDip + (maxDip-minDip)*.2) +
theme_classic() +
theme(plot.title = element_text(size=40), axis.title.x = element_text(size = 10), axis.title.y = element_blank(), axis.text.y=element_blank()) +
geom_vline(xintercept = bonferroni_cutoff_dip, color="red", linetype="dotted") +
geom_vline(data=subset(plotData, (values == maxDip & values>bonferroni_cutoff_dip)),aes(xintercept = values), color="blue", linetype="dotted") +
geom_vline(xintercept = median(gsm[row(gsm)!=col(gsm)]), color="black", linetype=1) +
geom_text(data=subset(plotData, values > label_cutoff), aes(values,label=pairs), y=0, angle = 80, hjust=0, size=5) +
geom_text(data=subset(plotData, (values == maxDip & values>bonferroni_cutoff_dip)), x=maxDip, y=Inf, label=paste0("hat(phi)==", round(topValuesKinship[1],3),"  "),parse = TRUE, color="blue", angle = 0, size = 6, vjust = 2, hjust = 0) +
#         annotate("text", x=bonferroni_cutoff_dip, y=Inf, label=paste0("alpha==",format(alphaCutoff/num_comparisons_dip, digits=1)),parse = TRUE, color="red", angle = 0, size = 6, vjust = 2, hjust = 1) +
annotate("text", x=bonferroni_cutoff_dip, y=Inf, label=paste0("alpha "),parse = TRUE, color="red", angle = 0, size = 6, vjust = 2, hjust = 1.5) +
annotate("text", x=median(gsm[row(gsm)!=col(gsm)]), y=Inf, label=paste0("m=",round(median(gsm[row(gsm)!=col(gsm)]),3)," "), color="black", angle = 0, size=6, vjust=1.5, hjust = 1)
print(dipPlot)
# Display only those that are above the cutoff and among the top 5
label_cutoff <- max(bonferroni_cutoff_dip, topValuesDip[1])
pairs <- outer(sample_IDs, sample_IDs, paste)
plotData <- data.frame(values=gsm[row(gsm)>col(gsm)], pairs=paste0("  ",pairs[row(pairs)>col(pairs)]))
minDip <- min(plotData$values)
maxDip <- max(plotData$values)#ifelse(max(plotData$values)>bonferroni_cutoff_dip,max(plotData$values),NA)
dipPlot <- ggplot(plotData, aes(values)) +
geom_histogram(color="blue",bins=40,fill=I("blue")) +
ggtitle(paste0(subpop,collapse="_"))  + xlab("Similarity score") +
#         scale_x_continuous(expand=c(.4,0))+#
xlim(minDip, maxDip + (maxDip-minDip)*.2) +
theme_classic() +
theme(plot.title = element_text(size=40), axis.title.x = element_text(size = 10), axis.title.y = element_blank(), axis.text.y=element_blank()) +
geom_vline(xintercept = bonferroni_cutoff_dip, color="red", linetype="dotted") +
geom_vline(data=subset(plotData, (values == maxDip & values>bonferroni_cutoff_dip)),aes(xintercept = values), color="blue", linetype="dotted") +
geom_vline(xintercept = median(gsm[row(gsm)!=col(gsm)]), color="black", linetype=1) +
geom_text(data=subset(plotData, values >= label_cutoff), aes(values,label=pairs), y=0, angle = 80, hjust=0, size=5) +
geom_text(data=subset(plotData, (values == maxDip & values>bonferroni_cutoff_dip)), x=maxDip, y=Inf, label=paste0("hat(phi)==", round(topValuesKinship[1],3),"  "),parse = TRUE, color="blue", angle = 0, size = 6, vjust = 2, hjust = 0) +
#         annotate("text", x=bonferroni_cutoff_dip, y=Inf, label=paste0("alpha==",format(alphaCutoff/num_comparisons_dip, digits=1)),parse = TRUE, color="red", angle = 0, size = 6, vjust = 2, hjust = 1) +
annotate("text", x=bonferroni_cutoff_dip, y=Inf, label=paste0("alpha "),parse = TRUE, color="red", angle = 0, size = 6, vjust = 2, hjust = 1.5) +
annotate("text", x=median(gsm[row(gsm)!=col(gsm)]), y=Inf, label=paste0("m=",round(median(gsm[row(gsm)!=col(gsm)]),3)," "), color="black", angle = 0, size=6, vjust=1.5, hjust = 1)
print(dipPlot)
source('~/1000GP/s_matrix_functions.R')
source('~/1000GP/process1000GPResults.R')
source('~/1000GP/s_matrix_functions.R')
source('~/1000GP/process1000GPResults.R')
source('~/1000GP/s_matrix_functions.R')
source('~/1000GP/process1000GPResults.R')
source('~/1000GP/s_matrix_functions.R')
source('~/1000GP/process1000GPResults.R')
1-(maxDip-1)*.2)
1-(maxDip-1)*.2
xmin <- min(minDip, 1-(maxDip-1)*.25)
xmax
xmin <- min(minDip, 1-(maxDip-1)*.25)
xmax <- maxDip + (maxDip-minDip)*.3
dipPlot <- ggplot(plotData, aes(values)) +
geom_histogram(color="blue",bins=40,fill=I("blue")) +
ggtitle(paste0(subpop,collapse="_"))  + xlab("Similarity score") +
#         scale_x_continuous(expand=c(.4,0))+#
xlim(xmin, xmax) +
theme_classic() +
theme(plot.title = element_text(size=40), axis.title.x = element_text(size = 10), axis.title.y = element_blank(), axis.text.y=element_blank()) +
geom_vline(xintercept = bonferroni_cutoff_dip, color="red", linetype="longdash") +
geom_vline(data=subset(plotData, (values == maxDip & values>bonferroni_cutoff_dip)),aes(xintercept = values), color="blue", linetype="dotted") +
geom_vline(xintercept = median(gsm[row(gsm)!=col(gsm)]), color="black", linetype=1) +
geom_text(data=subset(plotData, values >= label_cutoff), aes(values,label=pairs), y=0, angle = 80, hjust=0, size=5) +
geom_text(data=subset(plotData, (values == maxDip & values>bonferroni_cutoff_dip)), x=maxDip, y=Inf, label=paste0("hat(phi)==", round(topValuesKinship[1],3),"  "),parse = TRUE, color="blue", angle = 0, size = 6, vjust = 2, hjust = 0) +
#         annotate("text", x=bonferroni_cutoff_dip, y=Inf, label=paste0("alpha==",format(alphaCutoff/num_comparisons_dip, digits=1)),parse = TRUE, color="red", angle = 0, size = 6, vjust = 2, hjust = 1) +
annotate("text", x=bonferroni_cutoff_dip, y=Inf, label=paste0("alpha "),parse = TRUE, color="red", angle = 0, size = 6, vjust = 2, hjust = 1.5) +
annotate("text", x=median(gsm[row(gsm)!=col(gsm)]), y=Inf, label=paste0("m=",round(median(gsm[row(gsm)!=col(gsm)]),3)," "), color="black", angle = 0, size=6, vjust=1.5, hjust = 1)
print(dipPlot)
source('~/1000GP/s_matrix_functions.R')
source('~/1000GP/process1000GPResults.R')
xmin <- min(minDip, 1-(maxDip-1)*.5)
xmax <- maxDip + (maxDip-minDip)*.3
xmin
dipPlot <- ggplot(plotData, aes(values)) +
geom_histogram(color="blue",bins=40,fill=I("blue")) +
ggtitle(paste0(subpop,collapse="_"))  + xlab("Similarity score") +
#         scale_x_continuous(expand=c(.4,0))+#
xlim(xmin, xmax) +
theme_classic() +
theme(plot.title = element_text(size=40), axis.title.x = element_text(size = 10), axis.title.y = element_blank(), axis.text.y=element_blank()) +
geom_vline(xintercept = bonferroni_cutoff_dip, color="red", linetype="longdash") +
geom_vline(data=subset(plotData, (values == maxDip & values>bonferroni_cutoff_dip)),aes(xintercept = values), color="blue", linetype="dotted") +
geom_vline(xintercept = median(gsm[row(gsm)!=col(gsm)]), color="black", linetype=1) +
geom_text(data=subset(plotData, values >= label_cutoff), aes(values,label=pairs), y=0, angle = 80, hjust=0, size=5) +
geom_text(data=subset(plotData, (values == maxDip & values>bonferroni_cutoff_dip)), x=maxDip, y=Inf, label=paste0("hat(phi)==", round(topValuesKinship[1],3),"  "),parse = TRUE, color="blue", angle = 0, size = 6, vjust = 2, hjust = 0) +
#         annotate("text", x=bonferroni_cutoff_dip, y=Inf, label=paste0("alpha==",format(alphaCutoff/num_comparisons_dip, digits=1)),parse = TRUE, color="red", angle = 0, size = 6, vjust = 2, hjust = 1) +
annotate("text", x=bonferroni_cutoff_dip, y=Inf, label=paste0("alpha "),parse = TRUE, color="red", angle = 0, size = 6, vjust = 2, hjust = 1.5) +
annotate("text", x=median(gsm[row(gsm)!=col(gsm)]), y=Inf, label=paste0("m=",round(median(gsm[row(gsm)!=col(gsm)]),3)," "), color="black", angle = 0, size=6, vjust=1.5, hjust = 1)
print(dipPlot)
xmin
source('~/1000GP/s_matrix_functions.R')
source('~/1000GP/process1000GPResults.R')
source('~/1000GP/s_matrix_functions.R', echo=TRUE)
source('~/1000GP/s_matrix_functions.R')
source('~/1000GP/process1000GPResults.R')
dipPlot <- ggplot(plotData, aes(values)) +
p <- ggplot(plotData, aes(sample = values))
p + stat_qq()
pop_i <- "JPT"
gsm=results[[pop_i]]$s_matrix_dip
var_s=var(s_vector)
pkweightsMean=results[[pop_i]]$pkweightsMean
subpop=pop_i
print(mean(gsm[row(gsm)!=col(gsm)]))
print(median(gsm[row(gsm)!=col(gsm)]))
num_comparisons_dip <- choose(ncol(gsm),2)
sample_IDs <- rownames(gsm)
bonferroni_cutoff_dip <- qnorm((1-alphaCutoff/2)^(1/num_comparisons_dip), sd=sqrt(var_s)) + 1
topValuesDip <- sort(gsm[row(gsm)>col(gsm)], decreasing=T)
topValuesKinship <- (topValuesDip-1)/(pkweightsMean-1)
# Display only those that are above the cutoff and among the top 5
label_cutoff <- max(bonferroni_cutoff_dip, topValuesDip[1])
pairs <- outer(sample_IDs, sample_IDs, paste)
plotData <- data.frame(values=gsm[row(gsm)>col(gsm)], pairs=paste0("  ",pairs[row(pairs)>col(pairs)]))
minDip <- min(plotData$values)
maxDip <- max(plotData$values)#ifelse(max(plotData$values)>bonferroni_cutoff_dip,max(plotData$values),NA)
xmin <- min(minDip, 1-(maxDip-1)*.5)
xmax <- maxDip + (maxDip-minDip)*.4
p <- ggplot(plotData, aes(sample = values))
p + stat_qq()
chisq.test(rnorm(100))
chisq.test(rnorm(100)^2)
results
ks.test(rnorm(100), "pnorm")
ks.test(rnorm(100,1), "pnorm")
ks.test(scale(rnorm(100,1)), "pnorm")
ks.test(scale(rnorm(100,1)), "pnorm")
ks.test(scale(rnorm(100,1)), "pnorm")
kstest <- ks.test(scale(s_vector), "pnorm")
kstest
btest <- binom.test(sum(s_vector>mean(s_vector)), length(s_vector), alternative="less")
btest
pop_i
sum(s_vector>mean(s_vector)
)
mean(s_vector)
median(s_vector)
s_vector <- results[[pop_i]]$s_matrix_dip[row(results[[pop_i]]$s_matrix_dip)>col(results[[pop_i]]$s_matrix_dip)]
topValuesKinship <- (sort(s_vector, decreasing=T)-1)/(results[[pop_i]]$weightsMean-1)
btest <- binom.test(sum(s_vector>mean(s_vector)), length(s_vector), alternative="less")
btest
kstest <- ks.test(scale(s_vector), "pnorm")
kstest
popResults <- as.data.table(t(sapply(names(results), function(pop_i){
s_vector <- results[[pop_i]]$s_matrix_dip[row(results[[pop_i]]$s_matrix_dip)>col(results[[pop_i]]$s_matrix_dip)]
topValuesKinship <- (sort(s_vector, decreasing=T)-1)/(results[[pop_i]]$weightsMean-1)
btest <- binom.test(sum(s_vector>mean(s_vector)), length(s_vector), alternative="less")
kstest <- ks.test(scale(s_vector), "pnorm")
c(structurePValue=btest$p.value, var_s=results[[pop_i]]$var_s_dip, sampleVariance=var(s_vector), structureKSTest=kstest$p.value)
})), keep.rownames=T)
names(popResults)[1] <- "pop"
popResults$group <- popGroup[popResults$pop,"group"]
popResults <- popResults[order(group,pop)]
popResults$pop <- factor(popResults$pop, levels=popResults$pop)
maxYvalue <- 165
ggPVals <- ggplot(popResults, aes(y=-log(structurePValue), x=pop))+ geom_point(aes(color=group),size=3) +
geom_hline(yintercept=-log(.05)) + #geom_text(aes(13,-log(.05),label = "alpha = .05", vjust = -1),parse = T) +
geom_hline(yintercept=-log(.01)) + #geom_text(aes(13,-log(.01),label = "alpha = .01", vjust = 1),parse = T) +
ggtitle("p-value for structure in each population") + theme_bw() +
ylab("-log(p-value)") + xlab("Population") + ggtitle("Structure Detected in 1000 Genomes Populations") +
guides(color = guide_legend(title = "Super population")) +
ylim(0,maxYvalue) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
print(ggPVals)
popResults <- as.data.table(t(sapply(names(results), function(pop_i){
s_vector <- results[[pop_i]]$s_matrix_dip[row(results[[pop_i]]$s_matrix_dip)>col(results[[pop_i]]$s_matrix_dip)]
topValuesKinship <- (sort(s_vector, decreasing=T)-1)/(results[[pop_i]]$weightsMean-1)
btest <- binom.test(sum(s_vector>mean(s_vector)), length(s_vector), alternative="less")
kstest <- ks.test(scale(s_vector), "pnorm")
c(structurePValue=kstest$p.value, var_s=results[[pop_i]]$var_s_dip, sampleVariance=var(s_vector), structureKSTest=kstest$p.value)
})), keep.rownames=T)
names(popResults)[1] <- "pop"
popResults$group <- popGroup[popResults$pop,"group"]
popResults <- popResults[order(group,pop)]
popResults$pop <- factor(popResults$pop, levels=popResults$pop)
maxYvalue <- 165
ggPVals <- ggplot(popResults, aes(y=-log(structurePValue), x=pop))+ geom_point(aes(color=group),size=3) +
geom_hline(yintercept=-log(.05)) + #geom_text(aes(13,-log(.05),label = "alpha = .05", vjust = -1),parse = T) +
geom_hline(yintercept=-log(.01)) + #geom_text(aes(13,-log(.01),label = "alpha = .01", vjust = 1),parse = T) +
ggtitle("p-value for structure in each population") + theme_bw() +
ylab("-log(p-value)") + xlab("Population") + ggtitle("Structure Detected in 1000 Genomes Populations") +
guides(color = guide_legend(title = "Super population")) +
ylim(0,maxYvalue) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
print(ggPVals)
maxYvalue <- 40
ggPVals <- ggplot(popResults, aes(y=-log(structurePValue), x=pop))+ geom_point(aes(color=group),size=3) +
geom_hline(yintercept=-log(.05)) + #geom_text(aes(13,-log(.05),label = "alpha = .05", vjust = -1),parse = T) +
geom_hline(yintercept=-log(.01)) + #geom_text(aes(13,-log(.01),label = "alpha = .01", vjust = 1),parse = T) +
ggtitle("p-value for structure in each population") + theme_bw() +
ylab("-log(p-value)") + xlab("Population") + ggtitle("Structure Detected in 1000 Genomes Populations") +
guides(color = guide_legend(title = "Super population")) +
ylim(0,maxYvalue) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
print(ggPVals)
popResults
plot(popResults$structurePValue,popResults$structureKSTest,)
plot(popResults$structurePValue,popResults$structureKSTest)
popResults <- as.data.table(t(sapply(names(results), function(pop_i){
s_vector <- results[[pop_i]]$s_matrix_dip[row(results[[pop_i]]$s_matrix_dip)>col(results[[pop_i]]$s_matrix_dip)]
topValuesKinship <- (sort(s_vector, decreasing=T)-1)/(results[[pop_i]]$weightsMean-1)
btest <- binom.test(sum(s_vector>mean(s_vector)), length(s_vector), alternative="less")
kstest <- ks.test(scale(s_vector), "pnorm")
c(structurePValue=btest$p.value, var_s=results[[pop_i]]$var_s_dip, sampleVariance=var(s_vector), structureKSTest=kstest$p.value)
})), keep.rownames=T)
plot(popResults$structurePValue,popResults$structureKSTest)
?ks.test
popResults <- as.data.table(t(sapply(names(results), function(pop_i){
s_vector <- results[[pop_i]]$s_matrix_dip[row(results[[pop_i]]$s_matrix_dip)>col(results[[pop_i]]$s_matrix_dip)]
topValuesKinship <- (sort(s_vector, decreasing=T)-1)/(results[[pop_i]]$weightsMean-1)
btest <- binom.test(sum(s_vector>mean(s_vector)), length(s_vector), alternative="less")
kstest <- ks.test(scale(s_vector), "pnorm", alternative = c("less"))
c(structurePValue=btest$p.value, var_s=results[[pop_i]]$var_s_dip, sampleVariance=var(s_vector), structureKSTest=kstest$p.value)
})), keep.rownames=T)
plot(popResults$structurePValue,popResults$structureKSTest)
ggPVals <- ggplot(popResults, aes(y=-log(structureKSTest), x=pop))+ geom_point(aes(color=group),size=3) +
geom_hline(yintercept=-log(.05)) + #geom_text(aes(13,-log(.05),label = "alpha = .05", vjust = -1),parse = T) +
geom_hline(yintercept=-log(.01)) + #geom_text(aes(13,-log(.01),label = "alpha = .01", vjust = 1),parse = T) +
ggtitle("p-value for structure in each population") + theme_bw() +
ylab("-log(p-value)") + xlab("Population") + ggtitle("Structure Detected in 1000 Genomes Populations") +
guides(color = guide_legend(title = "Super population")) +
ylim(0,maxYvalue) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
print(ggPVals)
popResults
ggPVals <- ggplot(popResults, aes(y=-log(structurePValue), x=pop))+ geom_point(aes(color=group),size=3) +
geom_hline(yintercept=-log(.05)) + #geom_text(aes(13,-log(.05),label = "alpha = .05", vjust = -1),parse = T) +
geom_hline(yintercept=-log(.01)) + #geom_text(aes(13,-log(.01),label = "alpha = .01", vjust = 1),parse = T) +
ggtitle("p-value for structure in each population") + theme_bw() +
ylab("-log(p-value)") + xlab("Population") + ggtitle("Structure Detected in 1000 Genomes Populations") +
guides(color = guide_legend(title = "Super population")) +
ylim(0,maxYvalue) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggPVals <- ggplot(popResults, aes(y=-log(structureKSTest), x=pop))+ geom_point(aes(color=group),size=3) +
geom_hline(yintercept=-log(.05)) + #geom_text(aes(13,-log(.05),label = "alpha = .05", vjust = -1),parse = T) +
geom_hline(yintercept=-log(.01)) + #geom_text(aes(13,-log(.01),label = "alpha = .01", vjust = 1),parse = T) +
ggtitle("p-value for structure in each population") + theme_bw() +
ylab("-log(p-value)") + xlab("Population") + ggtitle("Structure Detected in 1000 Genomes Populations") +
guides(color = guide_legend(title = "Super population")) +
ylim(0,maxYvalue) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
print(ggPVals)
ggPVals <- ggplot(popResults, aes(y=-log(structurePValue), x=pop))+ geom_point(aes(color=group),size=3) +
geom_hline(yintercept=-log(.05)) + #geom_text(aes(13,-log(.05),label = "alpha = .05", vjust = -1),parse = T) +
geom_hline(yintercept=-log(.01)) + #geom_text(aes(13,-log(.01),label = "alpha = .01", vjust = 1),parse = T) +
ggtitle("p-value for structure in each population") + theme_bw() +
ylab("-log(p-value)") + xlab("Population") + ggtitle("Structure Detected in 1000 Genomes Populations") +
guides(color = guide_legend(title = "Super population")) +
ylim(0,maxYvalue) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
print(ggPVals)
names(popResults)[1] <- "pop"
popResults$group <- popGroup[popResults$pop,"group"]
popResults <- popResults[order(group,pop)]
popResults$pop <- factor(popResults$pop, levels=popResults$pop)
maxYvalue <- 40
ggPVals <- ggplot(popResults, aes(y=-log(structureKSTest), x=pop))+ geom_point(aes(color=group),size=3) +
geom_hline(yintercept=-log(.05)) + #geom_text(aes(13,-log(.05),label = "alpha = .05", vjust = -1),parse = T) +
geom_hline(yintercept=-log(.01)) + #geom_text(aes(13,-log(.01),label = "alpha = .01", vjust = 1),parse = T) +
ggtitle("p-value for structure in each population") + theme_bw() +
ylab("-log(p-value)") + xlab("Population") + ggtitle("Structure Detected in 1000 Genomes Populations") +
guides(color = guide_legend(title = "Super population")) +
ylim(0,maxYvalue) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
print(ggPVals)
popResults
maxYvalue <- 80
ggPVals <- ggplot(popResults, aes(y=-log(structureKSTest), x=pop))+ geom_point(aes(color=group),size=3) +
geom_hline(yintercept=-log(.05)) + #geom_text(aes(13,-log(.05),label = "alpha = .05", vjust = -1),parse = T) +
geom_hline(yintercept=-log(.01)) + #geom_text(aes(13,-log(.01),label = "alpha = .01", vjust = 1),parse = T) +
ggtitle("p-value for structure in each population") + theme_bw() +
ylab("-log(p-value)") + xlab("Population") + ggtitle("Structure Detected in 1000 Genomes Populations") +
guides(color = guide_legend(title = "Super population")) +
ylim(0,maxYvalue) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
print(ggPVals)
outputDir <- "filtered99_LD10"
source('~/1000GP/process1000GPResults.R')
outputDir <- "filtered40_LD10"
source('~/.active-rstudio-document')
names(popResults)[1] <- "pop"
popResults$group <- popGroup[popResults$pop,"group"]
popResults <- popResults[order(group,pop)]
popResults$pop <- factor(popResults$pop, levels=popResults$pop)
maxYvalue <- 80
ggPVals <- ggplot(popResults, aes(y=-log(structureKSTest), x=pop))+ geom_point(aes(color=group),size=3) +
geom_hline(yintercept=-log(.05)) + #geom_text(aes(13,-log(.05),label = "alpha = .05", vjust = -1),parse = T) +
geom_hline(yintercept=-log(.01)) + #geom_text(aes(13,-log(.01),label = "alpha = .01", vjust = 1),parse = T) +
ggtitle("p-value for structure in each population") + theme_bw() +
ylab("-log(p-value)") + xlab("Population") + ggtitle("Structure Detected in 1000 Genomes Populations") +
guides(color = guide_legend(title = "Super population")) +
#     ylim(0,maxYvalue) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
pdf(paste0("./plots/s_distributions/",outputDir,"/pValueForPop.pdf"), width=8, height=8)
print(ggPVals)
dev.off()
outputDir <- "filtered40_TGP2261_LD10"
source('~/.active-rstudio-document')
source('~/1000GP/process1000GPResults.R')
outputDir <- "filtered40_LD10"
source('~/1000GP/process1000GPResults.R')
ggPVals <- ggplot(popResults, aes(y=-log(structureKSTest), x=pop))+ geom_point(aes(color=group),size=3) +
geom_hline(yintercept=-log(.05)) + #geom_text(aes(13,-log(.05),label = "alpha = .05", vjust = -1),parse = T) +
geom_hline(yintercept=-log(.01)) + #geom_text(aes(13,-log(.01),label = "alpha = .01", vjust = 1),parse = T) +
ggtitle("p-value for structure in each population") + theme_bw() +
ylab("-log(p-value)") + xlab("Population") + ggtitle("Structure Detected in 1000 Genomes Populations") +
guides(color = guide_legend(title = "Super population")) +
annotation_custom(
grob = textGrob(label = "alpha", hjust = 0, gp = gpar(cex = 1.5)),
ymin = df$y[i],      # Vertical position of the textGrob
ymax = df$y[i],
xmin = 14.3,         # Note: The grobs are positioned outside the plot area
xmax = 14.3) +
ylim(0,maxYvalue) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
library(grid)
ggPVals <- ggplot(popResults, aes(y=-log(structureKSTest), x=pop))+ geom_point(aes(color=group),size=3) +
geom_hline(yintercept=-log(.05)) + #geom_text(aes(13,-log(.05),label = "alpha = .05", vjust = -1),parse = T) +
geom_hline(yintercept=-log(.01)) + #geom_text(aes(13,-log(.01),label = "alpha = .01", vjust = 1),parse = T) +
ggtitle("p-value for structure in each population") + theme_bw() +
ylab("-log(p-value)") + xlab("Population") + ggtitle("Structure Detected in 1000 Genomes Populations") +
guides(color = guide_legend(title = "Super population")) +
annotation_custom(
grob = textGrob(label = "alpha", hjust = 0, gp = gpar(cex = 1.5)),
ymin = df$y[i],      # Vertical position of the textGrob
ymax = df$y[i],
xmin = 14.3,         # Note: The grobs are positioned outside the plot area
xmax = 14.3) +
ylim(0,maxYvalue) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
maxYvalue <- 200
ggPVals <- ggplot(popResults, aes(y=-log(structureKSTest), x=pop))+ geom_point(aes(color=group),size=3) +
geom_hline(yintercept=-log(.05)) + #geom_text(aes(13,-log(.05),label = "alpha = .05", vjust = -1),parse = T) +
geom_hline(yintercept=-log(.01)) + #geom_text(aes(13,-log(.01),label = "alpha = .01", vjust = 1),parse = T) +
ggtitle("p-value for structure in each population") + theme_bw() +
ylab("-log(p-value)") + xlab("Population") + ggtitle("Structure Detected in 1000 Genomes Populations") +
guides(color = guide_legend(title = "Super population")) +
annotation_custom(
grob = textGrob(label = "alpha", hjust = 0, gp = gpar(cex = 1.5)),
ymin = log(.01),      # Vertical position of the textGrob
ymax = log(.01),
xmin = 0,         # Note: The grobs are positioned outside the plot area
xmax = 0) +
ylim(0,maxYvalue) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
print(ggPVals)
ggPVals <- ggplot(popResults, aes(y=-log(structureKSTest), x=pop))+ geom_point(aes(color=group),size=3) +
geom_hline(yintercept=-log(.05)) + #geom_text(aes(13,-log(.05),label = "alpha = .05", vjust = -1),parse = T) +
geom_hline(yintercept=-log(.01)) + #geom_text(aes(13,-log(.01),label = "alpha = .01", vjust = 1),parse = T) +
ggtitle("p-value for structure in each population") + theme_bw() +
ylab("-log(p-value)") + xlab("Population") + ggtitle("Structure Detected in 1000 Genomes Populations") +
guides(color = guide_legend(title = "Super population")) +
annotation_custom(
grob = textGrob(label = "alpha", hjust = 0, gp = gpar(cex = 1.5)),
ymin = -log(.01),      # Vertical position of the textGrob
ymax = -log(.01),
xmin = 26,         # Note: The grobs are positioned outside the plot area
xmax = 26) +
ylim(0,maxYvalue) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
print(ggPVals)
ggPVals <- ggplot(popResults, aes(y=-log(structureKSTest), x=pop))+ geom_point(aes(color=group),size=3) +
geom_hline(yintercept=-log(.05)) + #geom_text(aes(13,-log(.05),label = "alpha = .05", vjust = -1),parse = T) +
geom_hline(yintercept=-log(.01)) + #geom_text(aes(13,-log(.01),label = "alpha = .01", vjust = 1),parse = T) +
ggtitle("p-value for structure in each population") + theme_bw() +
ylab("-log(p-value)") + xlab("Population") + ggtitle("Structure Detected in 1000 Genomes Populations") +
guides(color = guide_legend(title = "Super population")) +
scale_x_continuous(breaks = c(0,-log(0.01),50,100,150,200), labels = c("0","alpha","50","100","150","200"), parse = TRUE) +
#     annotation_custom(
#         grob = textGrob(label = "alpha", hjust = 0, gp = gpar(cex = 1.5)),
#         ymin = -log(.01),      # Vertical position of the textGrob
#         ymax = -log(.01),
#         xmin = 26,         # Note: The grobs are positioned outside the plot area
#         xmax = 26) +
#     ylim(0,maxYvalue) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggPVals <- ggplot(popResults, aes(y=-log(structureKSTest), x=pop))+ geom_point(aes(color=group),size=3) +
geom_hline(yintercept=-log(.05)) + #geom_text(aes(13,-log(.05),label = "alpha = .05", vjust = -1),parse = T) +
geom_hline(yintercept=-log(.01)) + #geom_text(aes(13,-log(.01),label = "alpha = .01", vjust = 1),parse = T) +
ggtitle("p-value for structure in each population") + theme_bw() +
ylab("-log(p-value)") + xlab("Population") + ggtitle("Structure Detected in 1000 Genomes Populations") +
guides(color = guide_legend(title = "Super population")) +
scale_x_continuous(breaks = c(0,-log(0.01),50,100,150,200), labels = expression(c("0","alpha","50","100","150","200")), parse = TRUE)
ggPVals <- ggplot(popResults, aes(y=-log(structureKSTest), x=pop))+ geom_point(aes(color=group),size=3) +
geom_hline(yintercept=-log(.05)) + #geom_text(aes(13,-log(.05),label = "alpha = .05", vjust = -1),parse = T) +
geom_hline(yintercept=-log(.01)) + #geom_text(aes(13,-log(.01),label = "alpha = .01", vjust = 1),parse = T) +
ggtitle("p-value for structure in each population") + theme_bw() +
ylab("-log(p-value)") + xlab("Population") + ggtitle("Structure Detected in 1000 Genomes Populations") +
guides(color = guide_legend(title = "Super population")) +
scale_x_continuous(breaks = c(0,-log(0.01),50,100,150,200), labels = expression(c("0","alpha","50","100","150","200")))
print(ggPVals)
