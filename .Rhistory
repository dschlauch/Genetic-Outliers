source('~/1000GP/s_matrix_functions.R')
calculateSMatrix("MXL", numberOfLines=1000, minVariants=10)
length(unique(group))
length(unique(pop))
unique(pop)
sortunique(pop))
sort(unique(pop))
sort(unique(pop))[6]
sort(unique(pop))[10]
sort(unique(pop))[15]
sort(unique(pop))[19]
sampleIDs
which(sampleIDs=="NA20278")
which(sampleIDs=="HG01948")
which(sampleIDs=="HG00098")
which(sampleIDs=="HG01667")
which(sampleIDs=="NA20760")
which(sampleIDs=="HG01440")
which(sampleIDs=="HG01442")
which(sampleIDs=="HG00524")
which(sampleIDs=="HG00525")
which(sampleIDs=="HG00526")
groups[which(sampleIDs=="HG00526")]
group[which(sampleIDs=="HG00526")]
group[which(sampleIDs=="HG00525")]
group[which(sampleIDs=="HG00524")]
pop[which(sampleIDs=="HG00524")]
pop[which(sampleIDs=="HG00525")]
pop[which(sampleIDs=="HG00514")]
pop[which(sampleIDs=="HG00502")]
pop[which(sampleIDs=="HG00580")]
pop[which(sampleIDs=="HG00582")]
pop[which(sampleIDs=="HG00635")]
pop[which(sampleIDs=="HG00634")]
pop[which(sampleIDs=="HG00636")]
pop[which(sampleIDs=="HG00584")]
pop[which(sampleIDs=="HG00583")]
pop[which(sampleIDs=="HG00585")]
pop[which(sampleIDs=="NA20414")]
pop[which(sampleIDs=="NA19625")]
pop[which(sampleIDs=="NA19625")]
pop[which(sampleIDs=="NA20414")]
calculateSMatrix("IBS", numberOfLines=1000, minVariants=10)
calculateSMatrix("IBS", numberOfLines=80695, minVariants=10)
source('~/1000GP/s_matrix_functions.R')
calculateSMatrix("IBS", numberOfLines=1695, minVariants=10)
source('~/1000GP/s_matrix_functions.R')
calculateSMatrix("IBS", numberOfLines=1695, minVariants=10)
source('~/1000GP/s_matrix_functions.R')
calculateSMatrix("IBS", numberOfLines=1695, minVariants=10)
sum(pop="IBS")
sum(pop=="IBS")
sum(pop=="CEU")
sum(pop=="CHS")
sum(pop=="CHB")
sum(pop=="STU")
sum(pop=="JPT")
sum(pop=="KHV")
sum(pop=="FIN")
sum(pop=="GBR")
sum(pop=="LWK")
sum(pop=="BEB")
sum(pop=="YRI")
unique(pop)
table(sum(pop==unique(pop)))
sort(unique(pop))
qnorm(.05)
qnorm(.05/2)
calculateSMatrix("BEB", numberOfLines=1695, minVariants=10)
calculateSMatrix("BEB", numberOfLines=20695, minVariants=10)
sum(pop=="ACB")
choose(96,2)
1/choose(96,2)
2*10^-4
unique(pop)
calculateSMatrix("YRI", numberOfLines=10695, minVariants=10)
calculateSMatrix("IBS", numberOfLines=1695, minVariants=10)
.05/1000
.95^(1/1000)
1-.95^(1/1000)
1-.95^(1/5000)
.05/5000
qnorm(.01)
library(ggplot2)
genotypeFile <- "./data/combinedFiltered1000.gz"
minVariants <- 10
sample <- read.table("~/1000GP/data/1000GP_Phase3.sample", sep=" ", header=T)
sampleIDs <- as.character(sample[,1])
pop <- as.character(sample[,2])
group <- as.character(sample[,3])
sex <- as.character(sample[,4])
hap.pop <- rep(pop,each=2)
hap.sampleIDs <- rep(as.character(sample[,1]),each=2)
source('~/1000GP/s_matrix_functions.R')
calculateSMatrix("IBS", numberOfLines=10000, minVariants=10)
calculateSMatrix("IBS", numberOfLines=40000, minVariants=10)
calculateSMatrix("YRI", numberOfLines=40000, minVariants=10)
s.i.j <-readRDS("~/1000GP/plots/allSamples_sij_80000.rds")
s.i.j <-readRDS("~/1000GP/plots/s_distributions/allSamples_sij_80000.rds")
s.i.j <-readRDS("~/1000GP/plots/s_distributions/")
s.i.j <-readRDS("~/1000GP/plots/s_distributions/plotdata/allSamples_sij_80000.rds")
dim(s.i.j)
s.i.j.dip <- (s.i.j[c(T,F),c(T,F)] + s.i.j[c(F,T),c(T,F)] +s.i.j[c(T,F),c(F,T)] + s.i.j[c(F,T),c(F,T)])/4
dim(s.i.j.dip)
allSamplesGSM <- s.i.j.dip
plotHeatmap(allSamplesGSM,title="s GSM")
plotHeatmap <-  function(x, subset=NA, title="GSM"){
if(is.na(subset)){
subset <- rep(T,nrow(x))
}
simMat <- as.matrix(x)[subset,subset]
diag(simMat)<-0
rownames(simMat) <- group[subset]
colnames(simMat) <- pop[subset]
hc <- hclust(as.dist(1-simMat),method="average")
d <- dendrapply(as.dendrogram(hc, hang=max(simMat)*.1), labelCol)
#     plot(d, main="Hierarchical Clustering across superpopulations", ylim=c(1-max(simMat)*1.25,1))
#     simMat[simMat>.005]<-.005
simMat[simMat>quantile(simMat,.99)]<-quantile(simMat,.99)
heatmap.2(simMat, Rowv=d, Colv=d, dendrogram="none", trace="none", main=title, col="bluered",
labRow="",labCol="",key=FALSE, RowSideColors=colorCodes[rownames(simMat)], ColSideColors=colorCodesPop[colnames(simMat)],
#           lwid = c(1,10),lhei = c(.01,5), margins = c(5,10))
)
legend("left", names(colorCodes), inset=c(0.1,0),  lty=1, lwd=10, col=colorCodes, cex = 0.75)
legend("topright", names(colorCodesPop[1:13]),  lty=1, lwd=10, col=colorCodesPop[1:13], cex = 0.5, horiz = T,  inset=c(0,.05))
legend("topright", names(colorCodesPop[14:26]),  lty=1, lwd=10, col=colorCodesPop[14:26], cex = 0.5, horiz = T,  inset=c(0,.10))
}
plotHeatmap(allSamplesGSM,title="s GSM")
ibrary(ggplot2)
genotypeFile <- "./data/combinedFiltered1000.gz"
minVariants <- 10
args<-commandArgs(TRUE)
if(length(args)!=0){
genotypeFile <- args[1]
numberOfLines <- as.numeric(args[2])
minVariants <- as.numeric(args[3])
}
#### Simulated data
# simn <- 3000
# numVariants <- 100000
# sim.w.numerator <- 2*(2*simn-1)
# simMAF <- runif(numVariants,0,.5)
# genotypes <- sapply(1:simn,function(x){
#     rbinom(numVariants,1,simMAF)
# })
# Real data
sample <- read.table("~/1000GP/data/1000GP_Phase3.sample", sep=" ", header=T)
sampleIDs <- as.character(sample[,1])
pop <- as.character(sample[,2])
group <- as.character(sample[,3])
sex <- as.character(sample[,4])
hap.pop <- rep(pop,each=2)
hap.sampleIDs <- rep(as.character(sample[,1]),each=2)
source('~/1000GP/s_matrix_functions.R')
plotHeatmap(allSamplesGSM,title="s GSM")
source('~/1000GP/all_samples_HCL.R')
plotHeatmap(allSamplesGSM,title="s GSM")
as.dist
matrix(rnorm(25),nrow=5)
simMat <- matrix(rnorm(25),nrow=5)
simMat <- simMat + t(simMat)
simMat
as.distsimMat)
as.dist(simMat)
hc <- hclust(as.dist(1-simMat),method="average")
d <- dendrapply(as.dendrogram(hc, hang=max(simMat)*.1), labelCol)
heatmap.2(simMat, Rowv=d, Colv=d, dendrogram="none", trace="none", main=title, col="bluered",
labRow="",labCol="",key=FALSE, RowSideColors=colorCodes[rownames(simMat)], ColSideColors=colorCodesPop[colnames(simMat)],
#           lwid = c(1,10),lhei = c(.01,5), margins = c(5,10))
)
heatmap.2(simMat)
diag(simMat)
diag(simMat) <- 1
heatmap.2(simMat)
heatmap.2(as.dist(simMat))
diag(simMat) <- 4
heatmap.2(simMat)
heatmap.2(allSamplesGSM)
s.i.j <-readRDS("~/1000GP/plots/s_distributions/plotdata/allSamples_sij_700000.rds")
x<-allSamplesGSM
title="GSM"
subset=NA
if(is.na(subset)){
subset <- rep(T,nrow(x))
}
simMat <- as.matrix(x)[subset,subset]
diag(simMat)<-0
rownames(simMat) <- group[subset]
colnames(simMat) <- pop[subset]
rownames(simMat)
heatmap.2(simMat, Rowv=d, Colv=d, dendrogram="none", trace="none", main=title, col="bluered",
labRow="",labCol="",key=FALSE, RowSideColors=colorCodes[rownames(simMat)], ColSideColors=colorCodesPop[colnames(simMat)],
#           lwid = c(1,10),lhei = c(.01,5), margins = c(5,10))
)
library(gplots)
colorCodes <- c(AFR="red", AMR="green", EUR="blue", SAS="yellow", EAS="black")
colorCodesPop <- c("dodgerblue2","#E31A1C", # red
"green4",
"#6A3D9A", # purple
"#FF7F00", # orange
"black","gold1",
"skyblue2","#FB9A99", # lt pink
"palegreen2",
"#CAB2D6", # lt purple
"#FDBF6F", # lt orange
"gray70", "khaki2",
"maroon","orchid1","deeppink1","blue1","steelblue4",
"darkturquoise","green1","yellow4","yellow3",
"darkorange4","brown","black")
names(colorCodesPop)<-unique(pop)
labelCol <- function(x) {
if (is.leaf(x)) {
## fetch label
label <- attr(x, "label")
#     code <- substr(label, 1, 1)
## use the following line to reset the label to one letter code
# attr(x, "label") <- code
attr(x, "nodePar") <- list(lab.col=colorCodes[label])
}
return(x)
}
heatmap.2(simMat, Rowv=d, Colv=d, dendrogram="none", trace="none", main=title, col="bluered",
labRow="",labCol="",key=FALSE, RowSideColors=colorCodes[rownames(simMat)], ColSideColors=colorCodesPop[colnames(simMat)],
#           lwid = c(1,10),lhei = c(.01,5), margins = c(5,10))
)
colorCodesPop[colnames(simMat)]
length(colorCodesPop[colnames(simMat)])
heatmap.2(simMat, Rowv=d, Colv=d, dendrogram="none", trace="none", main=title, col="bluered",
labRow="",labCol="",key=FALSE, RowSideColors=colorCodes[rownames(simMat)], ColSideColors=colorCodesPop[colnames(simMat)],
#           lwid = c(1,10),lhei = c(.01,5), margins = c(5,10))
)
dim(simMat)
ncol(simMat)
hc <- hclust(as.dist(1-simMat),method="average")
d <- dendrapply(as.dendrogram(hc, hang=max(simMat)*.1), labelCol)
heatmap.2(simMat, Rowv=d, Colv=d, dendrogram="none", trace="none", main=title, col="bluered",
labRow="",labCol="",key=FALSE, RowSideColors=colorCodes[rownames(simMat)], ColSideColors=colorCodesPop[colnames(simMat)],
#           lwid = c(1,10),lhei = c(.01,5), margins = c(5,10))
)
heatmap.2(simMat, trace="none", main=title, col="bluered",
labRow="",labCol="",key=FALSE, RowSideColors=colorCodes[rownames(simMat)], ColSideColors=colorCodesPop[colnames(simMat)],
#           lwid = c(1,10),lhei = c(.01,5), margins = c(5,10))
)
print(subpop)
subpop="CEU"
print(subpop)
filename <- "./data/combinedFiltered1000.gz"
con <- file(filename, "rt")
#     system.time(genotypes <- apply(do.call(cbind, strsplit(readLines(con, numberOfLines)," ")), 1,as.numeric)[,hap.pop%in%subpop])
numberOfLines
numberOfLines=1069
system.time(genotypes <- apply(do.call(cbind, strsplit(readLines(con, numberOfLines)," ")), 1,as.numeric)[,hap.pop%in%subpop])
dim(genotypes)
cov(genotypes)
cov(genotypes))dim()
dim(cov(genotypes))
varcovMat <- cov(genotypes[,c(T,F)] +,c(F,T))
varcovMat <- cov(genotypes[,c(T,F)] + genotypes[,c(F,T)])
dim(varcovMat)
sum(hap.pop=="CEU")
sum(hap.pop=="BEB")
sum(hap.pop=="IBS")
source('~/1000GP/s_matrix_functions.R')
res <- calculateSMatrix(unique(pop), filename="./data/combinedFiltered1000.gz", numberOfLines=10000, minVariants=5)
library(ggplot2)
genotypeFile <- "./data/combinedFiltered1000.gz"
minVariants <- 10
args<-commandArgs(TRUE)
if(length(args)!=0){
genotypeFile <- args[1]
numberOfLines <- as.numeric(args[2])
minVariants <- as.numeric(args[3])
}
#### Simulated data
# simn <- 3000
# numVariants <- 100000
# sim.w.numerator <- 2*(2*simn-1)
# simMAF <- runif(numVariants,0,.5)
# genotypes <- sapply(1:simn,function(x){
#     rbinom(numVariants,1,simMAF)
# })
# Real data
sample <- read.table("~/1000GP/data/1000GP_Phase3.sample", sep=" ", header=T)
sampleIDs <- as.character(sample[,1])
pop <- as.character(sample[,2])
group <- as.character(sample[,3])
sex <- as.character(sample[,4])
hap.pop <- rep(pop,each=2)
hap.sampleIDs <- rep(as.character(sample[,1]),each=2)
source('~/1000GP/s_matrix_functions.R')
source('~/1000GP/all_samples_HCL.R')
res <- calculateSMatrix(unique(pop), filename="./data/combinedFiltered1000.gz", numberOfLines=5000, minVariants=5)
allSamplesGSM <- res['s_i_j']
varcovMat <- res['varcovMat']
plotHeatmap(allSamplesGSM,title="s GSM")
class(allSamplesGSM)
allSamplesGSM <- res[['s_i_j']
]
allSamplesGSM <- res[['s_i_j']]
varcovMat <- res[['varcovMat']]
plotHeatmap(allSamplesGSM, title="s GSM")
plotHeatmap(varcovMat,title="varcov GSM")
tiff('~/1000GP/plots/s_matrix.tiff', width=960, height=960)
plotHeatmap(allSamplesGSM, title="s GSM")
dev.off()
tiff('~/1000GP/plots/varcov_matrix.tiff', width=960, height=960)
plotHeatmap(varcovMat,title="varcov GSM")
dev.off()
source('~/1000GP/s_matrix_functions.R')
res <- calculateSMatrix(unique(pop), filename="./data/combinedFiltered1000.gz", numberOfLines=20000, minVariants=5)
allSamplesGSM <- res[['s_i_j']]
varcovMat <- res[['varcovMat']]
tiff('~/1000GP/plots/s_matrix.tiff', width=960, height=960)
plotHeatmap(allSamplesGSM, title="s GSM")
dev.off()
tiff('~/1000GP/plots/varcov_matrix.tiff', width=960, height=960)
plotHeatmap(varcovMat,title="varcov GSM")
dev.off()
res <- calculateSMatrix(unique(pop), filename="./data/combinedFiltered1000.gz", numberOfLines=20000, minVariants=50)
allSamplesGSM <- res[['s_i_j']]
varcovMat <- res[['varcovMat']]
tiff('~/1000GP/plots/s_matrix.tiff', width=960, height=960)
plotHeatmap(allSamplesGSM, title="s GSM")
dev.off()
tiff('~/1000GP/plots/varcov_matrix.tiff', width=960, height=960)
plotHeatmap(varcovMat,title="varcov GSM")
dev.off()
minVariants
numberOfLines
numberOfLines <- 200000
numberOfLines <- 20000
genotypeFile
calculateSMatrix(c("ITU","STU"), filename=genotypeFile, numberOfLines=numberOfLines, minVariants=minVariants)
group
pop['HG03998']
pop
pop[which(sampleIDs['HG03998'])
]
pop[which(sampleIDs['HG03998'])]
which(sampleIDs['HG03998'])
which(sampleIDs=='HG03998')
pop[which(sampleIDs=='HG03998')]
pop[which(sampleIDs=='HG03873')]
pop[which(sampleIDs=='HG03899')]
pop[which(sampleIDs=='HG03733')]
pop[which(sampleIDs=='HG003754')]
pop[which(sampleIDs=='HG03754')]
pop[which(sampleIDs=='HG03750')]
pop[which(sampleIDs=='HG03750')]
pop[which(sampleIDs=='HG03985')]
pop[which(sampleIDs=='HG03740')]
subset <- rep(T,2504)
jm <- varcovMat
diag(jm)<-0
rownames(jm) <- group[subset]
colnames(jm) <- pop[subset]
hc <- hclust(as.dist(1-jm),method="average")
d <- dendrapply(as.dendrogram(hc, hang=max(jm)*.1), labelCol)
plot(d, main="Hierarchical Clustering across superpopulations", ylim=c(1-max(jm)*1.25,1))
subset <- pop%in%c("STU","ITU")
jm <- as.matrix(varcovMat)[subset,subset]
diag(jm)<-0
rownames(jm) <- group[subset]
colnames(jm) <- pop[subset]
hc <- hclust(as.dist(1-jm),method="average")
d <- dendrapply(as.dendrogram(hc, hang=max(jm)*.1), labelCol)
plot(d, main="Hierarchical Clustering across superpopulations", ylim=c(1-max(jm)*1.25,1))
jm<-t(jm)
hc <- hclust(as.dist(1-jm),method="average")
d <- dendrapply(as.dendrogram(hc, hang=max(jm)*.1), labelCol)
plot(d, main="Hierarchical Clustering across superpopulations", ylim=c(1-max(jm)*1.25,1))
jm <- allSamplesGSM
jm <- as.matrix(jm)[subset,subset]
diag(jm)<-0
rownames(jm) <- group[subset]
colnames(jm) <- pop[subset]
jm<-t(jm)
hc <- hclust(as.dist(1-jm),method="average")
d <- dendrapply(as.dendrogram(hc, hang=max(jm)*.1), labelCol)
plot(d, main="Hierarchical Clustering across superpopulations", ylim=c(1-max(jm)*1.25,1))
d
hc
hc <- hclust(as.dist(max(jm)-jm),method="average")
d <- dendrapply(as.dendrogram(hc, hang=max(jm)*.1), labelCol)
plot(d, main="Hierarchical Clustering across superpopulations", ylim=c(1-max(jm)*1.25,1))
max(jm)-jm
plot(d, main="Hierarchical Clustering across superpopulations")
hclplot <- function(jaccardMat, pop1, pop2, name){
rownames(jaccardMat) <- sample[,2]
popsubset <- grepl(pop1, rownames(jaccardMat))|grepl(pop2, rownames(jaccardMat))
jaccardMat <- jaccardMat[popsubset,popsubset]
diag(jaccardMat) <- 0
lowest.node <- max(jaccardMat)
hclObj <- as.dendrogram(hclust(as.dist(1-jaccardMat),method="average"), hang=lowest.node*.1)
labels_colors(hclObj) <- c('red','blue')[as.numeric(as.factor(rownames(jaccardMat)))[order.dendrogram(hclObj)]]
plot(hclObj,ylim=c(1-lowest.node*1.25,1), main = paste0(pop1,', ',pop2,' Hierarchical Clustering\n', name), axes=FALSE)
}
rownames(jm)
colnames(jm)
hclplot(jm,"STU","ITU","test")
jaccardMat <-  jm
pop1 <- "ITU"
pop2 <- "STU"
name
name <- "test"
rownames(jaccardMat) <- sample[,2]
popsubset <- grepl(pop1, rownames(jaccardMat))|grepl(pop2, rownames(jaccardMat))
sample
jaccardMat<-allSamplesGSM
rownames(jaccardMat) <- sample[,2]
popsubset <- grepl(pop1, rownames(jaccardMat))|grepl(pop2, rownames(jaccardMat))
jaccardMat <- jaccardMat[popsubset,popsubset]
diag(jaccardMat) <- 0
lowest.node <- max(jaccardMat)
hclObj <- as.dendrogram(hclust(as.dist(1-jaccardMat),method="average"), hang=lowest.node*.1)
labels_colors(hclObj) <- c('red','blue')[as.numeric(as.factor(rownames(jaccardMat)))[order.dendrogram(hclObj)]]
library(data.table)
library(ggplot2)
library(gplots)
library(RColorBrewer)
library(cluster)
library(dendextend)
hclObj <- as.dendrogram(hclust(as.dist(1-jaccardMat),method="average"), hang=lowest.node*.1)
labels_colors(hclObj) <- c('red','blue')[as.numeric(as.factor(rownames(jaccardMat)))[order.dendrogram(hclObj)]]
plot(hclObj,ylim=c(1-lowest.node*1.25,1), main = paste0(pop1,', ',pop2,' Hierarchical Clustering\n', name), axes=FALSE)
?as.dist
hclObj <- as.dendrogram(hclust(as.dist(max(jaccardMat)-jaccardMat),method="average"), hang=lowest.node*.1)
labels_colors(hclObj) <- c('red','blue')[as.numeric(as.factor(rownames(jaccardMat)))[order.dendrogram(hclObj)]]
plot(hclObj,ylim=c(1-lowest.node*1.25,1), main = paste0(pop1,', ',pop2,' Hierarchical Clustering\n', name), axes=FALSE)
hclObj <- as.dendrogram(hclust(as.dist((max(jaccardMat)-jaccardMat))/max(jaccardMat),method="average"), hang=lowest.node*.1)
labels_colors(hclObj) <- c('red','blue')[as.numeric(as.factor(rownames(jaccardMat)))[order.dendrogram(hclObj)]]
plot(hclObj,ylim=c(1-lowest.node*1.25,1), main = paste0(pop1,', ',pop2,' Hierarchical Clustering\n', name), axes=FALSE)
hclplot(allSamplesGSM,"STU","ITU","test")
hclplot <- function(jaccardMat, pop1, pop2, name){
rownames(jaccardMat) <- sample[,2]
popsubset <- grepl(pop1, rownames(jaccardMat))|grepl(pop2, rownames(jaccardMat))
jaccardMat <- jaccardMat[popsubset,popsubset]
diag(jaccardMat) <- 0
lowest.node <- max(jaccardMat)
hclObj <- as.dendrogram(hclust(as.dist((max(jaccardMat)-jaccardMat))/max(jaccardMat),method="average"), hang=lowest.node*.1)
labels_colors(hclObj) <- c('red','blue')[as.numeric(as.factor(rownames(jaccardMat)))[order.dendrogram(hclObj)]]
plot(hclObj,ylim=c(1-lowest.node*1.25,1), main = paste0(pop1,', ',pop2,' Hierarchical Clustering\n', name), axes=FALSE)
}
hclplot(allSamplesGSM,"STU","ITU","test")
hclplot(varcovMat,"STU","ITU","test")
jaccardMat <- varcovMat
rownames(jaccardMat) <- sample[,2]
popsubset <- grepl(pop1, rownames(jaccardMat))|grepl(pop2, rownames(jaccardMat))
jaccardMat <- jaccardMat[popsubset,popsubset]
diag(jaccardMat) <- 0
lowest.node <- max(jaccardMat)
hclObj <- as.dendrogram(hclust(as.dist((max(jaccardMat)-jaccardMat))/max(jaccardMat),method="average"), hang=lowest.node*.1)
labels_colors(hclObj) <- c('red','blue')[as.numeric(as.factor(rownames(jaccardMat)))[order.dendrogram(hclObj)]]
plot(hclObj,ylim=c(1-lowest.node*1.25,1), main = paste0(pop1,', ',pop2,' Hierarchical Clustering\n', name), axes=FALSE)
jaccardMat
hclplot <- function(jaccardMat, pop1, pop2, name){
rownames(jaccardMat) <- sample[,2]
popsubset <- grepl(pop1, rownames(jaccardMat))|grepl(pop2, rownames(jaccardMat))
jaccardMat <- jaccardMat[popsubset,popsubset]
diag(jaccardMat) <- 0
lowest.node <- max(jaccardMat)
hclObj <- as.dendrogram(hclust(as.dist((max(jaccardMat)-jaccardMat)/max(jaccardMat)),method="average"), hang=lowest.node*.1)
labels_colors(hclObj) <- c('red','blue')[as.numeric(as.factor(rownames(jaccardMat)))[order.dendrogram(hclObj)]]
plot(hclObj,ylim=c(1-lowest.node*1.25,1), main = paste0(pop1,', ',pop2,' Hierarchical Clustering\n', name), axes=FALSE)
}
hclplot(varcovMat,"STU","ITU","test")
hclplot(allSamplesGSM,"STU","ITU","test")
rownames(jaccardMat) <- sample[,2]
jaccardMat <- varcovMat
rownames(jaccardMat) <- sample[,2]
popsubset <- grepl(pop1, rownames(jaccardMat))|grepl(pop2, rownames(jaccardMat))
jaccardMat <- jaccardMat[popsubset,popsubset]
diag(jaccardMat) <- 0
lowest.node <- max(jaccardMat)
hclObj <- as.dendrogram(hclust(as.dist((max(jaccardMat)-jaccardMat)/max(jaccardMat)),method="average"), hang=lowest.node*.1)
labels_colors(hclObj) <- c('red','blue')[as.numeric(as.factor(rownames(jaccardMat)))[order.dendrogram(hclObj)]]
plot(hclObj,ylim=c(1-lowest.node*1.25,1), main = paste0(pop1,', ',pop2,' Hierarchical Clustering\n', name), axes=FALSE)
lowest.node
hclplot <- function(jaccardMat, pop1, pop2, name){
rownames(jaccardMat) <- sample[,2]
popsubset <- grepl(pop1, rownames(jaccardMat))|grepl(pop2, rownames(jaccardMat))
jaccardMat <- jaccardMat[popsubset,popsubset]
diag(jaccardMat) <- 0
jaccardMat <- (max(jaccardMat)-jaccardMat)/max(jaccardMat)
lowest.node <- max(jaccardMat)
hclObj <- as.dendrogram(hclust(as.dist(jaccardMat),method="average"), hang=lowest.node*.1)
labels_colors(hclObj) <- c('red','blue')[as.numeric(as.factor(rownames(jaccardMat)))[order.dendrogram(hclObj)]]
plot(hclObj,ylim=c(1-lowest.node*1.25,1), main = paste0(pop1,', ',pop2,' Hierarchical Clustering\n', name), axes=FALSE)
}
hclplot(varcovMat,"STU","ITU","test")
hclplot(allSamplesGSM,"STU","ITU","test")
res <- readRDS('~/1000GP/plots/s_distributions/plotdata/allSamples_sij_80695')
res <- readRDS('~/1000GP/plots/s_distributions/plotdata/allSamples_sij_80695.rds')
allSamplesGSM <- res[['s_i_j']]
names(allSamplesGSM)
length(allSamplesGSM)
dim(allSamplesGSM)
allSamplesGSM <- res
hclplot(allSamplesGSM,"STU","ITU","test")
hclplot(allSamplesGSM,"STU","CEU","test")
hist(c(allSamplesGSM))
hist(c(varcovMat))
kmeans
kmeans(jaccardMat,k=2)
?kmeans
?pam
pam(allSamplesGSM, k=5, diss=T)
pam(10-allSamplesGSM, k=5, diss=T)
pam(10-varcovMat, k=5, diss=T)
?pam
summary(pam(10-varcovMat, k=5, diss=T))
plot(pam(10-varcovMat, k=5, diss=T))
