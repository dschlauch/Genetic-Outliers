geom_vline(xintercept = median(gsm[row(gsm)!=col(gsm)]), color="red", linetype=1) +
geom_text(data=subset(plotData, values > bonferroni_cutoff_dip), aes(values,label=pairs), y=0, angle = 80, hjust=0, size=3) +
geom_text(data=subset(plotData, (values == maxDip & values>bonferroni_cutoff_dip)), x=maxDip, y=Inf, label=paste0("hat(phi)==", round(topValuesKinship[1],3),"  "),parse = TRUE, color="blue", angle = 0, size = 5, vjust = 1, hjust = 1) +
annotate("text", x=bonferroni_cutoff_dip, y=Inf, label=paste0("alpha==",format(alpha/num_comparisons_dip, digits=1)),parse = TRUE, color="red", angle = 0, size = 5, vjust = 1, hjust = 1) +
annotate("text", x=median(gsm[row(gsm)!=col(gsm)]), y=Inf, label=paste0("m=",round(median(gsm[row(gsm)!=col(gsm)]),3)," "), color="red", angle = 0, size = 5, vjust = 1, hjust = 1)
bonferroni_cutoff_dip<-8
ggplot(plotData, aes(values)) +
geom_histogram(color="blue",binwidth=.01,fill=I("blue")) +
ggtitle(paste0(subpop,collapse="_"))  + xlab("Similarity score") +
scale_x_continuous(expand=c(0, 1)) +
theme_bw() +
theme(plot.title = element_text(size=40), axis.title.x = element_text(size = 10), axis.title.y = element_blank(), axis.text.y=element_blank()) +
geom_vline(xintercept = bonferroni_cutoff_dip, color="red", linetype="dotted") +
geom_vline(data=subset(plotData, (values == maxDip & values>bonferroni_cutoff_dip)),aes(xintercept = values), color="blue", linetype="dotted") +
geom_vline(xintercept = median(gsm[row(gsm)!=col(gsm)]), color="red", linetype=1) +
geom_text(data=subset(plotData, values > bonferroni_cutoff_dip), aes(values,label=pairs), y=0, angle = 80, hjust=0, size=3) +
geom_text(data=subset(plotData, (values == maxDip & values>bonferroni_cutoff_dip)), x=maxDip, y=Inf, label=paste0("hat(phi)==", round(topValuesKinship[1],3),"  "),parse = TRUE, color="blue", angle = 0, size = 5, vjust = 1, hjust = 1) +
annotate("text", x=bonferroni_cutoff_dip, y=Inf, label=paste0("alpha==",format(alpha/num_comparisons_dip, digits=1)),parse = TRUE, color="red", angle = 0, size = 5, vjust = 1, hjust = 1) +
annotate("text", x=median(gsm[row(gsm)!=col(gsm)]), y=Inf, label=paste0("m=",round(median(gsm[row(gsm)!=col(gsm)]),3)," "), color="red", angle = 0, size = 5, vjust = 1, hjust = 1)
ggplot(plotData, aes(values)) +
geom_histogram(color="blue",binwidth=.01,fill=I("blue")) +
ggtitle(paste0(subpop,collapse="_"))  + xlab("Similarity score") +
scale_x_continuous(expand=c(0, 1)) +
theme_bw() +
theme(plot.title = element_text(size=40), axis.title.x = element_text(size = 10), axis.title.y = element_blank(), axis.text.y=element_blank()) +
geom_vline(xintercept = bonferroni_cutoff_dip, color="red", linetype="dotted") +
geom_vline(data=subset(plotData, (values == maxDip & values>bonferroni_cutoff_dip)),aes(xintercept = values), color="blue", linetype="dotted") +
geom_vline(xintercept = median(gsm[row(gsm)!=col(gsm)]), color="red", linetype=1)
ggplot(plotData, aes(values)) +
geom_histogram(color="blue",binwidth=.01,fill=I("blue")) +
ggtitle(paste0(subpop,collapse="_"))  + xlab("Similarity score") +
scale_x_continuous(expand=c(0, 1)) +
theme_bw() +
theme(plot.title = element_text(size=40), axis.title.x = element_text(size = 10), axis.title.y = element_blank(), axis.text.y=element_blank()) +
geom_vline(xintercept = bonferroni_cutoff_dip, color="red", linetype="dotted") +
geom_vline(data=subset(plotData, (values == maxDip & values>bonferroni_cutoff_dip)),aes(xintercept = values), color="blue", linetype="dotted") +
geom_vline(xintercept = median(gsm[row(gsm)!=col(gsm)]), color="red", linetype=1) +
geom_text(data=subset(plotData, values > bonferroni_cutoff_dip), aes(values,label=pairs), y=0, angle = 80, hjust=0, size=3) +
geom_text(data=subset(plotData, (values == maxDip & values>bonferroni_cutoff_dip)), x=maxDip, y=Inf, label=paste0("hat(phi)==", round(topValuesKinship[1],3),"  "),parse = TRUE, color="blue", angle = 0, size = 5, vjust = 1, hjust = 1)
ggplot(plotData, aes(values)) +
geom_histogram(color="blue",binwidth=.01,fill=I("blue")) +
ggtitle(paste0(subpop,collapse="_"))  + xlab("Similarity score") +
scale_x_continuous(expand=c(0, 1)) +
theme_bw() +
theme(plot.title = element_text(size=40), axis.title.x = element_text(size = 10), axis.title.y = element_blank(), axis.text.y=element_blank()) +
geom_vline(xintercept = bonferroni_cutoff_dip, color="red", linetype="dotted") +
geom_vline(data=subset(plotData, (values == maxDip & values>bonferroni_cutoff_dip)),aes(xintercept = values), color="blue", linetype="dotted") +
geom_vline(xintercept = median(gsm[row(gsm)!=col(gsm)]), color="red", linetype=1) +
geom_text(data=subset(plotData, values > bonferroni_cutoff_dip), aes(values,label=pairs), y=0, angle = 80, hjust=0, size=3)
ggplot(plotData, aes(values)) +
geom_histogram(color="blue",binwidth=.01,fill=I("blue")) +
ggtitle(paste0(subpop,collapse="_"))  + xlab("Similarity score") +
scale_x_continuous(expand=c(0, 1)) +
theme_bw() +
theme(plot.title = element_text(size=40), axis.title.x = element_text(size = 10), axis.title.y = element_blank(), axis.text.y=element_blank()) +
geom_vline(xintercept = bonferroni_cutoff_dip, color="red", linetype="dotted") +
geom_vline(data=subset(plotData, (values == maxDip & values>bonferroni_cutoff_dip)),aes(xintercept = values), color="blue", linetype="dotted") +
geom_vline(xintercept = median(gsm[row(gsm)!=col(gsm)]), color="red", linetype=1) +
geom_text(data=subset(plotData, values > bonferroni_cutoff_dip), aes(values,label=pairs), y=0, angle = 80, hjust=0, size=3) +
geom_text(data=subset(plotData, (values == maxDip & values>bonferroni_cutoff_dip)), x=maxDip, y=Inf, label=paste0("hat(phi)==", round(topValuesKinship[1],3),"  "),parse = TRUE, color="blue", angle = 0, size = 5, vjust = 1, hjust = 1) +
annotate("text", x=bonferroni_cutoff_dip, y=Inf, label=paste0("alpha==",format(alpha/num_comparisons_dip, digits=1)),parse = TRUE, color="red", angle = 0, size = 5, vjust = 1, hjust = 1) +
annotate("text", x=median(gsm[row(gsm)!=col(gsm)]), y=Inf, label=paste0("m=",round(median(gsm[row(gsm)!=col(gsm)]),3)," "), color="red", angle = 0, size = 5, vjust = 1, hjust = 1)
bonferroni_cutoff_dip<-6
ggplot(plotData, aes(values)) +
geom_histogram(color="blue",binwidth=.01,fill=I("blue")) +
ggtitle(paste0(subpop,collapse="_"))  + xlab("Similarity score") +
scale_x_continuous(expand=c(0, 1)) +
theme_bw() +
theme(plot.title = element_text(size=40), axis.title.x = element_text(size = 10), axis.title.y = element_blank(), axis.text.y=element_blank()) +
geom_vline(xintercept = bonferroni_cutoff_dip, color="red", linetype="dotted") +
geom_vline(data=subset(plotData, (values == maxDip & values>bonferroni_cutoff_dip)),aes(xintercept = values), color="blue", linetype="dotted") +
geom_vline(xintercept = median(gsm[row(gsm)!=col(gsm)]), color="red", linetype=1) +
geom_text(data=subset(plotData, values > bonferroni_cutoff_dip), aes(values,label=pairs), y=0, angle = 80, hjust=0, size=3) +
geom_text(data=subset(plotData, (values == maxDip & values>bonferroni_cutoff_dip)), x=maxDip, y=Inf, label=paste0("hat(phi)==", round(topValuesKinship[1],3),"  "),parse = TRUE, color="blue", angle = 0, size = 5, vjust = 1, hjust = 1) +
annotate("text", x=bonferroni_cutoff_dip, y=Inf, label=paste0("alpha==",format(alpha/num_comparisons_dip, digits=1)),parse = TRUE, color="red", angle = 0, size = 5, vjust = 1, hjust = 1) +
annotate("text", x=median(gsm[row(gsm)!=col(gsm)]), y=Inf, label=paste0("m=",round(median(gsm[row(gsm)!=col(gsm)]),3)," "), color="red", angle = 0, size = 5, vjust = 1, hjust = 1)
ggplot(plotData, aes(values)) +
geom_histogram(color="blue",binwidth=.01,fill=I("blue")) +
ggtitle(paste0(subpop,collapse="_"))  + xlab("Similarity score") +
scale_x_continuous(expand=c(0, 1)) +
theme_bw() +
theme(plot.title = element_text(size=40), axis.title.x = element_text(size = 10), axis.title.y = element_blank(), axis.text.y=element_blank()) +
geom_vline(xintercept = bonferroni_cutoff_dip, color="red", linetype="dotted") +
geom_vline(data=subset(plotData, (values == maxDip & values>bonferroni_cutoff_dip)),aes(xintercept = values), color="blue", linetype="dotted") +
geom_vline(xintercept = median(gsm[row(gsm)!=col(gsm)]), color="red", linetype=1) +
geom_text(data=subset(plotData, values > bonferroni_cutoff_dip), aes(values,label=pairs), y=0, angle = 80, hjust=0, size=3) +
geom_text(data=subset(plotData, (values == maxDip & values>bonferroni_cutoff_dip)), x=maxDip, y=Inf, label=paste0("hat(phi)==", round(topValuesKinship[1],3),"  "),parse = TRUE, color="blue", angle = 0, size = 5, vjust = 1, hjust = 0) +
annotate("text", x=bonferroni_cutoff_dip, y=Inf, label=paste0("alpha==",format(alpha/num_comparisons_dip, digits=1)),parse = TRUE, color="red", angle = 0, size = 5, vjust = 1, hjust = 1) +
annotate("text", x=median(gsm[row(gsm)!=col(gsm)]), y=Inf, label=paste0("m=",round(median(gsm[row(gsm)!=col(gsm)]),3)," "), color="red", angle = 0, size = 5, vjust = 1, hjust = 1)
ggplot(plotData, aes(values)) +
geom_histogram(color="blue",binwidth=.01,fill=I("blue")) +
ggtitle(paste0(subpop,collapse="_"))  + xlab("Similarity score") +
scale_x_continuous(limits=c(0, maxDip+1)) +
theme_bw() +
theme(plot.title = element_text(size=40), axis.title.x = element_text(size = 10), axis.title.y = element_blank(), axis.text.y=element_blank()) +
geom_vline(xintercept = bonferroni_cutoff_dip, color="red", linetype="dotted") +
geom_vline(data=subset(plotData, (values == maxDip & values>bonferroni_cutoff_dip)),aes(xintercept = values), color="blue", linetype="dotted") +
geom_vline(xintercept = median(gsm[row(gsm)!=col(gsm)]), color="red", linetype=1) +
geom_text(data=subset(plotData, values > bonferroni_cutoff_dip), aes(values,label=pairs), y=0, angle = 80, hjust=0, size=3) +
geom_text(data=subset(plotData, (values == maxDip & values>bonferroni_cutoff_dip)), x=maxDip, y=Inf, label=paste0("hat(phi)==", round(topValuesKinship[1],3),"  "),parse = TRUE, color="blue", angle = 0, size = 5, vjust = 1, hjust = 0) +
annotate("text", x=bonferroni_cutoff_dip, y=Inf, label=paste0("alpha==",format(alpha/num_comparisons_dip, digits=1)),parse = TRUE, color="red", angle = 0, size = 5, vjust = 1, hjust = 1) +
annotate("text", x=median(gsm[row(gsm)!=col(gsm)]), y=Inf, label=paste0("m=",round(median(gsm[row(gsm)!=col(gsm)]),3)," "), color="red", angle = 0, size = 5, vjust = 1, hjust = 1)
ggplot(plotData, aes(values)) +
geom_histogram(color="blue",binwidth=.01,fill=I("white")) +
ggtitle(paste0(subpop,collapse="_"))  + xlab("Similarity score") +
scale_x_continuous(limits=c(0, maxDip+1)) +
theme_bw() +
theme(plot.title = element_text(size=40), axis.title.x = element_text(size = 10), axis.title.y = element_blank(), axis.text.y=element_blank()) +
geom_vline(xintercept = bonferroni_cutoff_dip, color="red", linetype="dotted") +
geom_vline(data=subset(plotData, (values == maxDip & values>bonferroni_cutoff_dip)),aes(xintercept = values), color="blue", linetype="dotted") +
geom_vline(xintercept = median(gsm[row(gsm)!=col(gsm)]), color="red", linetype=1) +
geom_text(data=subset(plotData, values > bonferroni_cutoff_dip), aes(values,label=pairs), y=0, angle = 80, hjust=0, size=3) +
geom_text(data=subset(plotData, (values == maxDip & values>bonferroni_cutoff_dip)), x=maxDip, y=Inf, label=paste0("hat(phi)==", round(topValuesKinship[1],3),"  "),parse = TRUE, color="blue", angle = 0, size = 5, vjust = 1, hjust = 0) +
annotate("text", x=bonferroni_cutoff_dip, y=Inf, label=paste0("alpha==",format(alpha/num_comparisons_dip, digits=1)),parse = TRUE, color="red", angle = 0, size = 5, vjust = 1, hjust = 1) +
annotate("text", x=median(gsm[row(gsm)!=col(gsm)]), y=Inf, label=paste0("m=",round(median(gsm[row(gsm)!=col(gsm)]),3)," "), color="red", angle = 0, size = 5, vjust = 1, hjust = 1)
ggplot(plotData, aes(values)) +
geom_histogram(color="blue",binwidth=.01,fill=I("blue")) +
ggtitle(paste0(subpop,collapse="_"))  + xlab("Similarity score") +
scale_x_continuous(limits=c(0, maxDip+1)) +
theme_bw() +
theme(plot.title = element_text(size=40), axis.title.x = element_text(size = 10), axis.title.y = element_blank(), axis.text.y=element_blank()) +
geom_vline(xintercept = bonferroni_cutoff_dip, color="red", linetype="dotted") +
geom_vline(data=subset(plotData, (values == maxDip & values>bonferroni_cutoff_dip)),aes(xintercept = values), color="blue", linetype="dotted") +
geom_vline(xintercept = median(gsm[row(gsm)!=col(gsm)]), color="red", linetype=1) +
geom_text(data=subset(plotData, values > bonferroni_cutoff_dip), aes(values,label=pairs), y=0, angle = 80, hjust=0, size=3) +
geom_text(data=subset(plotData, (values == maxDip & values>bonferroni_cutoff_dip)), x=maxDip, y=Inf, label=paste0("hat(phi)==", round(topValuesKinship[1],3),"  "),parse = TRUE, color="blue", angle = 0, size = 5, vjust = 1, hjust = 0) +
annotate("text", x=bonferroni_cutoff_dip, y=Inf, label=paste0("alpha==",format(alpha/num_comparisons_dip, digits=1)),parse = TRUE, color="red", angle = 0, size = 5, vjust = 1, hjust = 1) +
annotate("text", x=median(gsm[row(gsm)!=col(gsm)]), y=Inf, label=paste0("m=",round(median(gsm[row(gsm)!=col(gsm)]),3)," "), color="red", angle = 0, size = 5, vjust = 1, hjust = 1)
dipPlot <- ggplot(plotData, aes(values)) +
geom_histogram(color="blue",binwidth=.01,fill=I("blue")) +
ggtitle(paste0(subpop,collapse="_"))  + xlab("Similarity score") +
scale_x_continuous(limits=c(0, maxDip+1)) +
theme_bw() +
theme(plot.title = element_text(size=40), axis.title.x = element_text(size = 10), axis.title.y = element_blank(), axis.text.y=element_blank()) +
geom_vline(xintercept = bonferroni_cutoff_dip, color="red", linetype="dotted") +
geom_vline(data=subset(plotData, (values == maxDip & values>bonferroni_cutoff_dip)),aes(xintercept = values), color="blue", linetype="dotted") +
geom_vline(xintercept = median(gsm[row(gsm)!=col(gsm)]), color="red", linetype=1) +
geom_text(data=subset(plotData, values > bonferroni_cutoff_dip), aes(values,label=pairs), y=0, angle = 80, hjust=0, size=3) +
geom_text(data=subset(plotData, (values == maxDip & values>bonferroni_cutoff_dip)), x=maxDip, y=Inf, label=paste0("hat(phi)==", round(topValuesKinship[1],3),"  "),parse = TRUE, color="blue", angle = 0, size = 5, vjust = 1, hjust = 0) +
annotate("text", x=bonferroni_cutoff_dip, y=Inf, label=paste0("alpha==",format(alpha/num_comparisons_dip, digits=1)),parse = TRUE, color="red", angle = 0, size = 5, vjust = 1, hjust = 1) +
annotate("text", x=median(gsm[row(gsm)!=col(gsm)]), y=Inf, label=paste0("m=",round(median(gsm[row(gsm)!=col(gsm)]),3)," "), color="red", angle = 0, size = 5, vjust = 1, hjust = 1)
pdf(paste0("./plots/s_distributions/",paste0(subpop,collapse="_"), plotname, ".pdf"), width=4, height=4)
print(dipPlot)
dev.off()
dipPlot <- ggplot(plotData, aes(values)) +
geom_histogram(color="blue",binwidth=.01,fill=I("blue")) +
ggtitle(paste0(subpop,collapse="_"))  + xlab("Similarity score") +
scale_x_continuous(limits=c(0, maxDip+1)) +
theme_bw() +
theme(plot.title = element_text(size=40), axis.title.x = element_text(size = 10), axis.title.y = element_blank(), axis.text.y=element_blank()) +
geom_vline(xintercept = bonferroni_cutoff_dip, color="red", linetype="dotted") +
geom_vline(data=subset(plotData, (values == maxDip & values>bonferroni_cutoff_dip)),aes(xintercept = values), color="blue", linetype="dotted") +
geom_vline(xintercept = median(gsm[row(gsm)!=col(gsm)]), color="red", linetype=1) +
geom_text(data=subset(plotData, values > bonferroni_cutoff_dip), aes(values,label=pairs), y=0, angle = 80, hjust=0, size=3) +
geom_text(data=subset(plotData, (values == maxDip & values>bonferroni_cutoff_dip)), x=maxDip, y=Inf, label=paste0("hat(phi)==", round(topValuesKinship[1],3),"  "),parse = TRUE, color="blue", angle = 0, size = 3, vjust = 1, hjust = 0) +
annotate("text", x=bonferroni_cutoff_dip, y=Inf, label=paste0("alpha==",format(alpha/num_comparisons_dip, digits=1)),parse = TRUE, color="red", angle = 0, size = 3, vjust = 1, hjust = 1) +
annotate("text", x=median(gsm[row(gsm)!=col(gsm)]), y=Inf, label=paste0("m=",round(median(gsm[row(gsm)!=col(gsm)]),3)," "), color="red", angle = 0, size = 3, vjust = 1, hjust = 0)
pdf(paste0("./plots/s_distributions/",paste0(subpop,collapse="_"), plotname, ".pdf"), width=4, height=4)
print(dipPlot)
dev.off()
}
dipPlot <- ggplot(plotData, aes(values)) +
geom_histogram(color="blue",binwidth=.01,fill=I("blue")) +
ggtitle(paste0(subpop,collapse="_"))  + xlab("Similarity score") +
#         scale_x_continuous(limits=c(0, maxDip+1)) +
theme_bw() +
theme(plot.title = element_text(size=40), axis.title.x = element_text(size = 10), axis.title.y = element_blank(), axis.text.y=element_blank()) +
geom_vline(xintercept = bonferroni_cutoff_dip, color="red", linetype="dotted") +
geom_vline(data=subset(plotData, (values == maxDip & values>bonferroni_cutoff_dip)),aes(xintercept = values), color="blue", linetype="dotted") +
geom_vline(xintercept = median(gsm[row(gsm)!=col(gsm)]), color="red", linetype=1) +
geom_text(data=subset(plotData, values > bonferroni_cutoff_dip), aes(values,label=pairs), y=0, angle = 80, hjust=0, size=3) +
geom_text(data=subset(plotData, (values == maxDip & values>bonferroni_cutoff_dip)), x=maxDip, y=Inf, label=paste0("hat(phi)==", round(topValuesKinship[1],3),"  "),parse = TRUE, color="blue", angle = 0, size = 3, vjust = 1, hjust = 0) +
annotate("text", x=bonferroni_cutoff_dip, y=Inf, label=paste0("alpha==",format(alpha/num_comparisons_dip, digits=1)),parse = TRUE, color="red", angle = 0, size = 3, vjust = 1, hjust = 1) +
annotate("text", x=median(gsm[row(gsm)!=col(gsm)]), y=Inf, label=paste0("m=",round(median(gsm[row(gsm)!=col(gsm)]),3)," "), color="red", angle = 0, size = 3, vjust = 1, hjust = 0)
pdf(paste0("./plots/s_distributions/",paste0(subpop,collapse="_"), plotname, ".pdf"), width=4, height=4)
print(dipPlot)
dev.off()
dipPlot <- ggplot(plotData, aes(values)) +
geom_histogram(color="blue",binwidth=.01,fill=I("blue")) +
ggtitle(paste0(subpop,collapse="_"))  + xlab("Similarity score") +
scale_x_continuous(limits=c(0, maxDip+1)) +
theme_bw() +
theme(plot.title = element_text(size=40), axis.title.x = element_text(size = 10), axis.title.y = element_blank(), axis.text.y=element_blank()) +
geom_vline(xintercept = bonferroni_cutoff_dip, color="red", linetype="dotted") +
geom_vline(data=subset(plotData, (values == maxDip & values>bonferroni_cutoff_dip)),aes(xintercept = values), color="blue", linetype="dotted") +
geom_vline(xintercept = median(gsm[row(gsm)!=col(gsm)]), color="red", linetype=1) +
geom_text(data=subset(plotData, values > bonferroni_cutoff_dip), aes(values,label=pairs), y=0, angle = 80, hjust=0, size=3) +
geom_text(data=subset(plotData, (values == maxDip & values>bonferroni_cutoff_dip)), x=maxDip, y=Inf, label=paste0("hat(phi)==", round(topValuesKinship[1],3),"  "),parse = TRUE, color="blue", angle = 0, size = 3, vjust = 1, hjust = 0) +
annotate("text", x=bonferroni_cutoff_dip, y=Inf, label=paste0("alpha==",format(alpha/num_comparisons_dip, digits=1)),parse = TRUE, color="red", angle = 0, size = 3, vjust = 1, hjust = 1) +
annotate("text", x=median(gsm[row(gsm)!=col(gsm)]), y=Inf, label=paste0("m=",round(median(gsm[row(gsm)!=col(gsm)]),3)," "), color="red", angle = 0, size = 3, vjust = 1, hjust = 0)
pdf(paste0("./plots/s_distributions/",paste0(subpop,collapse="_"), plotname, ".pdf"), width=4, height=4)
print(dipPlot)
dev.off()
}
ggplot(plotData, aes(values)) +
geom_histogram(color="red",binwidth=.01,fill=I("blue")) +
ggtitle(paste0(subpop,collapse="_"))  + xlab("Similarity score") +
scale_x_continuous(limits=c(0, maxDip+1)) +
theme_bw() +
theme(plot.title = element_text(size=40), axis.title.x = element_text(size = 10), axis.title.y = element_blank(), axis.text.y=element_blank()) +
geom_vline(xintercept = bonferroni_cutoff_dip, color="red", linetype="dotted") +
geom_vline(data=subset(plotData, (values == maxDip & values>bonferroni_cutoff_dip)),aes(xintercept = values), color="blue", linetype="dotted") +
geom_vline(xintercept = median(gsm[row(gsm)!=col(gsm)]), color="red", linetype=1) +
geom_text(data=subset(plotData, values > bonferroni_cutoff_dip), aes(values,label=pairs), y=0, angle = 80, hjust=0, size=3) +
geom_text(data=subset(plotData, (values == maxDip & values>bonferroni_cutoff_dip)), x=maxDip, y=Inf, label=paste0("hat(phi)==", round(topValuesKinship[1],3),"  "),parse = TRUE, color="blue", angle = 0, size = 3, vjust = 1, hjust = 0) +
annotate("text", x=bonferroni_cutoff_dip, y=Inf, label=paste0("alpha==",format(alpha/num_comparisons_dip, digits=1)),parse = TRUE, color="red", angle = 0, size = 3, vjust = 1, hjust = 1) +
annotate("text", x=median(gsm[row(gsm)!=col(gsm)]), y=Inf, label=paste0("m=",round(median(gsm[row(gsm)!=col(gsm)]),3)," "), color="red", angle = 0, size = 3, vjust = 1, hjust = 0)
ggplot(plotData, aes(values)) +
geom_histogram(color="blue",binwidth=.01,fill=I("blue")) +
ggtitle(paste0(subpop,collapse="_"))  + xlab("Similarity score") +
scale_x_continuous(limits=c(0, maxDip+1)) +
theme_bw() +
theme(plot.title = element_text(size=40), axis.title.x = element_text(size = 10), axis.title.y = element_blank(), axis.text.y=element_blank()) +
geom_vline(xintercept = bonferroni_cutoff_dip, color="red", linetype="dotted") +
geom_vline(data=subset(plotData, (values == maxDip & values>bonferroni_cutoff_dip)),aes(xintercept = values), color="blue", linetype="dotted") +
geom_vline(xintercept = median(gsm[row(gsm)!=col(gsm)]), color="red", linetype=1) +
geom_text(data=subset(plotData, values > bonferroni_cutoff_dip), aes(values,label=pairs), y=0, angle = 80, hjust=0, size=3) +
geom_text(data=subset(plotData, (values == maxDip & values>bonferroni_cutoff_dip)), x=maxDip, y=Inf, label=paste0("hat(phi)==", round(topValuesKinship[1],3),"  "),parse = TRUE, color="blue", angle = 0, size = 3, vjust = 1, hjust = 0) +
annotate("text", x=bonferroni_cutoff_dip, y=Inf, label=paste0("alpha==",format(alpha/num_comparisons_dip, digits=1)),parse = TRUE, color="red", angle = 0, size = 3, vjust = 1, hjust = 1) +
annotate("text", x=median(gsm[row(gsm)!=col(gsm)]), y=Inf, label=paste0("m=",round(median(gsm[row(gsm)!=col(gsm)]),3)," "), color="red", angle = 0, size = 3, vjust = 1, hjust = 0)
dipPlot <- ggplot(plotData, aes(values)) +
geom_histogram(color="blue",binwidth=.01,fill=I("blue")) +
ggtitle(paste0(subpop,collapse="_"))  + xlab("Similarity score") +
scale_x_continuous(limits=c(0, maxDip+1)) +
theme_bw() +
theme(plot.title = element_text(size=40), axis.title.x = element_text(size = 10), axis.title.y = element_blank(), axis.text.y=element_blank()) +
geom_vline(xintercept = bonferroni_cutoff_dip, color="red", linetype="dotted") +
geom_vline(data=subset(plotData, (values == maxDip & values>bonferroni_cutoff_dip)),aes(xintercept = values), color="blue", linetype="dotted") +
geom_vline(xintercept = median(gsm[row(gsm)!=col(gsm)]), color="red", linetype=1) +
geom_text(data=subset(plotData, values > bonferroni_cutoff_dip), aes(values,label=pairs), y=0, angle = 80, hjust=0, size=3) +
geom_text(data=subset(plotData, (values == maxDip & values>bonferroni_cutoff_dip)), x=maxDip, y=Inf, label=paste0("hat(phi)==", round(topValuesKinship[1],3),"  "),parse = TRUE, color="blue", angle = 0, size = 3, vjust = 1, hjust = 0) +
annotate("text", x=bonferroni_cutoff_dip, y=Inf, label=paste0("alpha==",format(alpha/num_comparisons_dip, digits=1)),parse = TRUE, color="red", angle = 0, size = 3, vjust = 1, hjust = 1) +
annotate("text", x=median(gsm[row(gsm)!=col(gsm)]), y=Inf, label=paste0("m=",round(median(gsm[row(gsm)!=col(gsm)]),3)," "), color="red", angle = 0, size = 3, vjust = 1, hjust = 0)
pdf(paste0("./plots/s_distributions/",paste0(subpop,collapse="_"), plotname, ".pdf"), width=4, height=4)
print(dipPlot)
dev.off()
outputDir<-"testDir"
dir.create(outputDir)
dir.create(paste0("~/1000GP/plots/",outputDir))
dir.create(paste0("~/1000GP/plots/s_distributions/",outputDir))
library(ggplot2)
genotypeFile <- "./data/1000GP_Phase3_chr10.hap.gz"
genotypeFile <- "./data/combinedFiltered1000.gz"
numberOfLines <- 1000
minVariants <- 10
numCores <- 4
sample <- read.table("~/1000GP/data/1000GP_Phase3.sample", sep=" ", header=T)
sampleIDs <- as.character(sample[,1])
pop <- as.character(sample[,2])
group <- as.character(sample[,3])
sex <- as.character(sample[,4])
hap.pop <- rep(pop,each=2)
hap.sampleIDs <- rep(as.character(sample[,1]),each=2)
source('~/1000GP/s_matrix_functions.R')
structurePValues <- sapply(unique(pop),function(pop_i){
result <- readRDS(paste0("./plots/s_distributions/",outputDir,"/plotdata/",pop_i, "_data.rds"))
#     plotFromGSM(pop_i, result$s_matrix_dip, result$var_s_dip, result$weightsMean, sampleIDs[pop%in%pop_i], "diploid", outputDir=outputDir)
s_vector <- result$s_matrix_dip[row(result$s_matrix_dip)>col(result$s_matrix_dip)]
topValuesKinship <- (sort(s_vector, decreasing=T)-1)/(result$weightsMean-1)
btest <- binom.test(sum(s_vector>mean(s_vector)), length(s_vector), alternative="less")
btest$p.value
})
outputDir <- 'filtered1000'
# Read in all the results. plot histograms.  Calculated structure p.value
structurePValues <- sapply(unique(pop),function(pop_i){
result <- readRDS(paste0("./plots/s_distributions/",outputDir,"/plotdata/",pop_i, "_data.rds"))
#     plotFromGSM(pop_i, result$s_matrix_dip, result$var_s_dip, result$weightsMean, sampleIDs[pop%in%pop_i], "diploid", outputDir=outputDir)
s_vector <- result$s_matrix_dip[row(result$s_matrix_dip)>col(result$s_matrix_dip)]
topValuesKinship <- (sort(s_vector, decreasing=T)-1)/(result$weightsMean-1)
btest <- binom.test(sum(s_vector>mean(s_vector)), length(s_vector), alternative="less")
btest$p.value
})
structurePValues
structurePValues[structurePValues>.01]
structurePValues[structurePValues<.01]
structurePValues[structurePValues<.001]
qplot(names(structurePValues),-log(structurePValues))
pop_i<-"CEU"
result <- readRDS(paste0("./plots/s_distributions/",outputDir,"/plotdata/",pop_i, "_data.rds"))
#     plotFromGSM(pop_i, result$s_matrix_dip, result$var_s_dip, result$weightsMean, sampleIDs[pop%in%pop_i], "diploid", outputDir=outputDir)
s_vector <- result$s_matrix_dip[row(result$s_matrix_dip)>col(result$s_matrix_dip)]
topValuesKinship <- (sort(s_vector, decreasing=T)-1)/(result$weightsMean-1)
btest <- binom.test(sum(s_vector>mean(s_vector)), length(s_vector), alternative="less")
btest
structurePValues <- sapply(unique(pop),function(pop_i){
result <- readRDS(paste0("./plots/s_distributions/",outputDir,"/plotdata/",pop_i, "_data.rds"))
#     plotFromGSM(pop_i, result$s_matrix_dip, result$var_s_dip, result$weightsMean, sampleIDs[pop%in%pop_i], "diploid", outputDir=outputDir)
s_vector <- result$s_matrix_dip[row(result$s_matrix_dip)>col(result$s_matrix_dip)]
topValuesKinship <- (sort(s_vector, decreasing=T)-1)/(result$weightsMean-1)
btest <- binom.test(sum(s_vector>mean(s_vector)), length(s_vector), alternative="less")
list(structurePValue=btest$p.value, var_s=result$var_s_dip, sampleVariance=var(s_vector))
})
structurePValues
class(structurePValues)
# Read in all the results. plot histograms.  Calculated structure p.value
popResults <- sapply(unique(pop),function(pop_i){
result <- readRDS(paste0("./plots/s_distributions/",outputDir,"/plotdata/",pop_i, "_data.rds"))
#     plotFromGSM(pop_i, result$s_matrix_dip, result$var_s_dip, result$weightsMean, sampleIDs[pop%in%pop_i], "diploid", outputDir=outputDir)
s_vector <- result$s_matrix_dip[row(result$s_matrix_dip)>col(result$s_matrix_dip)]
topValuesKinship <- (sort(s_vector, decreasing=T)-1)/(result$weightsMean-1)
btest <- binom.test(sum(s_vector>mean(s_vector)), length(s_vector), alternative="less")
list(structurePValue=btest$p.value, var_s=result$var_s_dip, sampleVariance=var(s_vector))
})
popResults <- t(sapply(unique(pop),function(pop_i){
result <- readRDS(paste0("./plots/s_distributions/",outputDir,"/plotdata/",pop_i, "_data.rds"))
#     plotFromGSM(pop_i, result$s_matrix_dip, result$var_s_dip, result$weightsMean, sampleIDs[pop%in%pop_i], "diploid", outputDir=outputDir)
s_vector <- result$s_matrix_dip[row(result$s_matrix_dip)>col(result$s_matrix_dip)]
topValuesKinship <- (sort(s_vector, decreasing=T)-1)/(result$weightsMean-1)
btest <- binom.test(sum(s_vector>mean(s_vector)), length(s_vector), alternative="less")
list(structurePValue=btest$p.value, var_s=result$var_s_dip, sampleVariance=var(s_vector))
}))
popResults
qplot(popResults, aes(structurePValue))+ geom_point
qplot(popResults, aes(structurePValue))+ geom_point()
qplot(popResults, aes(structurePValue))+ geom_bar(stat = "identity")
popResults
class(popResults)
# Read in all the results. plot histograms.  Calculated structure p.value
popResults <- as.data.frame(t(sapply(unique(pop),function(pop_i){
result <- readRDS(paste0("./plots/s_distributions/",outputDir,"/plotdata/",pop_i, "_data.rds"))
#     plotFromGSM(pop_i, result$s_matrix_dip, result$var_s_dip, result$weightsMean, sampleIDs[pop%in%pop_i], "diploid", outputDir=outputDir)
s_vector <- result$s_matrix_dip[row(result$s_matrix_dip)>col(result$s_matrix_dip)]
topValuesKinship <- (sort(s_vector, decreasing=T)-1)/(result$weightsMean-1)
btest <- binom.test(sum(s_vector>mean(s_vector)), length(s_vector), alternative="less")
list(structurePValue=btest$p.value, var_s=result$var_s_dip, sampleVariance=var(s_vector))
})))
ggplot(popResults, aes(structurePValue))+ geom_bar(stat = "identity")
popResults <- as.data.frame(t(sapply(unique(pop),function(pop_i){
result <- readRDS(paste0("./plots/s_distributions/",outputDir,"/plotdata/",pop_i, "_data.rds"))
#     plotFromGSM(pop_i, result$s_matrix_dip, result$var_s_dip, result$weightsMean, sampleIDs[pop%in%pop_i], "diploid", outputDir=outputDir)
s_vector <- result$s_matrix_dip[row(result$s_matrix_dip)>col(result$s_matrix_dip)]
topValuesKinship <- (sort(s_vector, decreasing=T)-1)/(result$weightsMean-1)
btest <- binom.test(sum(s_vector>mean(s_vector)), length(s_vector), alternative="less")
list(structurePValue=btest$p.value, var_s=result$var_s_dip, sampleVariance=var(s_vector), pop=pop_i)
})))
ggplot(popResults, aes(structurePValue,pop))+ geom_bar(stat = "identity")
popResults
ggplot(popResults, aes(structurePValue,pop))+ geom_point(stat = "identity")
ggplot(popResults, aes(x=structurePValue,y=pop))+ geom_point(stat = "identity")
ggplot(popResults)+ geom_point(aes(x=structurePValue,y=pop))
class(popResults)
ggplot(popResults, aes(x=structurePValue, y=pop))+ geom_point()
popResults <- as.data.frame(t(sapply(unique(pop),function(pop_i){
result <- readRDS(paste0("./plots/s_distributions/",outputDir,"/plotdata/",pop_i, "_data.rds"))
#     plotFromGSM(pop_i, result$s_matrix_dip, result$var_s_dip, result$weightsMean, sampleIDs[pop%in%pop_i], "diploid", outputDir=outputDir)
s_vector <- result$s_matrix_dip[row(result$s_matrix_dip)>col(result$s_matrix_dip)]
topValuesKinship <- (sort(s_vector, decreasing=T)-1)/(result$weightsMean-1)
btest <- binom.test(sum(s_vector>mean(s_vector)), length(s_vector), alternative="less")
c(structurePValue=btest$p.value, var_s=result$var_s_dip, sampleVariance=var(s_vector), pop=pop_i)
})))
ggplot(popResults, aes(x=structurePValue, y=pop))+ geom_point()
ggplot(popResults, aes(y=structurePValue, x=pop))+ geom_point()
class(popResults[1,1])
popResults
sapply(unique(pop),function(pop_i){
result <- readRDS(paste0("./plots/s_distributions/",outputDir,"/plotdata/",pop_i, "_data.rds"))
#     plotFromGSM(pop_i, result$s_matrix_dip, result$var_s_dip, result$weightsMean, sampleIDs[pop%in%pop_i], "diploid", outputDir=outputDir)
s_vector <- result$s_matrix_dip[row(result$s_matrix_dip)>col(result$s_matrix_dip)]
topValuesKinship <- (sort(s_vector, decreasing=T)-1)/(result$weightsMean-1)
btest <- binom.test(sum(s_vector>mean(s_vector)), length(s_vector), alternative="less")
c(structurePValue=btest$p.value, var_s=result$var_s_dip, sampleVariance=var(s_vector), pop=pop_i)
})
popResults <- as.data.frame(t(sapply(unique(pop),function(pop_i){
result <- readRDS(paste0("./plots/s_distributions/",outputDir,"/plotdata/",pop_i, "_data.rds"))
#     plotFromGSM(pop_i, result$s_matrix_dip, result$var_s_dip, result$weightsMean, sampleIDs[pop%in%pop_i], "diploid", outputDir=outputDir)
s_vector <- result$s_matrix_dip[row(result$s_matrix_dip)>col(result$s_matrix_dip)]
topValuesKinship <- (sort(s_vector, decreasing=T)-1)/(result$weightsMean-1)
btest <- binom.test(sum(s_vector>mean(s_vector)), length(s_vector), alternative="less")
c(structurePValue=btest$p.value, var_s=result$var_s_dip, sampleVariance=var(s_vector))
})))
class(popResults[1,1])
popResults$pop <- unique(pop)
ggplot(popResults, aes(y=structurePValue, x=pop))+ geom_point()
popResults
ggplot(popResults, aes(y=var_s, x=sampleVariance))+ geom_point()
ggplot(popResults, aes(y=var_s, x=sampleVariance))+ geom_point() + geom_text(pop)
ggplot(popResults, aes(y=var_s, x=sampleVariance))+ geom_point() + geom_text(aes(y=var_s, x=sampleVariance), pop)
ggplot(popResults, aes(y=var_s, x=sampleVariance, label=pop))+ geom_point() + geom_text(aes(y=var_s, x=sampleVariance))
ggplot(popResults, aes(y=var_s, x=sampleVariance, label=pop), col="blue")+ geom_point() + geom_text(aes(y=var_s, x=sampleVariance))
ggplot(popResults, aes(y=var_s, x=sampleVariance, label=pop))+ geom_point(col="blue") + geom_text(aes(y=var_s, x=sampleVariance))
ggplot(popResults, aes(y=var_s, x=sampleVariance, label=pop))+ geom_point(col="blue", size=10) + geom_text(aes(y=var_s, x=sampleVariance))
ggplot(popResults, aes(y=var_s, x=sampleVariance, label=pop))+ geom_point(col="lightblue", size=10) + geom_text(aes(y=var_s, x=sampleVariance))
ggplot(popResults, aes(y=var_s, x=sampleVariance, label=pop))+ geom_point(col="red", size=10) + geom_text(aes(y=var_s, x=sampleVariance))
ggplot(popResults, aes(y=var_s, x=sampleVariance, label=pop))+ geom_point(col="red", size=5) + geom_text(aes(y=var_s, x=sampleVariance))
ggplot(popResults, aes(y=var_s, x=sampleVariance, label=pop))+ geom_point(col="red", size=5) + geom_text(aes(y=var_s, x=sampleVariance))+ geom_abline()
ggplot(popResults, aes(y=var_s, x=sampleVariance, label=pop))+ geom_point(col="red", size=5) + geom_text(aes(y=var_s, x=sampleVariance))+ geom_abline() +
xlim(0,.02)+ylim(0,.02)
ggplot(popResults, aes(y=var_s, x=sampleVariance, label=pop))+ geom_point(col="red", size=5) + geom_text(aes(y=var_s, x=sampleVariance))+ geom_abline() +
xlim(0,.015)+ylim(0,.015)
cor(popResults$sampleVariance,popResults$var_s)
ggplot(popResults, aes(y=var_s, x=sampleVariance, label=pop))+ geom_point(col="red", size=5) + geom_text(aes(y=var_s, x=sampleVariance))+ geom_abline() +
xlim(0,.015)+ylim(0,.005)
sum(structurePValues<.01)
structurePValues
sum(popResults$structurePValues<.01)
popResults$structurePValues
sum(popResults$structurePValue<.01)
popResults$structurePValue[popResults$structurePValue<.01]
ggplot(subset(popResults,!pop%in%c("PEL","MXL","ASW","PUR")), aes(y=var_s, x=sampleVariance, label=pop))+ geom_point(col="red", size=5) + geom_text(aes(y=var_s, x=sampleVariance))+ geom_abline() +
xlim(0,.015)+ylim(0,.005)
cor(popResults$sampleVariance,popResults$var_s)
cor(subset(popResults,!pop%in%c("PEL","MXL","ASW","PUR"))$sampleVariance,subset(popResults,!pop%in%c("PEL","MXL","ASW","PUR"))$var_s)
ggplot(subset(popResults,!pop%in%c("PEL","MXL","ASW","PUR")), aes(y=var_s, x=sampleVariance, label=pop))+ geom_point(col="red", size=5) + geom_text(aes(y=var_s, x=sampleVariance))+ geom_abline() +
xlim(0,.005)+ylim(0,.005)
popResults$sampleVariance/popResults$var_s
cbind(popResults$pop,popResults$sampleVariance/popResults$var_s)
varianceRatio <- popResults$sampleVariance/popResults$var_s
names(varianceRatio)<-popResults$pop
sort(varianceRatio)
?sort
sort(varianceRatio, decreasing = TRUE)
cbind(sort(varianceRatio, decreasing = TRUE))
library(devtools)
install_git("https://github.com/hilaryparker/explainr.git")
library(explainr)
ptest <- prop.test(x = 500, n = 1008)
explain(ptest)
?explain
x<-rnorm(100)
y<-x+rnorm(100)
lmfit <- lm(y~x)
explain lmfit
explain(lmfit)
lmfit <- glm(y~x)
explain(lmfit)
explain(lmfit, "visual")
m <- lm(mpg ~ wt + mpg, mtcars)
mtcars
m <- lm(mpg ~ wt + mpg, mtcars)
explain(m)
m <- lm(mpg ~ wt + mpg, mtcars)
explain(m, "visual")
m
class(m)
library(limma)
fit <- lmFit(v, design)
fit <- eBayes(fit)
eset <- exprs(bottomly.eset)
keepMeID <- sapply(1:nrow(eset), function(x){ any(eset[x,] != 0) })
eset <- eset[keepMeID,]
pd <- phenoData(bottomly.eset)@data # sample information about the experiment
design <- model.matrix(~pd$strain)
dge <- DGEList(counts = eset)
dge <- calcNormFactors(dge)
# applies voom transformation to count data
v <- voom(dge, design = design)
eset <- exprs(bottomly.eset)
keepMeID <- sapply(1:nrow(eset), function(x){ any(eset[x,] != 0) })
eset <- eset[keepMeID,]
pd <- phenoData(bottomly.eset)@data # sample information about the experiment
design <- model.matrix(~pd$strain)
dge <- DGEList(counts = eset)
dge <- calcNormFactors(dge)
# applies voom transformation to count data
v <- voom(dge, design = design)
eset <- exprs(bottomly.eset)
library(Biobase)
library(biomaRt)
library(edgeR)
library(limma)
library(dplyr)
library(explainr)
bottomly.local <- load(url("http://bowtie-bio.sourceforge.net/recount/ExpressionSets/bottomly_eset.RData"))
eset <- exprs(bottomly.eset)
keepMeID <- sapply(1:nrow(eset), function(x){ any(eset[x,] != 0) })
eset <- eset[keepMeID,]
pd <- phenoData(bottomly.eset)@data # sample information about the experiment
design <- model.matrix(~pd$strain)
dge <- DGEList(counts = eset)
dge <- calcNormFactors(dge)
# applies voom transformation to count data
v <- voom(dge, design = design)
eset
eset <- exprs(bottomly.eset)
keepMeID <- sapply(1:nrow(eset), function(x){ any(eset[x,] != 0) })
eset <- eset[keepMeID,]
pd <- phenoData(bottomly.eset)@data # sample information about the experiment
design <- model.matrix(~pd$strain)
dge <- DGEList(counts = eset)
dge <- calcNormFactors(dge)
# applies voom transformation to count data
v <- voom(dge, design = design)
library(edgeR)
source("https://bioconductor.org/biocLite.R")
biocLite("edgeR")
source("http://bioconductor.org/biocLite.R")
biocLite("edgeR")
eset <- exprs(bottomly.eset)
keepMeID <- sapply(1:nrow(eset), function(x){ any(eset[x,] != 0) })
eset <- eset[keepMeID,]
pd <- phenoData(bottomly.eset)@data # sample information about the experiment
design <- model.matrix(~pd$strain)
dge <- DGEList(counts = eset)
dge <- calcNormFactors(dge)
# applies voom transformation to count data
v <- voom(dge, design = design)
library(edgeR)
eset <- exprs(bottomly.eset)
keepMeID <- sapply(1:nrow(eset), function(x){ any(eset[x,] != 0) })
eset <- eset[keepMeID,]
pd <- phenoData(bottomly.eset)@data # sample information about the experiment
design <- model.matrix(~pd$strain)
dge <- DGEList(counts = eset)
dge <- calcNormFactors(dge)
# applies voom transformation to count data
v <- voom(dge, design = design)
fit <- lmFit(v, design)
fit <- eBayes(fit)
fit %>% explain(theme = "bioconductor")
explain(1)
explain(1:10)
explain(eset)
