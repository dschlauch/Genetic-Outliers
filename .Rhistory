resTableAll$group <- popGroup[resTableAll$pop,"group"]
resTableAll
ggplot(resTableAll, aes(CombinedInfered, CoK)) + theme_bw() +
geom_boxplot() + geom_jitter(aes(color=group),alpha=.1) + scale_x_discrete(limits=c("Unrelated","CO","AV or HS", "FS or PO")) +
xlab("Inferred Relationship (Gazal 2015)") + ylab("Estimated kinship") + ggtitle("Our estimated CoK vs Inferred Relationship (Gazal 2015)")
dev.off()
geom_boxplot() + geom_jitter(aes(color=group),alpha=.1) + scale_x_discrete(limits=c("Unrelated","CO","AV or HS", "FS or PO")) +
xlab("Inferred Relationship (Gazal 2015)") + ylab("Estimated kinship") + ggtitle("Our estimated CoK vs Inferred Relationship (Gazal 2015)")
ggplot(resTableAll, aes(CombinedInfered, CoK)) + theme_bw() +
geom_boxplot() + geom_jitter(lpha=.1) + scale_x_discrete(limits=c("Unrelated","CO","AV or HS", "FS or PO")) +
xlab("Inferred Relationship (Gazal 2015)") + ylab("Estimated kinship") + ggtitle("Our estimated CoK vs Inferred Relationship (Gazal 2015)")
ggplot(resTableAll, aes(CombinedInfered, CoK)) + theme_bw() +
geom_boxplot() + geom_jitter(alpha=.1) + scale_x_discrete(limits=c("Unrelated","CO","AV or HS", "FS or PO")) +
xlab("Inferred Relationship (Gazal 2015)") + ylab("Estimated kinship") + ggtitle("Our estimated CoK vs Inferred Relationship (Gazal 2015)")
outputDir
outputDir <- "filtered99_LD10"
resTableAll <- data.table(do.call(rbind, lapply(unique(pop),function(pop_i){
result <- readRDS(paste0("./plots/s_distributions/",outputDir,"/plotdata/",pop_i, "_data.rds"))
result$s_matrix_dip[upper.tri(result$s_matrix_dip)] <- NA
diag(result$s_matrix_dip) <- NA
resTable <- melt(result$s_matrix_dip, na.rm=T)
resTable$estimatedCoK <- (resTable$value-1)/(result$pkweightsMean-1)
resTable$pop <- pop_i
colnames(resTable) <- c("SampleID_1","SampleID_2","s","CoK","pop")
resTable
})))
gazal_related <- read.csv("./data/gazal_related.csv")
gazal_related <- data.table(gazal_related)
gazal_related_rev <- copy(gazal_related)
setcolorder(gazal_related_rev, c(2,1,3,4,5))
names(gazal_related_rev)[1:2] <- names(gazal_related_rev)[2:1]
gazal_related <- rbind(gazal_related,gazal_related_rev)
names(gazal_related)[1:2] <- names(resTableAll)[1:2]
resTableAll <- merge(resTableAll,gazal_related, by=names(gazal_related)[1:2],all.x=T)
resTableAll$group <- popGroup[resTableAll$pop,"group"]
resTableAll[order(-CoK)]
sum(!is.na(resTableAll[,INFERED.RELATIONSHIP]))
resTableAll[SampleID_1=="HG00100"]
resTableAll[is.na(resTableAll[["INFERED.RELATIONSHIP"]]),"INFERED.RELATIONSHIP"]<- "Unrelated"
resTableAll$CombinedInfered <- "Unrelated"
resTableAll$CombinedInfered[resTableAll$INFERED.RELATIONSHIP=="CO"] <- "CO"
resTableAll$CombinedInfered[resTableAll$INFERED.RELATIONSHIP=="AV"|resTableAll$INFERED.RELATIONSHIP=="HS"] <- "AV or HS"
resTableAll$CombinedInfered[resTableAll$INFERED.RELATIONSHIP=="FS"|resTableAll$INFERED.RELATIONSHIP=="PO"] <- "FS or PO"
ggplot(resTableAll, aes(CombinedInfered, CoK)) + theme_bw() +
geom_boxplot() + geom_jitter(alpha=.1) + scale_x_discrete(limits=c("Unrelated","CO","AV or HS", "FS or PO")) +
xlab("Inferred Relationship (Gazal 2015)") + ylab("Estimated kinship") + ggtitle("Our estimated CoK vs Inferred Relationship (Gazal 2015)")
ggplot(resTableAll, aes(CombinedInfered, CoK)) + theme_bw() +
geom_boxplot() + geom_jitter(aes(color="blue"), alpha=.1) + scale_x_discrete(limits=c("Unrelated","CO","AV or HS", "FS or PO")) +
xlab("Inferred Relationship (Gazal 2015)") + ylab("Estimated kinship") + ggtitle("Our estimated CoK vs Inferred Relationship (Gazal 2015)")
ggplot(resTableAll, aes(CombinedInfered, CoK)) + theme_bw() +
geom_boxplot() + geom_jitter(aes(color=group), alpha=.1) + scale_x_discrete(limits=c("Unrelated","CO","AV or HS", "FS or PO")) +
xlab("Inferred Relationship (Gazal 2015)") + ylab("Estimated kinship") + ggtitle("Our estimated CoK vs Inferred Relationship (Gazal 2015)")
ggplot(resTableAll, aes(CombinedInfered, CoK)) + theme_bw() +
geom_boxplot() + geom_jitter(aes(color=group), alpha=.3) + scale_x_discrete(limits=c("Unrelated","CO","AV or HS", "FS or PO")) +
xlab("Inferred Relationship (Gazal 2015)") + ylab("Estimated kinship") + ggtitle("Our estimated CoK vs Inferred Relationship (Gazal 2015)")
ggplot(resTableAll, aes(CombinedInfered, CoK)) + theme_bw() +
geom_boxplot() + geom_jitter(aes(color=group), alpha=1) + scale_x_discrete(limits=c("Unrelated","CO","AV or HS", "FS or PO")) +
xlab("Inferred Relationship (Gazal 2015)") + ylab("Estimated kinship") + ggtitle("Our estimated CoK vs Inferred Relationship (Gazal 2015)")
ggplot(resTableAll, aes(CombinedInfered, CoK)) + theme_bw() +
geom_boxplot() + geom_jitter(aes(color=group), alpha=.5) + scale_x_discrete(limits=c("Unrelated","CO","AV or HS", "FS or PO")) +
xlab("Inferred Relationship (Gazal 2015)") + ylab("Estimated kinship") + ggtitle("Our estimated CoK vs Inferred Relationship (Gazal 2015)")
pdf(paste0("./plots/s_distributions/",outputDir,"/EstimatedCoKvsGazal.pdf"), width=8, height=8)
ggplot(resTableAll, aes(CombinedInfered, CoK)) + theme_bw() +
geom_boxplot() + geom_jitter(aes(color=group), alpha=.5) + scale_x_discrete(limits=c("Unrelated","CO","AV or HS", "FS or PO")) +
xlab("Inferred Relationship (Gazal 2015)") + ylab("Estimated kinship") + ggtitle("Our estimated CoK vs Inferred Relationship (Gazal 2015)")
dev.off()
popResults <- as.data.frame(t(sapply(unique(pop),function(pop_i){
result <- readRDS(paste0("./plots/s_distributions/",outputDir,"/plotdata/",pop_i, "_data.rds"))
s_vector <- result$s_matrix_dip[row(result$s_matrix_dip)>col(result$s_matrix_dip)]
plotFromGSM(subpop=pop_i, gsm=result$s_matrix_dip, var_s=var(s_vector), pkweightsMean=result$pkweightsMean, "diploid", outputDir=outputDir)
topValuesKinship <- (sort(s_vector, decreasing=T)-1)/(result$weightsMean-1)
btest <- binom.test(sum(s_vector>mean(s_vector)), length(s_vector), alternative="less")
c(structurePValue=btest$p.value, var_s=result$var_s_dip, sampleVariance=var(s_vector))
})))
library(ggplot2)
library(reshape2)
library(data.table)
#outputDir <- "filtered1000_fixed_phi"
#genotypeFile <- "./data/1000GP_Phase3_chr10.hap.gz"
genotypeFile <- "./data/combinedFiltered1000.gz"
numberOfLines <- 5000
minVariants <- 10
numCores <- 4
args<-commandArgs(TRUE)
outputDir <- '.'
# gazalFilter <-"TGP2261"
gazalFilter <- "NA"
ldPrune <- 1
if(length(args)!=0){
genotypeFile <- args[1]
numberOfLines <- as.numeric(args[2])
minVariants <- as.numeric(args[3])
numCores <- as.numeric(args[4])
outputDir <- args[5]
gazalFilter <- args[6]
ldPrune <- as.numeric(args[7])
dir.create(paste0("~/1000GP/plots/s_distributions/",outputDir))
dir.create(paste0("~/1000GP/plots/s_distributions/",outputDir,"/plotdata"))
}
# incorporating gazal filtering -------------------------------------------
if(gazalFilter=="NA"|is.na(gazalFilter)){
qcFilter <- NULL
} else {
gazal_filtered <- read.csv("./data/gazal_filtered.csv",stringsAsFactors=F)
gazal_filtered <- gazal_filtered[order(gazal_filtered[,1]),]
qcFilter <- gazal_filtered[,gazalFilter]=="YES"
}
# Real data
sample <- read.table("~/1000GP/data/1000GP_Phase3.sample", sep=" ", header=T)
sampleIDs <- as.character(sample[,1])
pop <- as.character(sample[,2])
group <- as.character(sample[,3])
sex <- as.character(sample[,4])
hap.pop <- rep(pop,each=2)
hap.sampleIDs <- rep(as.character(sample[,1]),each=2)
popGroup <- melt(table(pop,group))
popGroup <- popGroup[popGroup$value>0,]
rownames(popGroup) <- popGroup$pop
source('~/1000GP/s_matrix_functions.R')
resTableAll <- data.table(do.call(rbind, lapply(unique(pop),function(pop_i){
result <- readRDS(paste0("./plots/s_distributions/",outputDir,"/plotdata/",pop_i, "_data.rds"))
result$s_matrix_dip[upper.tri(result$s_matrix_dip)] <- NA
diag(result$s_matrix_dip) <- NA
resTable <- melt(result$s_matrix_dip, na.rm=T)
resTable$estimatedCoK <- (resTable$value-1)/(result$pkweightsMean-1)
resTable$pop <- pop_i
colnames(resTable) <- c("SampleID_1","SampleID_2","s","CoK","pop")
resTable
})))
popResults <- as.data.frame(t(sapply(unique(pop),function(pop_i){
result <- readRDS(paste0("./plots/s_distributions/",outputDir,"/plotdata/",pop_i, "_data.rds"))
s_vector <- result$s_matrix_dip[row(result$s_matrix_dip)>col(result$s_matrix_dip)]
plotFromGSM(subpop=pop_i, gsm=result$s_matrix_dip, var_s=var(s_vector), pkweightsMean=result$pkweightsMean, "diploid", outputDir=outputDir)
topValuesKinship <- (sort(s_vector, decreasing=T)-1)/(result$weightsMean-1)
btest <- binom.test(sum(s_vector>mean(s_vector)), length(s_vector), alternative="less")
c(structurePValue=btest$p.value, var_s=result$var_s_dip, sampleVariance=var(s_vector))
})))
outputDir
outputDir <- "filtered99_TGP2261_LD10"
popResults <- as.data.frame(t(sapply(unique(pop),function(pop_i){
result <- readRDS(paste0("./plots/s_distributions/",outputDir,"/plotdata/",pop_i, "_data.rds"))
s_vector <- result$s_matrix_dip[row(result$s_matrix_dip)>col(result$s_matrix_dip)]
plotFromGSM(subpop=pop_i, gsm=result$s_matrix_dip, var_s=var(s_vector), pkweightsMean=result$pkweightsMean, "diploid", outputDir=outputDir)
topValuesKinship <- (sort(s_vector, decreasing=T)-1)/(result$weightsMean-1)
btest <- binom.test(sum(s_vector>mean(s_vector)), length(s_vector), alternative="less")
c(structurePValue=btest$p.value, var_s=result$var_s_dip, sampleVariance=var(s_vector))
})))
ggplot(resTableAll, aes(CombinedInfered, CoK)) + theme_bw() +
geom_boxplot() + geom_jitter(aes(color=group), alpha=.5) + scale_x_discrete(limits=c("Unrelated","CO","AV or HS", "FS or PO")) +
xlab("Inferred Relationship (Gazal 2015)") + ylab("Estimated kinship") + ggtitle("Our estimated CoK vs Inferred Relationship (Gazal 2015)")
resTableAll <- data.table(do.call(rbind, lapply(unique(pop),function(pop_i){
result <- readRDS(paste0("./plots/s_distributions/",outputDir,"/plotdata/",pop_i, "_data.rds"))
result$s_matrix_dip[upper.tri(result$s_matrix_dip)] <- NA
diag(result$s_matrix_dip) <- NA
resTable <- melt(result$s_matrix_dip, na.rm=T)
resTable$estimatedCoK <- (resTable$value-1)/(result$pkweightsMean-1)
resTable$pop <- pop_i
colnames(resTable) <- c("SampleID_1","SampleID_2","s","CoK","pop")
resTable
})))
gazal_related <- read.csv("./data/gazal_related.csv")
gazal_related <- data.table(gazal_related)
gazal_related_rev <- copy(gazal_related)
setcolorder(gazal_related_rev, c(2,1,3,4,5))
names(gazal_related_rev)[1:2] <- names(gazal_related_rev)[2:1]
gazal_related <- rbind(gazal_related,gazal_related_rev)
names(gazal_related)[1:2] <- names(resTableAll)[1:2]
resTableAll <- merge(resTableAll,gazal_related, by=names(gazal_related)[1:2],all.x=T)
resTableAll$group <- popGroup[resTableAll$pop,"group"]
resTableAll[order(-CoK)]
sum(!is.na(resTableAll[,INFERED.RELATIONSHIP]))
resTableAll[SampleID_1=="HG00100"]
resTableAll[is.na(resTableAll[["INFERED.RELATIONSHIP"]]),"INFERED.RELATIONSHIP"]<- "Unrelated"
resTableAll$CombinedInfered <- "Unrelated"
resTableAll$CombinedInfered[resTableAll$INFERED.RELATIONSHIP=="CO"] <- "CO"
resTableAll$CombinedInfered[resTableAll$INFERED.RELATIONSHIP=="AV"|resTableAll$INFERED.RELATIONSHIP=="HS"] <- "AV or HS"
resTableAll$CombinedInfered[resTableAll$INFERED.RELATIONSHIP=="FS"|resTableAll$INFERED.RELATIONSHIP=="PO"] <- "FS or PO"
ggplot(resTableAll, aes(CombinedInfered, CoK)) + theme_bw() +
geom_boxplot() + geom_jitter(aes(color=group), alpha=.5) + scale_x_discrete(limits=c("Unrelated","CO","AV or HS", "FS or PO")) +
xlab("Inferred Relationship (Gazal 2015)") + ylab("Estimated kinship") + ggtitle("Our estimated CoK vs Inferred Relationship (Gazal 2015)")
outputDir
outputDir<-"filtered99_LD10"
resTableAll <- data.table(do.call(rbind, lapply(unique(pop),function(pop_i){
result <- readRDS(paste0("./plots/s_distributions/",outputDir,"/plotdata/",pop_i, "_data.rds"))
result$s_matrix_dip[upper.tri(result$s_matrix_dip)] <- NA
diag(result$s_matrix_dip) <- NA
resTable <- melt(result$s_matrix_dip, na.rm=T)
resTable$estimatedCoK <- (resTable$value-1)/(result$pkweightsMean-1)
resTable$pop <- pop_i
colnames(resTable) <- c("SampleID_1","SampleID_2","s","CoK","pop")
resTable
})))
gazal_related <- read.csv("./data/gazal_related.csv")
gazal_related <- data.table(gazal_related)
gazal_related_rev <- copy(gazal_related)
setcolorder(gazal_related_rev, c(2,1,3,4,5))
names(gazal_related_rev)[1:2] <- names(gazal_related_rev)[2:1]
gazal_related <- rbind(gazal_related,gazal_related_rev)
names(gazal_related)[1:2] <- names(resTableAll)[1:2]
resTableAll <- merge(resTableAll,gazal_related, by=names(gazal_related)[1:2],all.x=T)
resTableAll$group <- popGroup[resTableAll$pop,"group"]
resTableAll[order(-CoK)]
sum(!is.na(resTableAll[,INFERED.RELATIONSHIP]))
resTableAll[SampleID_1=="HG00100"]
resTableAll[is.na(resTableAll[["INFERED.RELATIONSHIP"]]),"INFERED.RELATIONSHIP"]<- "Unrelated"
resTableAll$CombinedInfered <- "Unrelated"
resTableAll$CombinedInfered[resTableAll$INFERED.RELATIONSHIP=="CO"] <- "CO"
resTableAll$CombinedInfered[resTableAll$INFERED.RELATIONSHIP=="AV"|resTableAll$INFERED.RELATIONSHIP=="HS"] <- "AV or HS"
resTableAll$CombinedInfered[resTableAll$INFERED.RELATIONSHIP=="FS"|resTableAll$INFERED.RELATIONSHIP=="PO"] <- "FS or PO"
ggplot(resTableAll, aes(CombinedInfered, CoK)) + theme_bw() +
geom_boxplot() + geom_jitter(aes(color=group), alpha=.5) + scale_x_discrete(limits=c("Unrelated","CO","AV or HS", "FS or PO")) +
xlab("Inferred Relationship (Gazal 2015)") + ylab("Estimated kinship") + ggtitle("Our estimated CoK vs Inferred Relationship (Gazal 2015)")
resTableAll
ggplot(subset(resTableAll, pop=="GIH"), aes(CombinedInfered, CoK)) + theme_bw() +
geom_boxplot() + geom_jitter(aes(color=group), alpha=.5) + scale_x_discrete(limits=c("Unrelated","CO","AV or HS", "FS or PO")) +
xlab("Inferred Relationship (Gazal 2015)") + ylab("Estimated kinship") + ggtitle("Our estimated CoK vs Inferred Relationship (Gazal 2015)")
popResults$structurePValue[popResults$structurePValue<.01]
popResults <- popResults[order(popResults$structurePValue),]
outputDir
outputDir
popResults <- as.data.frame(t(sapply(unique(pop),function(pop_i){
result <- readRDS(paste0("./plots/s_distributions/",outputDir,"/plotdata/",pop_i, "_data.rds"))
s_vector <- result$s_matrix_dip[row(result$s_matrix_dip)>col(result$s_matrix_dip)]
plotFromGSM(subpop=pop_i, gsm=result$s_matrix_dip, var_s=var(s_vector), pkweightsMean=result$pkweightsMean, "diploid", outputDir=outputDir)
topValuesKinship <- (sort(s_vector, decreasing=T)-1)/(result$weightsMean-1)
btest <- binom.test(sum(s_vector>mean(s_vector)), length(s_vector), alternative="less")
c(structurePValue=btest$p.value, var_s=result$var_s_dip, sampleVariance=var(s_vector))
})))
popResults$pop <- rownames(popResults)
popResults$group <- popGroup[popResults$pop,"group"]
pdf(paste0("./plots/s_distributions/",outputDir,"/pValueForPop.pdf"), width=8, height=8)
ggplot(popResults, aes(y=structurePValue, x=pop))+ geom_point(aes(color=group)) + geom_hline(yintercept=.05) + geom_hline(yintercept=.01) +
ggtitle("p-value for structure in each population") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
dev.off()
ggplot(subset(popResults,!pop%in%c("PEL","MXL","ASW","PUR")), aes(y=var_s, x=sampleVariance, label=pop))+ geom_point(col="red", size=5) + geom_text(aes(y=var_s, x=sampleVariance))+ geom_abline() +
xlim(0,.005)+ylim(0,.005)
cor(subset(popResults,!pop%in%c("PEL","MXL","ASW","PUR"))$sampleVariance,subset(popResults,!pop%in%c("PEL","MXL","ASW","PUR"))$var_s)
varianceRatio <- popResults$sampleVariance/popResults$var_s
names(varianceRatio)<-rownames(popResults)
cbind(sort(varianceRatio, decreasing = TRUE))
sum(popResults$structurePValue<.01)
popResults$structurePValue[popResults$structurePValue<.01]
rownames(popResults)[popResults$structurePValue<.01]
popResults <- popResults[order(popResults$structurePValue),]
ggplot(popResults, aes(y=structurePValue, x=pop))+ geom_point(aes(color=group)) + geom_hline(yintercept=.05) + geom_hline(yintercept=.01) +
ggtitle("p-value for structure in each population") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(popResults, aes(y=structurePValue, x=pop))+ geom_point(aes(color=group)) + geom_hline(yintercept=.05) + geom_hline(yintercept=.01) +
ggtitle("p-value for structure in each population") + theme_bw()
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(popResults, aes(y=structurePValue, x=pop))+ geom_point(aes(color=group)) + geom_hline(yintercept=.05) + geom_hline(yintercept=.01) +
ggtitle("p-value for structure in each population") + theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
outputDir
outputDir <- filtered99_TGP2261_LD10
popResults <- as.data.frame(t(sapply(unique(pop),function(pop_i){
result <- readRDS(paste0("./plots/s_distributions/",outputDir,"/plotdata/",pop_i, "_data.rds"))
s_vector <- result$s_matrix_dip[row(result$s_matrix_dip)>col(result$s_matrix_dip)]
plotFromGSM(subpop=pop_i, gsm=result$s_matrix_dip, var_s=var(s_vector), pkweightsMean=result$pkweightsMean, "diploid", outputDir=outputDir)
topValuesKinship <- (sort(s_vector, decreasing=T)-1)/(result$weightsMean-1)
btest <- binom.test(sum(s_vector>mean(s_vector)), length(s_vector), alternative="less")
c(structurePValue=btest$p.value, var_s=result$var_s_dip, sampleVariance=var(s_vector))
})))
popResults$pop <- rownames(popResults)
popResults$group <- popGroup[popResults$pop,"group"]
pdf(paste0("./plots/s_distributions/",outputDir,"/pValueForPop.pdf"), width=8, height=8)
ggplot(popResults, aes(y=structurePValue, x=pop))+ geom_point(aes(color=group)) + geom_hline(yintercept=.05) + geom_hline(yintercept=.01) +
ggtitle("p-value for structure in each population") + theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
dev.off()
# ggplot(subset(popResults,!pop%in%c("PEL","MXL","ASW","PUR")), aes(y=var_s, x=sampleVariance, label=pop))+ geom_point(col="red", size=5) + geom_text(aes(y=var_s, x=sampleVariance))+ geom_abline() +
#     xlim(0,.005)+ylim(0,.005)
cor(subset(popResults,!pop%in%c("PEL","MXL","ASW","PUR"))$sampleVariance,subset(popResults,!pop%in%c("PEL","MXL","ASW","PUR"))$var_s)
varianceRatio <- popResults$sampleVariance/popResults$var_s
names(varianceRatio)<-rownames(popResults)
cbind(sort(varianceRatio, decreasing = TRUE))
sum(popResults$structurePValue<.01)
popResults$structurePValue[popResults$structurePValue<.01]
rownames(popResults)[popResults$structurePValue<.01]
popResults <- popResults[order(popResults$structurePValue),]
ggplot(popResults, aes(y=structurePValue, x=pop))+ geom_point(aes(color=group)) + geom_hline(yintercept=.05) + geom_hline(yintercept=.01) +
ggtitle("p-value for structure in each population") + theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
outputDir
outputDir <- filtered99_TGP2261_LD10
outputDir <- "filtered99_TGP2261_LD10"
popResults <- as.data.frame(t(sapply(unique(pop),function(pop_i){
result <- readRDS(paste0("./plots/s_distributions/",outputDir,"/plotdata/",pop_i, "_data.rds"))
s_vector <- result$s_matrix_dip[row(result$s_matrix_dip)>col(result$s_matrix_dip)]
plotFromGSM(subpop=pop_i, gsm=result$s_matrix_dip, var_s=var(s_vector), pkweightsMean=result$pkweightsMean, "diploid", outputDir=outputDir)
topValuesKinship <- (sort(s_vector, decreasing=T)-1)/(result$weightsMean-1)
btest <- binom.test(sum(s_vector>mean(s_vector)), length(s_vector), alternative="less")
c(structurePValue=btest$p.value, var_s=result$var_s_dip, sampleVariance=var(s_vector))
})))
popResults$pop <- rownames(popResults)
popResults$group <- popGroup[popResults$pop,"group"]
pdf(paste0("./plots/s_distributions/",outputDir,"/pValueForPop.pdf"), width=8, height=8)
ggplot(popResults, aes(y=structurePValue, x=pop))+ geom_point(aes(color=group)) + geom_hline(yintercept=.05) + geom_hline(yintercept=.01) +
ggtitle("p-value for structure in each population") + theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
dev.off()
# ggplot(subset(popResults,!pop%in%c("PEL","MXL","ASW","PUR")), aes(y=var_s, x=sampleVariance, label=pop))+ geom_point(col="red", size=5) + geom_text(aes(y=var_s, x=sampleVariance))+ geom_abline() +
#     xlim(0,.005)+ylim(0,.005)
cor(subset(popResults,!pop%in%c("PEL","MXL","ASW","PUR"))$sampleVariance,subset(popResults,!pop%in%c("PEL","MXL","ASW","PUR"))$var_s)
varianceRatio <- popResults$sampleVariance/popResults$var_s
names(varianceRatio)<-rownames(popResults)
cbind(sort(varianceRatio, decreasing = TRUE))
sum(popResults$structurePValue<.01)
popResults$structurePValue[popResults$structurePValue<.01]
rownames(popResults)[popResults$structurePValue<.01]
popResults <- popResults[order(popResults$structurePValue),]
popResults$pop <- rownames(popResults)
popResults$group <- popGroup[popResults$pop,"group"]
pdf(paste0("./plots/s_distributions/",outputDir,"/pValueForPop.pdf"), width=8, height=8)
ggplot(popResults, aes(y=structurePValue, x=pop))+ geom_point(aes(color=group)) + geom_hline(yintercept=.05) + geom_hline(yintercept=.01) +
ggtitle("p-value for structure in each population") + theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
dev.off()
outputDir
sapply(unique(pop),function(pop_i){
plotFromGSM(subpop=pop_i, gsm=result$s_matrix_dip, var_s=var(s_vector), pkweightsMean=result$pkweightsMean, "diploid", outputDir=outputDir)
})
sapply(unique(pop),function(pop_i){
result <- readRDS(paste0("./plots/s_distributions/",outputDir,"/plotdata/",pop_i, "_data.rds"))
plotFromGSM(subpop=pop_i, gsm=result$s_matrix_dip, var_s=var(s_vector), pkweightsMean=result$pkweightsMean, "diploid", outputDir=outputDir)
})
sapply(unique(pop),function(pop_i){
result <- readRDS(paste0("./plots/s_distributions/",outputDir,"/plotdata/",pop_i, "_data.rds"))
s_vector <- result$s_matrix_dip[row(result$s_matrix_dip)>col(result$s_matrix_dip)]
plotFromGSM(subpop=pop_i, gsm=result$s_matrix_dip, var_s=var(s_vector), pkweightsMean=result$pkweightsMean, "diploid", outputDir=outputDir)
})
popResults <- as.data.frame(t(sapply(unique(pop),function(pop_i){
result <- readRDS(paste0("./plots/s_distributions/",outputDir,"/plotdata/",pop_i, "_data.rds"))
s_vector <- result$s_matrix_dip[row(result$s_matrix_dip)>col(result$s_matrix_dip)]
topValuesKinship <- (sort(s_vector, decreasing=T)-1)/(result$weightsMean-1)
btest <- binom.test(sum(s_vector>mean(s_vector)), length(s_vector), alternative="less")
c(structurePValue=btest$p.value, var_s=result$var_s_dip, sampleVariance=var(s_vector))
})))
popResults
popResults$pop <- rownames(popResults)
popResults$group <- popGroup[popResults$pop,"group"]
pdf(paste0("./plots/s_distributions/",outputDir,"/pValueForPop.pdf"), width=8, height=8)
dev.off()
ggplot(popResults, aes(y=structurePValue, x=pop))+ geom_point(aes(color=group)) + geom_hline(yintercept=.05) + geom_hline(yintercept=.01) +
ggtitle("p-value for structure in each population") + theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
cor(subset(popResults,!pop%in%c("PEL","MXL","ASW","PUR"))$sampleVariance,subset(popResults,!pop%in%c("PEL","MXL","ASW","PUR"))$var_s)
varianceRatio <- popResults$sampleVariance/popResults$var_s
names(varianceRatio)<-rownames(popResults)
cbind(sort(varianceRatio, decreasing = TRUE))
sum(popResults$structurePValue<.01)
popResults$structurePValue[popResults$structurePValue<.01]
rownames(popResults)[popResults$structurePValue<.01]
popResults
popResults <- as.data.table(t(sapply(unique(pop),function(pop_i){
result <- readRDS(paste0("./plots/s_distributions/",outputDir,"/plotdata/",pop_i, "_data.rds"))
s_vector <- result$s_matrix_dip[row(result$s_matrix_dip)>col(result$s_matrix_dip)]
topValuesKinship <- (sort(s_vector, decreasing=T)-1)/(result$weightsMean-1)
btest <- binom.test(sum(s_vector>mean(s_vector)), length(s_vector), alternative="less")
c(structurePValue=btest$p.value, var_s=result$var_s_dip, sampleVariance=var(s_vector))
})))
popResults
popResults <- as.data.table(t(sapply(unique(pop),function(pop_i){
result <- readRDS(paste0("./plots/s_distributions/",outputDir,"/plotdata/",pop_i, "_data.rds"))
s_vector <- result$s_matrix_dip[row(result$s_matrix_dip)>col(result$s_matrix_dip)]
topValuesKinship <- (sort(s_vector, decreasing=T)-1)/(result$weightsMean-1)
btest <- binom.test(sum(s_vector>mean(s_vector)), length(s_vector), alternative="less")
c(structurePValue=btest$p.value, var_s=result$var_s_dip, sampleVariance=var(s_vector))
})), keep.rownames=T)
popResults
names(popResults)[1] <- "pop"
popResults
popResults$group <- popGroup[popResults$pop,"group"]
popResults
ggplot(popResults, aes(y=structurePValue, x=pop))+ geom_point(aes(color=group)) + geom_hline(yintercept=.05) + geom_hline(yintercept=.01) +
ggtitle("p-value for structure in each population") + theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(popResults, aes(y=structurePValue, x=pop))+ geom_point(aes(color=group)) + geom_hline(yintercept=.05) + geom_hline(yintercept=.01) +
ggtitle("p-value for structure in each population") + theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
dev.off()
cor(subset(popResults,!pop%in%c("PEL","MXL","ASW","PUR"))$sampleVariance,subset(popResults,!pop%in%c("PEL","MXL","ASW","PUR"))$var_s)
varianceRatio <- popResults$sampleVariance/popResults$var_s
names(varianceRatio)<-rownames(popResults)
rownames(popResults)
names(varianceRatio)
varianceRatio
names(varianceRatio)<-popResults$pop
varianceRatio
cbind(sort(varianceRatio, decreasing = TRUE))
sum(popResults$structurePValue<.01)
popResults$structurePValue[popResults$structurePValue<.01]
rownames(popResults)[popResults$structurePValue<.01]
popResults$pop[popResults$structurePValue<.01]
structuredPops <- popResults$pop[popResults$structurePValue<.01]
popResults <- popResults[order(popResults$structurePValue),]
structuredPops <- popResults$pop[popResults$structurePValue<.01]
structuredPops
popResults
ggplot(popResults, aes(y=structurePValue, x=pop))+ geom_point(aes(color=group)) + geom_hline(yintercept=.05) + geom_hline(yintercept=.01) +
ggtitle("p-value for structure in each population") + theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
outputDir <- "filtered99_LD10"
sapply(unique(pop),function(pop_i){
result <- readRDS(paste0("./plots/s_distributions/",outputDir,"/plotdata/",pop_i, "_data.rds"))
s_vector <- result$s_matrix_dip[row(result$s_matrix_dip)>col(result$s_matrix_dip)]
plotFromGSM(subpop=pop_i, gsm=result$s_matrix_dip, var_s=var(s_vector), pkweightsMean=result$pkweightsMean, "diploid", outputDir=outputDir)
})
popResults <- as.data.table(t(sapply(unique(pop),function(pop_i){
result <- readRDS(paste0("./plots/s_distributions/",outputDir,"/plotdata/",pop_i, "_data.rds"))
s_vector <- result$s_matrix_dip[row(result$s_matrix_dip)>col(result$s_matrix_dip)]
topValuesKinship <- (sort(s_vector, decreasing=T)-1)/(result$weightsMean-1)
btest <- binom.test(sum(s_vector>mean(s_vector)), length(s_vector), alternative="less")
c(structurePValue=btest$p.value, var_s=result$var_s_dip, sampleVariance=var(s_vector))
})), keep.rownames=T)
names(popResults)[1] <- "pop"
popResults$group <- popGroup[popResults$pop,"group"]
pdf(paste0("./plots/s_distributions/",outputDir,"/pValueForPop.pdf"), width=8, height=8)
ggplot(popResults, aes(y=structurePValue, x=pop))+ geom_point(aes(color=group)) + geom_hline(yintercept=.05) + geom_hline(yintercept=.01) +
ggtitle("p-value for structure in each population") + theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
dev.off()
ggplot(popResults, aes(y=structurePValue, x=pop))+ geom_point(aes(color=group)) + geom_hline(yintercept=.05) + geom_hline(yintercept=.01) +
ggtitle("p-value for structure in each population") + theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
resTableAll <- data.table(do.call(rbind, lapply(unique(pop),function(pop_i){
result <- readRDS(paste0("./plots/s_distributions/",outputDir,"/plotdata/",pop_i, "_data.rds"))
result$s_matrix_dip[upper.tri(result$s_matrix_dip)] <- NA
diag(result$s_matrix_dip) <- NA
resTable <- melt(result$s_matrix_dip, na.rm=T)
resTable$estimatedCoK <- (resTable$value-1)/(result$pkweightsMean-1)
resTable$pop <- pop_i
colnames(resTable) <- c("SampleID_1","SampleID_2","s","CoK","pop")
resTable
})))
gazal_related <- read.csv("./data/gazal_related.csv")
gazal_related <- data.table(gazal_related)
gazal_related_rev <- copy(gazal_related)
setcolorder(gazal_related_rev, c(2,1,3,4,5))
names(gazal_related_rev)[1:2] <- names(gazal_related_rev)[2:1]
gazal_related <- rbind(gazal_related,gazal_related_rev)
names(gazal_related)[1:2] <- names(resTableAll)[1:2]
resTableAll <- merge(resTableAll,gazal_related, by=names(gazal_related)[1:2],all.x=T)
resTableAll$group <- popGroup[resTableAll$pop,"group"]
resTableAll[order(-CoK)]
sum(!is.na(resTableAll[,INFERED.RELATIONSHIP]))
resTableAll[SampleID_1=="HG00100"]
resTableAll[is.na(resTableAll[["INFERED.RELATIONSHIP"]]),"INFERED.RELATIONSHIP"]<- "Unrelated"
resTableAll$CombinedInfered <- "Unrelated"
resTableAll$CombinedInfered[resTableAll$INFERED.RELATIONSHIP=="CO"] <- "CO"
resTableAll$CombinedInfered[resTableAll$INFERED.RELATIONSHIP=="AV"|resTableAll$INFERED.RELATIONSHIP=="HS"] <- "AV or HS"
resTableAll$CombinedInfered[resTableAll$INFERED.RELATIONSHIP=="FS"|resTableAll$INFERED.RELATIONSHIP=="PO"] <- "FS or PO"
resTableAll[order(-CoK)]
ggplot(resTableAll, aes(CombinedInfered, CoK)) + theme_bw() +
geom_boxplot() + geom_jitter(aes(color=group), alpha=.5) + scale_x_discrete(limits=c("Unrelated","CO","AV or HS", "FS or PO")) +
xlab("Inferred Relationship (Gazal 2015)") + ylab("Estimated kinship") + ggtitle("Our estimated CoK vs Inferred Relationship (Gazal 2015)")
ggplot(subset(resTableAll, pop%in%structuredPops), aes(CombinedInfered, CoK)) + theme_bw() +
geom_boxplot() + geom_jitter(aes(color=group), alpha=.5) + scale_x_discrete(limits=c("Unrelated","CO","AV or HS", "FS or PO")) +
xlab("Inferred Relationship (Gazal 2015)") + ylab("Estimated kinship") + ggtitle("Our estimated CoK vs Inferred Relationship (Gazal 2015)")
structuredPops
ggplot(subset(resTableAll, pop%in%c("PEL","PUR")), aes(CombinedInfered, CoK)) + theme_bw() +
geom_boxplot() + geom_jitter(aes(color=group), alpha=.5) + scale_x_discrete(limits=c("Unrelated","CO","AV or HS", "FS or PO")) +
xlab("Inferred Relationship (Gazal 2015)") + ylab("Estimated kinship") + ggtitle("Our estimated CoK vs Inferred Relationship (Gazal 2015)")
ggplot(subset(resTableAll, !pop%in%c("PEL","PUR")), aes(CombinedInfered, CoK)) + theme_bw() +
geom_boxplot() + geom_jitter(aes(color=group), alpha=.5) + scale_x_discrete(limits=c("Unrelated","CO","AV or HS", "FS or PO")) +
xlab("Inferred Relationship (Gazal 2015)") + ylab("Estimated kinship") + ggtitle("Our estimated CoK vs Inferred Relationship (Gazal 2015)")
ggplot(subset(resTableAll, !pop%in%c("PEL","PUR","CLM")), aes(CombinedInfered, CoK)) + theme_bw() +
geom_boxplot() + geom_jitter(aes(color=group), alpha=.5) + scale_x_discrete(limits=c("Unrelated","CO","AV or HS", "FS or PO")) +
xlab("Inferred Relationship (Gazal 2015)") + ylab("Estimated kinship") + ggtitle("Our estimated CoK vs Inferred Relationship (Gazal 2015)")
outputDir
popResults <- as.data.table(t(sapply(unique(pop),function(pop_i){
result <- readRDS(paste0("./plots/s_distributions/",outputDir,"/plotdata/",pop_i, "_data.rds"))
s_vector <- result$s_matrix_dip[row(result$s_matrix_dip)>col(result$s_matrix_dip)]
topValuesKinship <- (sort(s_vector, decreasing=T)-1)/(result$weightsMean-1)
btest <- binom.test(sum(s_vector>mean(s_vector)), length(s_vector), alternative="less")
c(structurePValue=btest$p.value, var_s=result$var_s_dip, sampleVariance=var(s_vector))
})), keep.rownames=T)
# tidy up and plot structure results --------------------------------------
names(popResults)[1] <- "pop"
popResults$group <- popGroup[popResults$pop,"group"]
pdf(paste0("./plots/s_distributions/",outputDir,"/pValueForPop.pdf"), width=8, height=8)
ggplot(popResults, aes(y=structurePValue, x=pop))+ geom_point(aes(color=group)) + geom_hline(yintercept=.05) + geom_hline(yintercept=.01) +
ggtitle("p-value for structure in each population") + theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
dev.off()
# ggplot(subset(popResults,!pop%in%c("PEL","MXL","ASW","PUR")), aes(y=var_s, x=sampleVariance, label=pop))+ geom_point(col="red", size=5) + geom_text(aes(y=var_s, x=sampleVariance))+ geom_abline() +
#     xlim(0,.005)+ylim(0,.005)
cor(subset(popResults,!pop%in%c("PEL","MXL","ASW","PUR"))$sampleVariance,subset(popResults,!pop%in%c("PEL","MXL","ASW","PUR"))$var_s)
varianceRatio <- popResults$sampleVariance/popResults$var_s
names(varianceRatio)<-popResults$pop
cbind(sort(varianceRatio, decreasing = TRUE))
sum(popResults$structurePValue<.01)
popResults$structurePValue[popResults$structurePValue<.01]
popResults <- popResults[order(popResults$structurePValue),]
structuredPops <- popResults$pop[popResults$structurePValue<.01]
structuredPops
structuredPops <- popResults$pop[popResults$structurePValue<.05]
structuredPops
ggplot(subset(resTableAll, !pop%in%structuredPops), aes(CombinedInfered, CoK)) + theme_bw() +
geom_boxplot() + geom_jitter(aes(color=group), alpha=.5) + scale_x_discrete(limits=c("Unrelated","CO","AV or HS", "FS or PO")) +
xlab("Inferred Relationship (Gazal 2015)") + ylab("Estimated kinship") + ggtitle("Our estimated CoK vs Inferred Relationship (Gazal 2015)")
1000-511
1000-510
490:1000
median(490:1000)
(490:1000)/1000
mean(490:1000)
mean(490:1000)*.511
?fread
library(data.table)
?fread
